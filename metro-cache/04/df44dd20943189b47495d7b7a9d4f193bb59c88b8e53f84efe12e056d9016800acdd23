{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":1,"index":833}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../../lib-vendor/internmap/src/index.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":13,"index":117},"end":{"line":7,"column":66,"index":170}}],"key":"G1zPLzjpXdX4EAL5RnMS9t0NWPk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = mode;\n  function mode(values, valueof) {\n    var counts = new (_$$_REQUIRE(_dependencyMap[1], \"../../../lib-vendor/internmap/src/index.js\").InternMap)();\n    if (valueof === undefined) {\n      for (var value of values) {\n        if (value != null && value >= value) {\n          counts.set(value, (counts.get(value) || 0) + 1);\n        }\n      }\n    } else {\n      var index = -1;\n      for (var _value of values) {\n        if ((_value = valueof(_value, ++index, values)) != null && _value >= _value) {\n          counts.set(_value, (counts.get(_value) || 0) + 1);\n        }\n      }\n    }\n    var modeValue;\n    var modeCount = 0;\n    for (var _ref of counts) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var _value2 = _ref2[0];\n      var count = _ref2[1];\n      if (count > modeCount) {\n        modeCount = count;\n        modeValue = _value2;\n      }\n    }\n    return modeValue;\n  }\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"default"],[8,17,6,15],[8,20,6,18,"mode"],[8,24,6,22],[9,2,8,0],[9,11,8,9,"mode"],[9,15,8,13,"mode"],[9,16,8,14,"values"],[9,22,8,20],[9,24,8,22,"valueof"],[9,31,8,29],[9,33,8,31],[10,4,9,2],[10,8,9,8,"counts"],[10,14,9,14],[10,17,9,17],[10,22,9,21,"_$$_REQUIRE"],[10,33,9,21],[10,34,9,21,"_dependencyMap"],[10,48,9,21],[10,99,9,28,"InternMap"],[10,108,9,37],[10,110,9,38],[10,111,9,39],[11,4,10,2],[11,8,10,6,"valueof"],[11,15,10,13],[11,20,10,18,"undefined"],[11,29,10,27],[11,31,10,29],[12,6,11,4],[12,11,11,9],[12,15,11,13,"value"],[12,20,11,18],[12,24,11,22,"values"],[12,30,11,28],[12,32,11,30],[13,8,12,6],[13,12,12,10,"value"],[13,17,12,15],[13,21,12,19],[13,25,12,23],[13,29,12,27,"value"],[13,34,12,32],[13,38,12,36,"value"],[13,43,12,41],[13,45,12,43],[14,10,13,8,"counts"],[14,16,13,14],[14,17,13,15,"set"],[14,20,13,18],[14,21,13,19,"value"],[14,26,13,24],[14,28,13,26],[14,29,13,27,"counts"],[14,35,13,33],[14,36,13,34,"get"],[14,39,13,37],[14,40,13,38,"value"],[14,45,13,43],[14,46,13,44],[14,50,13,48],[14,51,13,49],[14,55,13,53],[14,56,13,54],[14,57,13,55],[15,8,14,6],[16,6,15,4],[17,4,16,2],[17,5,16,3],[17,11,16,9],[18,6,17,4],[18,10,17,8,"index"],[18,15,17,13],[18,18,17,16],[18,19,17,17],[18,20,17,18],[19,6,18,4],[19,11,18,9],[19,15,18,13,"value"],[19,21,18,18],[19,25,18,22,"values"],[19,31,18,28],[19,33,18,30],[20,8,19,6],[20,12,19,10],[20,13,19,11,"value"],[20,19,19,16],[20,22,19,19,"valueof"],[20,29,19,26],[20,30,19,27,"value"],[20,36,19,32],[20,38,19,34],[20,40,19,36,"index"],[20,45,19,41],[20,47,19,43,"values"],[20,53,19,49],[20,54,19,50],[20,59,19,55],[20,63,19,59],[20,67,19,63,"value"],[20,73,19,68],[20,77,19,72,"value"],[20,83,19,77],[20,85,19,79],[21,10,20,8,"counts"],[21,16,20,14],[21,17,20,15,"set"],[21,20,20,18],[21,21,20,19,"value"],[21,27,20,24],[21,29,20,26],[21,30,20,27,"counts"],[21,36,20,33],[21,37,20,34,"get"],[21,40,20,37],[21,41,20,38,"value"],[21,47,20,43],[21,48,20,44],[21,52,20,48],[21,53,20,49],[21,57,20,53],[21,58,20,54],[21,59,20,55],[22,8,21,6],[23,6,22,4],[24,4,23,2],[25,4,24,2],[25,8,24,6,"modeValue"],[25,17,24,15],[26,4,25,2],[26,8,25,6,"modeCount"],[26,17,25,15],[26,20,25,18],[26,21,25,19],[27,4,26,2],[27,13,26,2,"_ref"],[27,17,26,2],[27,21,26,31,"counts"],[27,27,26,37],[27,29,26,39],[28,6,26,39],[28,10,26,39,"_ref2"],[28,15,26,39],[28,18,26,39,"_slicedToArray"],[28,32,26,39],[28,33,26,39,"_ref"],[28,37,26,39],[29,6,26,39],[29,10,26,14,"value"],[29,17,26,19],[29,20,26,19,"_ref2"],[29,25,26,19],[30,6,26,19],[30,10,26,21,"count"],[30,15,26,26],[30,18,26,26,"_ref2"],[30,23,26,26],[31,6,27,4],[31,10,27,8,"count"],[31,15,27,13],[31,18,27,16,"modeCount"],[31,27,27,25],[31,29,27,27],[32,8,28,6,"modeCount"],[32,17,28,15],[32,20,28,18,"count"],[32,25,28,23],[33,8,29,6,"modeValue"],[33,17,29,15],[33,20,29,18,"value"],[33,27,29,23],[34,6,30,4],[35,4,31,2],[36,4,32,2],[36,11,32,9,"modeValue"],[36,20,32,18],[37,2,33,0],[38,0,33,1],[38,3]],"functionMap":{"names":["<global>","mode"],"mappings":"AAA;ACO"}},"type":"js/module"}]}