{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n    while (fromRight ? index-- : ++index < length) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n  module.exports = baseFindIndex;\n});","lineCount":24,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,2,12,0],[13,11,12,9,"baseFindIndex"],[13,24,12,22,"baseFindIndex"],[13,25,12,23,"array"],[13,30,12,28],[13,32,12,30,"predicate"],[13,41,12,39],[13,43,12,41,"fromIndex"],[13,52,12,50],[13,54,12,52,"fromRight"],[13,63,12,61],[13,65,12,63],[14,4,13,2],[14,8,13,6,"length"],[14,14,13,12],[14,17,13,15,"array"],[14,22,13,20],[14,23,13,21,"length"],[14,29,13,27],[15,6,14,6,"index"],[15,11,14,11],[15,14,14,14,"fromIndex"],[15,23,14,23],[15,27,14,27,"fromRight"],[15,36,14,36],[15,39,14,39],[15,40,14,40],[15,43,14,43],[15,44,14,44],[15,45,14,45],[15,46,14,46],[16,4,16,2],[16,11,16,10,"fromRight"],[16,20,16,19],[16,23,16,22,"index"],[16,28,16,27],[16,30,16,29],[16,33,16,32],[16,35,16,34,"index"],[16,40,16,39],[16,43,16,42,"length"],[16,49,16,48],[16,51,16,51],[17,6,17,4],[17,10,17,8,"predicate"],[17,19,17,17],[17,20,17,18,"array"],[17,25,17,23],[17,26,17,24,"index"],[17,31,17,29],[17,32,17,30],[17,34,17,32,"index"],[17,39,17,37],[17,41,17,39,"array"],[17,46,17,44],[17,47,17,45],[17,49,17,47],[18,8,18,6],[18,15,18,13,"index"],[18,20,18,18],[19,6,19,4],[20,4,20,2],[21,4,21,2],[21,11,21,9],[21,12,21,10],[21,13,21,11],[22,2,22,0],[23,2,24,0,"module"],[23,8,24,6],[23,9,24,7,"exports"],[23,16,24,14],[23,19,24,17,"baseFindIndex"],[23,32,24,30],[24,0,24,31],[24,3]],"functionMap":{"names":["<global>","baseFindIndex"],"mappings":"AAA;ACW;CDU"}},"type":"js/module"}]}