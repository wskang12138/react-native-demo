{"dependencies":[{"name":"./isArrayLike","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":42,"index":42}}],"key":"VJW2h7tA73hdFQ/lhCvgbqMIDFs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function (collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!_$$_REQUIRE(_dependencyMap[0], \"./isArrayLike\")(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n      while (fromRight ? index-- : ++index < length) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n  module.exports = createBaseEach;\n});","lineCount":30,"map":[[2,2,3,0],[3,0,4,0],[4,0,5,0],[5,0,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,2,11,0],[10,11,11,9,"createBaseEach"],[10,25,11,23,"createBaseEach"],[10,26,11,24,"eachFunc"],[10,34,11,32],[10,36,11,34,"fromRight"],[10,45,11,43],[10,47,11,45],[11,4,12,2],[11,11,12,9],[11,21,12,18,"collection"],[11,31,12,28],[11,33,12,30,"iteratee"],[11,41,12,38],[11,43,12,40],[12,6,13,4],[12,10,13,8,"collection"],[12,20,13,18],[12,24,13,22],[12,28,13,26],[12,30,13,28],[13,8,14,6],[13,15,14,13,"collection"],[13,25,14,23],[14,6,15,4],[15,6,16,4],[15,10,16,8],[15,11,16,9,"_$$_REQUIRE"],[15,22,16,9],[15,23,16,9,"_dependencyMap"],[15,37,16,9],[15,59,16,21,"collection"],[15,69,16,31],[15,70,16,32],[15,72,16,34],[16,8,17,6],[16,15,17,13,"eachFunc"],[16,23,17,21],[16,24,17,22,"collection"],[16,34,17,32],[16,36,17,34,"iteratee"],[16,44,17,42],[16,45,17,43],[17,6,18,4],[18,6,19,4],[18,10,19,8,"length"],[18,16,19,14],[18,19,19,17,"collection"],[18,29,19,27],[18,30,19,28,"length"],[18,36,19,34],[19,8,20,8,"index"],[19,13,20,13],[19,16,20,16,"fromRight"],[19,25,20,25],[19,28,20,28,"length"],[19,34,20,34],[19,37,20,37],[19,38,20,38],[19,39,20,39],[20,8,21,8,"iterable"],[20,16,21,16],[20,19,21,19,"Object"],[20,25,21,25],[20,26,21,26,"collection"],[20,36,21,36],[20,37,21,37],[21,6,23,4],[21,13,23,12,"fromRight"],[21,22,23,21],[21,25,23,24,"index"],[21,30,23,29],[21,32,23,31],[21,35,23,34],[21,37,23,36,"index"],[21,42,23,41],[21,45,23,44,"length"],[21,51,23,50],[21,53,23,53],[22,8,24,6],[22,12,24,10,"iteratee"],[22,20,24,18],[22,21,24,19,"iterable"],[22,29,24,27],[22,30,24,28,"index"],[22,35,24,33],[22,36,24,34],[22,38,24,36,"index"],[22,43,24,41],[22,45,24,43,"iterable"],[22,53,24,51],[22,54,24,52],[22,59,24,57],[22,64,24,62],[22,66,24,64],[23,10,25,8],[24,8,26,6],[25,6,27,4],[26,6,28,4],[26,13,28,11,"collection"],[26,23,28,21],[27,4,29,2],[27,5,29,3],[28,2,30,0],[29,2,32,0,"module"],[29,8,32,6],[29,9,32,7,"exports"],[29,16,32,14],[29,19,32,17,"createBaseEach"],[29,33,32,31],[30,0,32,32],[30,3]],"functionMap":{"names":["<global>","createBaseEach","<anonymous>"],"mappings":"AAA;ACU;SCC;GDiB;CDC"}},"type":"js/module"}]}