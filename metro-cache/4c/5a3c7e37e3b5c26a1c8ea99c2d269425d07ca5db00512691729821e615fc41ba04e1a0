{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":46,"column":1,"index":1427}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../../lib-vendor/d3-array/src/index.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":13,"index":121},"end":{"line":7,"column":65,"index":173}}],"key":"41CiIbbto419EiV4PGEZiajVVfc="}},{"name":"./init.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":12,"index":225},"end":{"line":9,"column":32,"index":245}}],"key":"As6H85ElGz2SiuN/Gj/+jrhHnI8="}},{"name":"./linear.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":14,"index":189},"end":{"line":8,"column":36,"index":211}}],"key":"lMxnyYXqmpCfe3wO77wmwL0AOLM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = quantize;\n  function quantize() {\n    var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n    function scale(x) {\n      return x != null && x <= x ? range[(0, _$$_REQUIRE(_dependencyMap[1], \"../../../lib-vendor/d3-array/src/index.js\").bisect)(domain, x, 0, n)] : unknown;\n    }\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n    scale.domain = function (_) {\n      var _ref;\n      return arguments.length ? (_ref = _slicedToArray(_, 2), x0 = _ref[0], x1 = _ref[1], x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n    };\n    scale.range = function (_) {\n      return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n    };\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];\n    };\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : scale;\n    };\n    scale.thresholds = function () {\n      return domain.slice();\n    };\n    scale.copy = function () {\n      return quantize().domain([x0, x1]).range(range).unknown(unknown);\n    };\n    return _$$_REQUIRE(_dependencyMap[2], \"./init.js\").initRange.apply((0, _$$_REQUIRE(_dependencyMap[3], \"./linear.js\").linearish)(scale), arguments);\n  }\n});","lineCount":47,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"default"],[8,17,6,15],[8,20,6,18,"quantize"],[8,28,6,26],[9,2,10,0],[9,11,10,9,"quantize"],[9,19,10,17,"quantize"],[9,20,10,17],[9,22,10,20],[10,4,11,2],[10,8,11,6,"x0"],[10,10,11,8],[10,13,11,11],[10,14,11,12],[11,6,12,4,"x1"],[11,8,12,6],[11,11,12,9],[11,12,12,10],[12,6,13,4,"n"],[12,7,13,5],[12,10,13,8],[12,11,13,9],[13,6,14,4,"domain"],[13,12,14,10],[13,15,14,13],[13,16,14,14],[13,19,14,17],[13,20,14,18],[14,6,15,4,"range"],[14,11,15,9],[14,14,15,12],[14,15,15,13],[14,16,15,14],[14,18,15,16],[14,19,15,17],[14,20,15,18],[15,6,16,4,"unknown"],[15,13,16,11],[16,4,17,2],[16,13,17,11,"scale"],[16,18,17,16,"scale"],[16,19,17,17,"x"],[16,20,17,18],[16,22,17,20],[17,6,18,4],[17,13,18,11,"x"],[17,14,18,12],[17,18,18,16],[17,22,18,20],[17,26,18,24,"x"],[17,27,18,25],[17,31,18,29,"x"],[17,32,18,30],[17,35,18,33,"range"],[17,40,18,38],[17,41,18,39],[17,42,18,40],[17,43,18,41],[17,45,18,43,"_$$_REQUIRE"],[17,56,18,43],[17,57,18,43,"_dependencyMap"],[17,71,18,43],[17,121,18,50,"bisect"],[17,127,18,56],[17,129,18,58,"domain"],[17,135,18,64],[17,137,18,66,"x"],[17,138,18,67],[17,140,18,69],[17,141,18,70],[17,143,18,72,"n"],[17,144,18,73],[17,145,18,74],[17,146,18,75],[17,149,18,78,"unknown"],[17,156,18,85],[18,4,19,2],[19,4,20,2],[19,13,20,11,"rescale"],[19,20,20,18,"rescale"],[19,21,20,18],[19,23,20,21],[20,6,21,4],[20,10,21,8,"i"],[20,11,21,9],[20,14,21,12],[20,15,21,13],[20,16,21,14],[21,6,22,4,"domain"],[21,12,22,10],[21,15,22,13],[21,19,22,17,"Array"],[21,24,22,22],[21,25,22,23,"n"],[21,26,22,24],[21,27,22,25],[22,6,23,4],[22,13,23,11],[22,15,23,13,"i"],[22,16,23,14],[22,19,23,17,"n"],[22,20,23,18],[22,22,23,20,"domain"],[22,28,23,26],[22,29,23,27,"i"],[22,30,23,28],[22,31,23,29],[22,34,23,32],[22,35,23,33],[22,36,23,34,"i"],[22,37,23,35],[22,40,23,38],[22,41,23,39],[22,45,23,43,"x1"],[22,47,23,45],[22,50,23,48],[22,51,23,49,"i"],[22,52,23,50],[22,55,23,53,"n"],[22,56,23,54],[22,60,23,58,"x0"],[22,62,23,60],[22,67,23,65,"n"],[22,68,23,66],[22,71,23,69],[22,72,23,70],[22,73,23,71],[23,6,24,4],[23,13,24,11,"scale"],[23,18,24,16],[24,4,25,2],[25,4,26,2,"scale"],[25,9,26,7],[25,10,26,8,"domain"],[25,16,26,14],[25,19,26,17],[25,29,26,27,"_"],[25,30,26,28],[25,32,26,30],[26,6,26,30],[26,10,26,30,"_ref"],[26,14,26,30],[27,6,27,4],[27,13,27,11,"arguments"],[27,22,27,20],[27,23,27,21,"length"],[27,29,27,27],[27,33,27,31,"_ref"],[27,37,27,31],[27,40,27,31,"_slicedToArray"],[27,54,27,31],[27,55,27,42,"_"],[27,56,27,43],[27,62,27,32,"x0"],[27,64,27,34],[27,67,27,34,"_ref"],[27,71,27,34],[27,76,27,36,"x1"],[27,78,27,38],[27,81,27,38,"_ref"],[27,85,27,38],[27,90,27,45,"x0"],[27,92,27,47],[27,95,27,50],[27,96,27,51,"x0"],[27,98,27,53],[27,100,27,55,"x1"],[27,102,27,57],[27,105,27,60],[27,106,27,61,"x1"],[27,108,27,63],[27,110,27,65,"rescale"],[27,117,27,72],[27,118,27,73],[27,119,27,74],[27,123,27,78],[27,124,27,79,"x0"],[27,126,27,81],[27,128,27,83,"x1"],[27,130,27,85],[27,131,27,86],[28,4,28,2],[28,5,28,3],[29,4,29,2,"scale"],[29,9,29,7],[29,10,29,8,"range"],[29,15,29,13],[29,18,29,16],[29,28,29,26,"_"],[29,29,29,27],[29,31,29,29],[30,6,30,4],[30,13,30,11,"arguments"],[30,22,30,20],[30,23,30,21,"length"],[30,29,30,27],[30,33,30,31,"n"],[30,34,30,32],[30,37,30,35],[30,38,30,36,"range"],[30,43,30,41],[30,46,30,44,"Array"],[30,51,30,49],[30,52,30,50,"from"],[30,56,30,54],[30,57,30,55,"_"],[30,58,30,56],[30,59,30,57],[30,61,30,59,"length"],[30,67,30,65],[30,70,30,68],[30,71,30,69],[30,73,30,71,"rescale"],[30,80,30,78],[30,81,30,79],[30,82,30,80],[30,86,30,84,"range"],[30,91,30,89],[30,92,30,90,"slice"],[30,97,30,95],[30,98,30,96],[30,99,30,97],[31,4,31,2],[31,5,31,3],[32,4,32,2,"scale"],[32,9,32,7],[32,10,32,8,"invertExtent"],[32,22,32,20],[32,25,32,23],[32,35,32,33,"y"],[32,36,32,34],[32,38,32,36],[33,6,33,4],[33,10,33,8,"i"],[33,11,33,9],[33,14,33,12,"range"],[33,19,33,17],[33,20,33,18,"indexOf"],[33,27,33,25],[33,28,33,26,"y"],[33,29,33,27],[33,30,33,28],[34,6,34,4],[34,13,34,11,"i"],[34,14,34,12],[34,17,34,15],[34,18,34,16],[34,21,34,19],[34,22,34,20,"NaN"],[34,25,34,23],[34,27,34,25,"NaN"],[34,30,34,28],[34,31,34,29],[34,34,34,32,"i"],[34,35,34,33],[34,38,34,36],[34,39,34,37],[34,42,34,40],[34,43,34,41,"x0"],[34,45,34,43],[34,47,34,45,"domain"],[34,53,34,51],[34,54,34,52],[34,55,34,53],[34,56,34,54],[34,57,34,55],[34,60,34,58,"i"],[34,61,34,59],[34,65,34,63,"n"],[34,66,34,64],[34,69,34,67],[34,70,34,68,"domain"],[34,76,34,74],[34,77,34,75,"n"],[34,78,34,76],[34,81,34,79],[34,82,34,80],[34,83,34,81],[34,85,34,83,"x1"],[34,87,34,85],[34,88,34,86],[34,91,34,89],[34,92,34,90,"domain"],[34,98,34,96],[34,99,34,97,"i"],[34,100,34,98],[34,103,34,101],[34,104,34,102],[34,105,34,103],[34,107,34,105,"domain"],[34,113,34,111],[34,114,34,112,"i"],[34,115,34,113],[34,116,34,114],[34,117,34,115],[35,4,35,2],[35,5,35,3],[36,4,36,2,"scale"],[36,9,36,7],[36,10,36,8,"unknown"],[36,17,36,15],[36,20,36,18],[36,30,36,28,"_"],[36,31,36,29],[36,33,36,31],[37,6,37,4],[37,13,37,11,"arguments"],[37,22,37,20],[37,23,37,21,"length"],[37,29,37,27],[37,33,37,31,"unknown"],[37,40,37,38],[37,43,37,41,"_"],[37,44,37,42],[37,46,37,44,"scale"],[37,51,37,49],[37,55,37,53,"scale"],[37,60,37,58],[38,4,38,2],[38,5,38,3],[39,4,39,2,"scale"],[39,9,39,7],[39,10,39,8,"thresholds"],[39,20,39,18],[39,23,39,21],[39,35,39,33],[40,6,40,4],[40,13,40,11,"domain"],[40,19,40,17],[40,20,40,18,"slice"],[40,25,40,23],[40,26,40,24],[40,27,40,25],[41,4,41,2],[41,5,41,3],[42,4,42,2,"scale"],[42,9,42,7],[42,10,42,8,"copy"],[42,14,42,12],[42,17,42,15],[42,29,42,27],[43,6,43,4],[43,13,43,11,"quantize"],[43,21,43,19],[43,22,43,20],[43,23,43,21],[43,24,43,22,"domain"],[43,30,43,28],[43,31,43,29],[43,32,43,30,"x0"],[43,34,43,32],[43,36,43,34,"x1"],[43,38,43,36],[43,39,43,37],[43,40,43,38],[43,41,43,39,"range"],[43,46,43,44],[43,47,43,45,"range"],[43,52,43,50],[43,53,43,51],[43,54,43,52,"unknown"],[43,61,43,59],[43,62,43,60,"unknown"],[43,69,43,67],[43,70,43,68],[44,4,44,2],[44,5,44,3],[45,4,45,2],[45,11,45,9,"_$$_REQUIRE"],[45,22,45,9],[45,23,45,9,"_dependencyMap"],[45,37,45,9],[45,55,45,15,"initRange"],[45,64,45,24],[45,65,45,25,"apply"],[45,70,45,30],[45,71,45,31],[45,72,45,32],[45,73,45,33],[45,75,45,35,"_$$_REQUIRE"],[45,86,45,35],[45,87,45,35,"_dependencyMap"],[45,101,45,35],[45,121,45,43,"linearish"],[45,130,45,52],[45,132,45,54,"scale"],[45,137,45,59],[45,138,45,60],[45,140,45,62,"arguments"],[45,149,45,71],[45,150,45,72],[46,2,46,0],[47,0,46,1],[47,3]],"functionMap":{"names":["<global>","quantize","scale","rescale","scale.domain","scale.range","scale.invertExtent","scale.unknown","scale.thresholds","scale.copy"],"mappings":"AAA;ACS;ECO;GDE;EEC;GFK;iBGC;GHE;gBIC;GJE;uBKC;GLG;kBMC;GNE;qBOC;GPE;eQC;GRE"}},"type":"js/module"}]}