{"dependencies":[{"name":"./continuous.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":18,"index":203},"end":{"line":8,"column":44,"index":229}}],"key":"qLlilZB1tXDRDZpOQx1899VpnL8="}},{"name":"../../../lib-vendor/d3-array/src/index.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":13,"index":131},"end":{"line":7,"column":65,"index":183}},{"start":{"line":7,"column":13,"index":131},"end":{"line":7,"column":65,"index":183}},{"start":{"line":7,"column":13,"index":131},"end":{"line":7,"column":65,"index":183}}],"key":"41CiIbbto419EiV4PGEZiajVVfc="}},{"name":"./init.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":12,"index":243},"end":{"line":9,"column":32,"index":263}}],"key":"As6H85ElGz2SiuN/Gj/+jrhHnI8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = sequentialQuantile;\n  function sequentialQuantile() {\n    var domain = [],\n      interpolator = _$$_REQUIRE(_dependencyMap[0], \"./continuous.js\").identity;\n    function scale(x) {\n      if (x != null && !isNaN(x = +x)) return interpolator(((0, _$$_REQUIRE(_dependencyMap[1], \"../../../lib-vendor/d3-array/src/index.js\").bisect)(domain, x, 1) - 1) / (domain.length - 1));\n    }\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(_$$_REQUIRE(_dependencyMap[1], \"../../../lib-vendor/d3-array/src/index.js\").ascending);\n      return scale;\n    };\n    scale.interpolator = function (_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n    scale.range = function () {\n      return domain.map(function (d, i) {\n        return interpolator(i / (domain.length - 1));\n      });\n    };\n    scale.quantiles = function (n) {\n      return Array.from({\n        length: n + 1\n      }, function (_, i) {\n        return (0, _$$_REQUIRE(_dependencyMap[1], \"../../../lib-vendor/d3-array/src/index.js\").quantile)(domain, i / n);\n      });\n    };\n    scale.copy = function () {\n      return sequentialQuantile(interpolator).domain(domain);\n    };\n    return _$$_REQUIRE(_dependencyMap[2], \"./init.js\").initInterpolator.apply(scale, arguments);\n  }\n});","lineCount":41,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"sequentialQuantile"],[7,38,6,36],[8,2,10,0],[8,11,10,9,"sequentialQuantile"],[8,29,10,27,"sequentialQuantile"],[8,30,10,27],[8,32,10,30],[9,4,11,2],[9,8,11,6,"domain"],[9,14,11,12],[9,17,11,15],[9,19,11,17],[10,6,12,4,"interpolator"],[10,18,12,16],[10,21,12,19,"_$$_REQUIRE"],[10,32,12,19],[10,33,12,19,"_dependencyMap"],[10,47,12,19],[10,71,12,31,"identity"],[10,79,12,39],[11,4,13,2],[11,13,13,11,"scale"],[11,18,13,16,"scale"],[11,19,13,17,"x"],[11,20,13,18],[11,22,13,20],[12,6,14,4],[12,10,14,8,"x"],[12,11,14,9],[12,15,14,13],[12,19,14,17],[12,23,14,21],[12,24,14,22,"isNaN"],[12,29,14,27],[12,30,14,28,"x"],[12,31,14,29],[12,34,14,32],[12,35,14,33,"x"],[12,36,14,34],[12,37,14,35],[12,39,14,37],[12,46,14,44,"interpolator"],[12,58,14,56],[12,59,14,57],[12,60,14,58],[12,61,14,59],[12,62,14,60],[12,64,14,62,"_$$_REQUIRE"],[12,75,14,62],[12,76,14,62,"_dependencyMap"],[12,90,14,62],[12,140,14,69,"bisect"],[12,146,14,75],[12,148,14,77,"domain"],[12,154,14,83],[12,156,14,85,"x"],[12,157,14,86],[12,159,14,88],[12,160,14,89],[12,161,14,90],[12,164,14,93],[12,165,14,94],[12,170,14,99,"domain"],[12,176,14,105],[12,177,14,106,"length"],[12,183,14,112],[12,186,14,115],[12,187,14,116],[12,188,14,117],[12,189,14,118],[13,4,15,2],[14,4,16,2,"scale"],[14,9,16,7],[14,10,16,8,"domain"],[14,16,16,14],[14,19,16,17],[14,29,16,27,"_"],[14,30,16,28],[14,32,16,30],[15,6,17,4],[15,10,17,8],[15,11,17,9,"arguments"],[15,20,17,18],[15,21,17,19,"length"],[15,27,17,25],[15,29,17,27],[15,36,17,34,"domain"],[15,42,17,40],[15,43,17,41,"slice"],[15,48,17,46],[15,49,17,47],[15,50,17,48],[16,6,18,4,"domain"],[16,12,18,10],[16,15,18,13],[16,17,18,15],[17,6,19,4],[17,11,19,9],[17,15,19,13,"d"],[17,16,19,14],[17,20,19,18,"_"],[17,21,19,19],[17,23,19,21],[17,27,19,25,"d"],[17,28,19,26],[17,32,19,30],[17,36,19,34],[17,40,19,38],[17,41,19,39,"isNaN"],[17,46,19,44],[17,47,19,45,"d"],[17,48,19,46],[17,51,19,49],[17,52,19,50,"d"],[17,53,19,51],[17,54,19,52],[17,56,19,54,"domain"],[17,62,19,60],[17,63,19,61,"push"],[17,67,19,65],[17,68,19,66,"d"],[17,69,19,67],[17,70,19,68],[18,6,20,4,"domain"],[18,12,20,10],[18,13,20,11,"sort"],[18,17,20,15],[18,18,20,16,"_$$_REQUIRE"],[18,29,20,16],[18,30,20,16,"_dependencyMap"],[18,44,20,16],[18,94,20,23,"ascending"],[18,103,20,32],[18,104,20,33],[19,6,21,4],[19,13,21,11,"scale"],[19,18,21,16],[20,4,22,2],[20,5,22,3],[21,4,23,2,"scale"],[21,9,23,7],[21,10,23,8,"interpolator"],[21,22,23,20],[21,25,23,23],[21,35,23,33,"_"],[21,36,23,34],[21,38,23,36],[22,6,24,4],[22,13,24,11,"arguments"],[22,22,24,20],[22,23,24,21,"length"],[22,29,24,27],[22,33,24,31,"interpolator"],[22,45,24,43],[22,48,24,46,"_"],[22,49,24,47],[22,51,24,49,"scale"],[22,56,24,54],[22,60,24,58,"interpolator"],[22,72,24,70],[23,4,25,2],[23,5,25,3],[24,4,26,2,"scale"],[24,9,26,7],[24,10,26,8,"range"],[24,15,26,13],[24,18,26,16],[24,30,26,28],[25,6,27,4],[25,13,27,11,"domain"],[25,19,27,17],[25,20,27,18,"map"],[25,23,27,21],[25,24,27,22],[25,34,27,23,"d"],[25,35,27,24],[25,37,27,26,"i"],[25,38,27,27],[26,8,27,27],[26,15,27,32,"interpolator"],[26,27,27,44],[26,28,27,45,"i"],[26,29,27,46],[26,33,27,50,"domain"],[26,39,27,56],[26,40,27,57,"length"],[26,46,27,63],[26,49,27,66],[26,50,27,67],[26,51,27,68],[26,52,27,69],[27,6,27,69],[27,8,27,70],[28,4,28,2],[28,5,28,3],[29,4,29,2,"scale"],[29,9,29,7],[29,10,29,8,"quantiles"],[29,19,29,17],[29,22,29,20],[29,32,29,30,"n"],[29,33,29,31],[29,35,29,33],[30,6,30,4],[30,13,30,11,"Array"],[30,18,30,16],[30,19,30,17,"from"],[30,23,30,21],[30,24,30,22],[31,8,31,6,"length"],[31,14,31,12],[31,16,31,14,"n"],[31,17,31,15],[31,20,31,18],[32,6,32,4],[32,7,32,5],[32,9,32,7],[32,19,32,8,"_"],[32,20,32,9],[32,22,32,11,"i"],[32,23,32,12],[33,8,32,12],[33,15,32,17],[33,16,32,18],[33,17,32,19],[33,19,32,21,"_$$_REQUIRE"],[33,30,32,21],[33,31,32,21,"_dependencyMap"],[33,45,32,21],[33,95,32,28,"quantile"],[33,103,32,36],[33,105,32,38,"domain"],[33,111,32,44],[33,113,32,46,"i"],[33,114,32,47],[33,117,32,50,"n"],[33,118,32,51],[33,119,32,52],[34,6,32,52],[34,8,32,53],[35,4,33,2],[35,5,33,3],[36,4,34,2,"scale"],[36,9,34,7],[36,10,34,8,"copy"],[36,14,34,12],[36,17,34,15],[36,29,34,27],[37,6,35,4],[37,13,35,11,"sequentialQuantile"],[37,31,35,29],[37,32,35,30,"interpolator"],[37,44,35,42],[37,45,35,43],[37,46,35,44,"domain"],[37,52,35,50],[37,53,35,51,"domain"],[37,59,35,57],[37,60,35,58],[38,4,36,2],[38,5,36,3],[39,4,37,2],[39,11,37,9,"_$$_REQUIRE"],[39,22,37,9],[39,23,37,9,"_dependencyMap"],[39,37,37,9],[39,55,37,15,"initInterpolator"],[39,71,37,31],[39,72,37,32,"apply"],[39,77,37,37],[39,78,37,38,"scale"],[39,83,37,43],[39,85,37,45,"arguments"],[39,94,37,54],[39,95,37,55],[40,2,38,0],[41,0,38,1],[41,3]],"functionMap":{"names":["<global>","sequentialQuantile","scale","scale.domain","scale.interpolator","scale.range","domain.map$argument_0","scale.quantiles","Array.from$argument_1","scale.copy"],"mappings":"AAA;ACS;ECG;GDE;iBEC;GFM;uBGC;GHE;gBIC;sBCC,+CD;GJC;oBMC;OCG,6CD;GNC;eQC;GRE"}},"type":"js/module"}]}