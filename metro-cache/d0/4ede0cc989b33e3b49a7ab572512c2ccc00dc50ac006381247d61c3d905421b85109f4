{"dependencies":[{"name":"./helpers","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"i3mHyGjhjetx6kDYbiBmJL31Sss="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.mergeRefs = mergeRefs;\n  var Helpers = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"./helpers\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Used to merge multiple React refs into a single callback ref.\n   *\n   * @example\n   * ```tsx\n   * <div ref={mergeRefs([ref, forwardedRef])} />\n   * ```\n   */\n  function mergeRefs(refs) {\n    return function (value) {\n      refs.forEach(function (ref) {\n        // If the ref is a function, it's a callback ref and we call it with the value.\n        if (Helpers.isFunction(ref)) {\n          ref(value);\n        } else if (ref !== null && ref !== undefined) {\n          // If the ref is an object (not null and not undefined), it's an object ref.\n          // We assign the value to its 'current' property.\n          ref.current = value;\n        }\n      });\n    };\n  }\n});","lineCount":31,"map":[[6,2,1,0],[6,6,1,0,"Helpers"],[6,13,1,0],[6,16,1,0,"_interopRequireWildcard"],[6,39,1,0],[6,40,1,0,"_$$_REQUIRE"],[6,51,1,0],[6,52,1,0,"_dependencyMap"],[6,66,1,0],[7,2,1,37],[7,11,1,37,"_getRequireWildcardCache"],[7,36,1,37,"e"],[7,37,1,37],[7,66,1,37,"WeakMap"],[7,73,1,37],[7,92,1,37,"r"],[7,93,1,37],[7,100,1,37,"WeakMap"],[7,107,1,37],[7,111,1,37,"t"],[7,112,1,37],[7,119,1,37,"WeakMap"],[7,126,1,37],[7,138,1,37,"_getRequireWildcardCache"],[7,162,1,37],[7,174,1,37,"_getRequireWildcardCache"],[7,199,1,37,"e"],[7,200,1,37],[7,211,1,37,"e"],[7,212,1,37],[7,215,1,37,"t"],[7,216,1,37],[7,219,1,37,"r"],[7,220,1,37],[7,225,1,37,"e"],[7,226,1,37],[8,2,1,37],[8,11,1,37,"_interopRequireWildcard"],[8,35,1,37,"e"],[8,36,1,37],[8,38,1,37,"r"],[8,39,1,37],[8,48,1,37,"r"],[8,49,1,37],[8,53,1,37,"e"],[8,54,1,37],[8,58,1,37,"e"],[8,59,1,37],[8,60,1,37,"__esModule"],[8,70,1,37],[8,79,1,37,"e"],[8,80,1,37],[8,95,1,37,"e"],[8,96,1,37],[8,119,1,37,"e"],[8,120,1,37],[8,145,1,37,"e"],[8,146,1,37],[8,157,1,37,"default"],[8,164,1,37],[8,166,1,37,"e"],[8,167,1,37],[8,175,1,37,"t"],[8,176,1,37],[8,179,1,37,"_getRequireWildcardCache"],[8,203,1,37],[8,204,1,37,"r"],[8,205,1,37],[8,212,1,37,"t"],[8,213,1,37],[8,217,1,37,"t"],[8,218,1,37],[8,219,1,37,"has"],[8,222,1,37],[8,223,1,37,"e"],[8,224,1,37],[8,234,1,37,"t"],[8,235,1,37],[8,236,1,37,"get"],[8,239,1,37],[8,240,1,37,"e"],[8,241,1,37],[8,248,1,37,"n"],[8,249,1,37],[8,254,1,37,"__proto__"],[8,263,1,37],[8,273,1,37,"a"],[8,274,1,37],[8,277,1,37,"Object"],[8,283,1,37],[8,284,1,37,"defineProperty"],[8,298,1,37],[8,302,1,37,"Object"],[8,308,1,37],[8,309,1,37,"getOwnPropertyDescriptor"],[8,333,1,37],[8,344,1,37,"u"],[8,345,1,37],[8,349,1,37,"e"],[8,350,1,37],[8,370,1,37,"u"],[8,371,1,37],[8,378,1,37,"hasOwnProperty"],[8,392,1,37],[8,393,1,37,"call"],[8,397,1,37],[8,398,1,37,"e"],[8,399,1,37],[8,401,1,37,"u"],[8,402,1,37],[8,411,1,37,"i"],[8,412,1,37],[8,415,1,37,"a"],[8,416,1,37],[8,419,1,37,"Object"],[8,425,1,37],[8,426,1,37,"getOwnPropertyDescriptor"],[8,450,1,37],[8,451,1,37,"e"],[8,452,1,37],[8,454,1,37,"u"],[8,455,1,37],[8,465,1,37,"i"],[8,466,1,37],[8,471,1,37,"i"],[8,472,1,37],[8,473,1,37,"get"],[8,476,1,37],[8,480,1,37,"i"],[8,481,1,37],[8,482,1,37,"set"],[8,485,1,37],[8,489,1,37,"Object"],[8,495,1,37],[8,496,1,37,"defineProperty"],[8,510,1,37],[8,511,1,37,"n"],[8,512,1,37],[8,514,1,37,"u"],[8,515,1,37],[8,517,1,37,"i"],[8,518,1,37],[8,522,1,37,"n"],[8,523,1,37],[8,524,1,37,"u"],[8,525,1,37],[8,529,1,37,"e"],[8,530,1,37],[8,531,1,37,"u"],[8,532,1,37],[8,544,1,37,"n"],[8,545,1,37],[8,546,1,37,"default"],[8,553,1,37],[8,556,1,37,"e"],[8,557,1,37],[8,559,1,37,"t"],[8,560,1,37],[8,564,1,37,"t"],[8,565,1,37],[8,566,1,37,"set"],[8,569,1,37],[8,570,1,37,"e"],[8,571,1,37],[8,573,1,37,"n"],[8,574,1,37],[8,577,1,37,"n"],[8,578,1,37],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,2,10,7],[17,11,10,16,"mergeRefs"],[17,20,10,25,"mergeRefs"],[17,21,10,26,"refs"],[17,25,10,30],[17,27,10,32],[18,4,11,2],[18,11,11,9],[18,21,11,9,"value"],[18,26,11,14],[18,28,11,18],[19,6,12,4,"refs"],[19,10,12,8],[19,11,12,9,"forEach"],[19,18,12,16],[19,19,12,17],[19,29,12,17,"ref"],[19,32,12,20],[19,34,12,24],[20,8,13,6],[21,8,14,6],[21,12,14,10,"Helpers"],[21,19,14,17],[21,20,14,18,"isFunction"],[21,30,14,28],[21,31,14,29,"ref"],[21,34,14,32],[21,35,14,33],[21,37,14,35],[22,10,15,8,"ref"],[22,13,15,11],[22,14,15,12,"value"],[22,19,15,17],[22,20,15,18],[23,8,16,6],[23,9,16,7],[23,15,16,13],[23,19,16,17,"ref"],[23,22,16,20],[23,27,16,25],[23,31,16,29],[23,35,16,33,"ref"],[23,38,16,36],[23,43,16,41,"undefined"],[23,52,16,50],[23,54,16,52],[24,10,17,8],[25,10,18,8],[26,10,19,8,"ref"],[26,13,19,11],[26,14,19,12,"current"],[26,21,19,19],[26,24,19,22,"value"],[26,29,19,27],[27,8,20,6],[28,6,21,4],[28,7,21,5],[28,8,21,6],[29,4,22,2],[29,5,22,3],[30,2,23,0],[31,0,23,1],[31,3]],"functionMap":{"names":["<global>","mergeRefs","<anonymous>","refs.forEach$argument_0"],"mappings":"AAA;OCS;SCC;iBCC;KDS;GDC"}},"type":"js/module"}]}