{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":35,"column":1,"index":957}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = cross;\n  function length(array) {\n    return array.length | 0;\n  }\n  function empty(length) {\n    return !(length > 0);\n  }\n  function arrayify(values) {\n    return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n  }\n  function reducer(reduce) {\n    return function (values) {\n      return reduce.apply(void 0, _toConsumableArray(values));\n    };\n  }\n  function cross() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    var reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n    values = values.map(arrayify);\n    var lengths = values.map(length);\n    var j = values.length - 1;\n    var index = new Array(j + 1).fill(0);\n    var product = [];\n    if (j < 0 || lengths.some(empty)) return product;\n    while (true) {\n      product.push(index.map(function (j, i) {\n        return values[i][j];\n      }));\n      var i = j;\n      while (++index[i] === lengths[i]) {\n        if (i === 0) return reduce ? product.map(reduce) : product;\n        index[i--] = 0;\n      }\n    }\n  }\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"default"],[8,17,6,15],[8,20,6,18,"cross"],[8,25,6,23],[9,2,7,0],[9,11,7,9,"length"],[9,17,7,15,"length"],[9,18,7,16,"array"],[9,23,7,21],[9,25,7,23],[10,4,8,2],[10,11,8,9,"array"],[10,16,8,14],[10,17,8,15,"length"],[10,23,8,21],[10,26,8,24],[10,27,8,25],[11,2,9,0],[12,2,10,0],[12,11,10,9,"empty"],[12,16,10,14,"empty"],[12,17,10,15,"length"],[12,23,10,21],[12,25,10,23],[13,4,11,2],[13,11,11,9],[13,13,11,11,"length"],[13,19,11,17],[13,22,11,20],[13,23,11,21],[13,24,11,22],[14,2,12,0],[15,2,13,0],[15,11,13,9,"arrayify"],[15,19,13,17,"arrayify"],[15,20,13,18,"values"],[15,26,13,24],[15,28,13,26],[16,4,14,2],[16,11,14,9],[16,18,14,16,"values"],[16,24,14,22],[16,29,14,27],[16,37,14,35],[16,41,14,39],[16,49,14,47],[16,53,14,51,"values"],[16,59,14,57],[16,62,14,60,"values"],[16,68,14,66],[16,71,14,69,"Array"],[16,76,14,74],[16,77,14,75,"from"],[16,81,14,79],[16,82,14,80,"values"],[16,88,14,86],[16,89,14,87],[17,2,15,0],[18,2,16,0],[18,11,16,9,"reducer"],[18,18,16,16,"reducer"],[18,19,16,17,"reduce"],[18,25,16,23],[18,27,16,25],[19,4,17,2],[19,11,17,9],[19,21,17,9,"values"],[19,27,17,15],[20,6,17,15],[20,13,17,19,"reduce"],[20,19,17,25],[20,20,17,25,"apply"],[20,25,17,25],[20,34,17,25,"_toConsumableArray"],[20,52,17,25],[20,53,17,29,"values"],[20,59,17,35],[20,61,17,36],[21,4,17,36],[22,2,18,0],[23,2,19,0],[23,11,19,9,"cross"],[23,16,19,14,"cross"],[23,17,19,14],[23,19,19,26],[24,4,19,26],[24,13,19,26,"_len"],[24,17,19,26],[24,20,19,26,"arguments"],[24,29,19,26],[24,30,19,26,"length"],[24,36,19,26],[24,38,19,18,"values"],[24,44,19,24],[24,51,19,24,"Array"],[24,56,19,24],[24,57,19,24,"_len"],[24,61,19,24],[24,64,19,24,"_key"],[24,68,19,24],[24,74,19,24,"_key"],[24,78,19,24],[24,81,19,24,"_len"],[24,85,19,24],[24,87,19,24,"_key"],[24,91,19,24],[25,6,19,18,"values"],[25,12,19,24],[25,13,19,24,"_key"],[25,17,19,24],[25,21,19,24,"arguments"],[25,30,19,24],[25,31,19,24,"_key"],[25,35,19,24],[26,4,19,24],[27,4,20,2],[27,8,20,8,"reduce"],[27,14,20,14],[27,17,20,17],[27,24,20,24,"values"],[27,30,20,30],[27,31,20,31,"values"],[27,37,20,37],[27,38,20,38,"length"],[27,44,20,44],[27,47,20,47],[27,48,20,48],[27,49,20,49],[27,54,20,54],[27,64,20,64],[27,68,20,68,"reducer"],[27,75,20,75],[27,76,20,76,"values"],[27,82,20,82],[27,83,20,83,"pop"],[27,86,20,86],[27,87,20,87],[27,88,20,88],[27,89,20,89],[28,4,21,2,"values"],[28,10,21,8],[28,13,21,11,"values"],[28,19,21,17],[28,20,21,18,"map"],[28,23,21,21],[28,24,21,22,"arrayify"],[28,32,21,30],[28,33,21,31],[29,4,22,2],[29,8,22,8,"lengths"],[29,15,22,15],[29,18,22,18,"values"],[29,24,22,24],[29,25,22,25,"map"],[29,28,22,28],[29,29,22,29,"length"],[29,35,22,35],[29,36,22,36],[30,4,23,2],[30,8,23,8,"j"],[30,9,23,9],[30,12,23,12,"values"],[30,18,23,18],[30,19,23,19,"length"],[30,25,23,25],[30,28,23,28],[30,29,23,29],[31,4,24,2],[31,8,24,8,"index"],[31,13,24,13],[31,16,24,16],[31,20,24,20,"Array"],[31,25,24,25],[31,26,24,26,"j"],[31,27,24,27],[31,30,24,30],[31,31,24,31],[31,32,24,32],[31,33,24,33,"fill"],[31,37,24,37],[31,38,24,38],[31,39,24,39],[31,40,24,40],[32,4,25,2],[32,8,25,8,"product"],[32,15,25,15],[32,18,25,18],[32,20,25,20],[33,4,26,2],[33,8,26,6,"j"],[33,9,26,7],[33,12,26,10],[33,13,26,11],[33,17,26,15,"lengths"],[33,24,26,22],[33,25,26,23,"some"],[33,29,26,27],[33,30,26,28,"empty"],[33,35,26,33],[33,36,26,34],[33,38,26,36],[33,45,26,43,"product"],[33,52,26,50],[34,4,27,2],[34,11,27,9],[34,15,27,13],[34,17,27,15],[35,6,28,4,"product"],[35,13,28,11],[35,14,28,12,"push"],[35,18,28,16],[35,19,28,17,"index"],[35,24,28,22],[35,25,28,23,"map"],[35,28,28,26],[35,29,28,27],[35,39,28,28,"j"],[35,40,28,29],[35,42,28,31,"i"],[35,43,28,32],[36,8,28,32],[36,15,28,37,"values"],[36,21,28,43],[36,22,28,44,"i"],[36,23,28,45],[36,24,28,46],[36,25,28,47,"j"],[36,26,28,48],[36,27,28,49],[37,6,28,49],[37,8,28,50],[37,9,28,51],[38,6,29,4],[38,10,29,8,"i"],[38,11,29,9],[38,14,29,12,"j"],[38,15,29,13],[39,6,30,4],[39,13,30,11],[39,15,30,13,"index"],[39,20,30,18],[39,21,30,19,"i"],[39,22,30,20],[39,23,30,21],[39,28,30,26,"lengths"],[39,35,30,33],[39,36,30,34,"i"],[39,37,30,35],[39,38,30,36],[39,40,30,38],[40,8,31,6],[40,12,31,10,"i"],[40,13,31,11],[40,18,31,16],[40,19,31,17],[40,21,31,19],[40,28,31,26,"reduce"],[40,34,31,32],[40,37,31,35,"product"],[40,44,31,42],[40,45,31,43,"map"],[40,48,31,46],[40,49,31,47,"reduce"],[40,55,31,53],[40,56,31,54],[40,59,31,57,"product"],[40,66,31,64],[41,8,32,6,"index"],[41,13,32,11],[41,14,32,12,"i"],[41,15,32,13],[41,17,32,15],[41,18,32,16],[41,21,32,19],[41,22,32,20],[42,6,33,4],[43,4,34,2],[44,2,35,0],[45,0,35,1],[45,3]],"functionMap":{"names":["<global>","length","empty","arrayify","reducer","<anonymous>","cross","index.map$argument_0"],"mappings":"AAA;ACM;CDE;AEC;CFE;AGC;CHE;AIC;SCC,2BD;CJC;AMC;2BCS,sBD"}},"type":"js/module"}]}