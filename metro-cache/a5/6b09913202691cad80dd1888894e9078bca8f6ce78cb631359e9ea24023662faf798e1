{"dependencies":[{"name":"./exponent.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":39,"index":147},"end":{"line":7,"column":63,"index":171}}],"key":"tBNzcj7F1rpnNveD4llPNtNV3wE="}},{"name":"./formatGroup.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":42,"index":216},"end":{"line":8,"column":69,"index":243}}],"key":"ySPgPblrCCpt5Zt4VNV+B/UQsNs="}},{"name":"./formatNumerals.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":45,"index":291},"end":{"line":9,"column":75,"index":321}}],"key":"nOoeellrTAJZxY5a1cn46EifZ5Y="}},{"name":"./formatSpecifier.js","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":46,"index":370},"end":{"line":10,"column":77,"index":401}}],"key":"wrfMs+/G4XeHCr6n4x53Z3eDx5A="}},{"name":"./formatTrim.js","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":41,"index":445},"end":{"line":11,"column":67,"index":471}}],"key":"AyRdz4o6/DzRI5XgNbZBUxvJkAQ="}},{"name":"./formatTypes.js","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":42,"index":516},"end":{"line":12,"column":69,"index":543}}],"key":"yFQlyY21mSvSUUvwPxwk+WRyTGM="}},{"name":"./identity.js","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":39,"index":643},"end":{"line":14,"column":63,"index":667}}],"key":"UVyCp3yrXW67KqNevfNs9aofuuQ="}},{"name":"./formatPrefixAuto.js","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":24,"index":570},"end":{"line":13,"column":56,"index":602}}],"key":"Cs6M3XdrHCjAFffzy7fZSe55kFE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n  var _exponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./exponent.js\"));\n  var _formatGroup = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./formatGroup.js\"));\n  var _formatNumerals = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./formatNumerals.js\"));\n  var _formatSpecifier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./formatSpecifier.js\"));\n  var _formatTrim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./formatTrim.js\"));\n  var _formatTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./formatTypes.js\"));\n  var _identity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./identity.js\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var map = Array.prototype.map,\n    prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n  function _default(locale) {\n    var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n    function newFormat(specifier) {\n      specifier = (0, _formatSpecifier.default)(specifier);\n      var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n      // The \"n\" type is an alias for \",g\".\n      if (type === \"n\") comma = true, type = \"g\";\n\n      // The \"\" type, and any invalid type, is an alias for \".12~g\".\n      else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n      // If zero fill is specified, padding goes after sign and before digits.\n      if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\";\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = _formatTypes.default[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n      function format(value) {\n        var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = value < 0 || 1 / value < 0;\n\n          // Perform the initial formatting.\n          value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n          // Trim insignificant zeros.\n          if (trim) value = (0, _formatTrim.default)(value);\n\n          // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n          if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = (type === \"s\" ? prefixes[8 + _$$_REQUIRE(_dependencyMap[7], \"./formatPrefixAuto.js\").prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\":\n            value = valuePrefix + value + valueSuffix + padding;\n            break;\n          case \"=\":\n            value = valuePrefix + padding + value + valueSuffix;\n            break;\n          case \"^\":\n            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n            break;\n          default:\n            value = padding + valuePrefix + value + valueSuffix;\n            break;\n        }\n        return numerals(value);\n      }\n      format.toString = function () {\n        return specifier + \"\";\n      };\n      return format;\n    }\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n      return function (value) {\n        return f(k * value) + prefix;\n      };\n    }\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n});","lineCount":157,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"_default"],[7,28,6,26],[8,2,7,0],[8,6,7,4,"_exponent"],[8,15,7,13],[8,18,7,16,"_interopRequireDefault"],[8,40,7,38],[8,41,7,39,"require"],[8,52,7,46],[8,53,7,46,"_dependencyMap"],[8,67,7,46],[8,87,7,62],[8,88,7,63],[8,89,7,64],[9,2,8,0],[9,6,8,4,"_formatGroup"],[9,18,8,16],[9,21,8,19,"_interopRequireDefault"],[9,43,8,41],[9,44,8,42,"require"],[9,55,8,49],[9,56,8,49,"_dependencyMap"],[9,70,8,49],[9,93,8,68],[9,94,8,69],[9,95,8,70],[10,2,9,0],[10,6,9,4,"_formatNumerals"],[10,21,9,19],[10,24,9,22,"_interopRequireDefault"],[10,46,9,44],[10,47,9,45,"require"],[10,58,9,52],[10,59,9,52,"_dependencyMap"],[10,73,9,52],[10,99,9,74],[10,100,9,75],[10,101,9,76],[11,2,10,0],[11,6,10,4,"_formatSpecifier"],[11,22,10,20],[11,25,10,23,"_interopRequireDefault"],[11,47,10,45],[11,48,10,46,"require"],[11,59,10,53],[11,60,10,53,"_dependencyMap"],[11,74,10,53],[11,101,10,76],[11,102,10,77],[11,103,10,78],[12,2,11,0],[12,6,11,4,"_formatTrim"],[12,17,11,15],[12,20,11,18,"_interopRequireDefault"],[12,42,11,40],[12,43,11,41,"require"],[12,54,11,48],[12,55,11,48,"_dependencyMap"],[12,69,11,48],[12,91,11,66],[12,92,11,67],[12,93,11,68],[13,2,12,0],[13,6,12,4,"_formatTypes"],[13,18,12,16],[13,21,12,19,"_interopRequireDefault"],[13,43,12,41],[13,44,12,42,"require"],[13,55,12,49],[13,56,12,49,"_dependencyMap"],[13,70,12,49],[13,93,12,68],[13,94,12,69],[13,95,12,70],[14,2,14,0],[14,6,14,4,"_identity"],[14,15,14,13],[14,18,14,16,"_interopRequireDefault"],[14,40,14,38],[14,41,14,39,"require"],[14,52,14,46],[14,53,14,46,"_dependencyMap"],[14,67,14,46],[14,87,14,62],[14,88,14,63],[14,89,14,64],[15,2,15,0],[15,11,15,9,"_interopRequireDefault"],[15,33,15,31,"_interopRequireDefault"],[15,34,15,32,"obj"],[15,37,15,35],[15,39,15,37],[16,4,15,39],[16,11,15,46,"obj"],[16,14,15,49],[16,18,15,53,"obj"],[16,21,15,56],[16,22,15,57,"__esModule"],[16,32,15,67],[16,35,15,70,"obj"],[16,38,15,73],[16,41,15,76],[17,6,15,78,"default"],[17,13,15,85],[17,15,15,87,"obj"],[18,4,15,91],[18,5,15,92],[19,2,15,94],[20,2,16,0],[20,6,16,4,"map"],[20,9,16,7],[20,12,16,10,"Array"],[20,17,16,15],[20,18,16,16,"prototype"],[20,27,16,25],[20,28,16,26,"map"],[20,31,16,29],[21,4,17,2,"prefixes"],[21,12,17,10],[21,15,17,13],[21,16,17,14],[21,19,17,17],[21,21,17,19],[21,24,17,22],[21,26,17,24],[21,29,17,27],[21,31,17,29],[21,34,17,32],[21,36,17,34],[21,39,17,37],[21,41,17,39],[21,44,17,42],[21,46,17,44],[21,49,17,47],[21,51,17,49],[21,54,17,52],[21,56,17,54],[21,58,17,56],[21,60,17,58],[21,63,17,61],[21,65,17,63],[21,68,17,66],[21,70,17,68],[21,73,17,71],[21,75,17,73],[21,78,17,76],[21,80,17,78],[21,83,17,81],[21,85,17,83],[21,88,17,86],[21,90,17,88],[21,93,17,91],[21,95,17,93],[21,98,17,96],[21,99,17,97],[22,2,18,0],[22,11,18,9,"_default"],[22,19,18,17,"_default"],[22,20,18,18,"locale"],[22,26,18,24],[22,28,18,26],[23,4,19,2],[23,8,19,6,"group"],[23,13,19,11],[23,16,19,14,"locale"],[23,22,19,20],[23,23,19,21,"grouping"],[23,31,19,29],[23,36,19,34,"undefined"],[23,45,19,43],[23,49,19,47,"locale"],[23,55,19,53],[23,56,19,54,"thousands"],[23,65,19,63],[23,70,19,68,"undefined"],[23,79,19,77],[23,82,19,80,"_identity"],[23,91,19,89],[23,92,19,90,"default"],[23,99,19,97],[23,102,19,100],[23,103,19,101],[23,104,19,102],[23,106,19,104,"_formatGroup"],[23,118,19,116],[23,119,19,117,"default"],[23,126,19,124],[23,128,19,126,"map"],[23,131,19,129],[23,132,19,130,"call"],[23,136,19,134],[23,137,19,135,"locale"],[23,143,19,141],[23,144,19,142,"grouping"],[23,152,19,150],[23,154,19,152,"Number"],[23,160,19,158],[23,161,19,159],[23,163,19,161,"locale"],[23,169,19,167],[23,170,19,168,"thousands"],[23,179,19,177],[23,182,19,180],[23,184,19,182],[23,185,19,183],[24,6,20,4,"currencyPrefix"],[24,20,20,18],[24,23,20,21,"locale"],[24,29,20,27],[24,30,20,28,"currency"],[24,38,20,36],[24,43,20,41,"undefined"],[24,52,20,50],[24,55,20,53],[24,57,20,55],[24,60,20,58,"locale"],[24,66,20,64],[24,67,20,65,"currency"],[24,75,20,73],[24,76,20,74],[24,77,20,75],[24,78,20,76],[24,81,20,79],[24,83,20,81],[25,6,21,4,"currencySuffix"],[25,20,21,18],[25,23,21,21,"locale"],[25,29,21,27],[25,30,21,28,"currency"],[25,38,21,36],[25,43,21,41,"undefined"],[25,52,21,50],[25,55,21,53],[25,57,21,55],[25,60,21,58,"locale"],[25,66,21,64],[25,67,21,65,"currency"],[25,75,21,73],[25,76,21,74],[25,77,21,75],[25,78,21,76],[25,81,21,79],[25,83,21,81],[26,6,22,4,"decimal"],[26,13,22,11],[26,16,22,14,"locale"],[26,22,22,20],[26,23,22,21,"decimal"],[26,30,22,28],[26,35,22,33,"undefined"],[26,44,22,42],[26,47,22,45],[26,50,22,48],[26,53,22,51,"locale"],[26,59,22,57],[26,60,22,58,"decimal"],[26,67,22,65],[26,70,22,68],[26,72,22,70],[27,6,23,4,"numerals"],[27,14,23,12],[27,17,23,15,"locale"],[27,23,23,21],[27,24,23,22,"numerals"],[27,32,23,30],[27,37,23,35,"undefined"],[27,46,23,44],[27,49,23,47,"_identity"],[27,58,23,56],[27,59,23,57,"default"],[27,66,23,64],[27,69,23,67],[27,70,23,68],[27,71,23,69],[27,73,23,71,"_formatNumerals"],[27,88,23,86],[27,89,23,87,"default"],[27,96,23,94],[27,98,23,96,"map"],[27,101,23,99],[27,102,23,100,"call"],[27,106,23,104],[27,107,23,105,"locale"],[27,113,23,111],[27,114,23,112,"numerals"],[27,122,23,120],[27,124,23,122,"String"],[27,130,23,128],[27,131,23,129],[27,132,23,130],[28,6,24,4,"percent"],[28,13,24,11],[28,16,24,14,"locale"],[28,22,24,20],[28,23,24,21,"percent"],[28,30,24,28],[28,35,24,33,"undefined"],[28,44,24,42],[28,47,24,45],[28,50,24,48],[28,53,24,51,"locale"],[28,59,24,57],[28,60,24,58,"percent"],[28,67,24,65],[28,70,24,68],[28,72,24,70],[29,6,25,4,"minus"],[29,11,25,9],[29,14,25,12,"locale"],[29,20,25,18],[29,21,25,19,"minus"],[29,26,25,24],[29,31,25,29,"undefined"],[29,40,25,38],[29,43,25,41],[29,46,25,44],[29,49,25,47,"locale"],[29,55,25,53],[29,56,25,54,"minus"],[29,61,25,59],[29,64,25,62],[29,66,25,64],[30,6,26,4,"nan"],[30,9,26,7],[30,12,26,10,"locale"],[30,18,26,16],[30,19,26,17,"nan"],[30,22,26,20],[30,27,26,25,"undefined"],[30,36,26,34],[30,39,26,37],[30,44,26,42],[30,47,26,45,"locale"],[30,53,26,51],[30,54,26,52,"nan"],[30,57,26,55],[30,60,26,58],[30,62,26,60],[31,4,27,2],[31,13,27,11,"newFormat"],[31,22,27,20,"newFormat"],[31,23,27,21,"specifier"],[31,32,27,30],[31,34,27,32],[32,6,28,4,"specifier"],[32,15,28,13],[32,18,28,16],[32,19,28,17],[32,20,28,18],[32,22,28,20,"_formatSpecifier"],[32,38,28,36],[32,39,28,37,"default"],[32,46,28,44],[32,48,28,46,"specifier"],[32,57,28,55],[32,58,28,56],[33,6,29,4],[33,10,29,8,"fill"],[33,14,29,12],[33,17,29,15,"specifier"],[33,26,29,24],[33,27,29,25,"fill"],[33,31,29,29],[34,8,30,6,"align"],[34,13,30,11],[34,16,30,14,"specifier"],[34,25,30,23],[34,26,30,24,"align"],[34,31,30,29],[35,8,31,6,"sign"],[35,12,31,10],[35,15,31,13,"specifier"],[35,24,31,22],[35,25,31,23,"sign"],[35,29,31,27],[36,8,32,6,"symbol"],[36,14,32,12],[36,17,32,15,"specifier"],[36,26,32,24],[36,27,32,25,"symbol"],[36,33,32,31],[37,8,33,6,"zero"],[37,12,33,10],[37,15,33,13,"specifier"],[37,24,33,22],[37,25,33,23,"zero"],[37,29,33,27],[38,8,34,6,"width"],[38,13,34,11],[38,16,34,14,"specifier"],[38,25,34,23],[38,26,34,24,"width"],[38,31,34,29],[39,8,35,6,"comma"],[39,13,35,11],[39,16,35,14,"specifier"],[39,25,35,23],[39,26,35,24,"comma"],[39,31,35,29],[40,8,36,6,"precision"],[40,17,36,15],[40,20,36,18,"specifier"],[40,29,36,27],[40,30,36,28,"precision"],[40,39,36,37],[41,8,37,6,"trim"],[41,12,37,10],[41,15,37,13,"specifier"],[41,24,37,22],[41,25,37,23,"trim"],[41,29,37,27],[42,8,38,6,"type"],[42,12,38,10],[42,15,38,13,"specifier"],[42,24,38,22],[42,25,38,23,"type"],[42,29,38,27],[44,6,40,4],[45,6,41,4],[45,10,41,8,"type"],[45,14,41,12],[45,19,41,17],[45,22,41,20],[45,24,41,22,"comma"],[45,29,41,27],[45,32,41,30],[45,36,41,34],[45,38,41,36,"type"],[45,42,41,40],[45,45,41,43],[45,48,41,46],[47,6,43,4],[48,6,43,4],[48,11,44,9],[48,15,44,13],[48,16,44,14,"_formatTypes"],[48,28,44,26],[48,29,44,27,"default"],[48,36,44,34],[48,37,44,35,"type"],[48,41,44,39],[48,42,44,40],[48,44,44,42,"precision"],[48,53,44,51],[48,58,44,56,"undefined"],[48,67,44,65],[48,72,44,70,"precision"],[48,81,44,79],[48,84,44,82],[48,86,44,84],[48,87,44,85],[48,89,44,87,"trim"],[48,93,44,91],[48,96,44,94],[48,100,44,98],[48,102,44,100,"type"],[48,106,44,104],[48,109,44,107],[48,112,44,110],[50,6,46,4],[51,6,47,4],[51,10,47,8,"zero"],[51,14,47,12],[51,18,47,16,"fill"],[51,22,47,20],[51,27,47,25],[51,30,47,28],[51,34,47,32,"align"],[51,39,47,37],[51,44,47,42],[51,47,47,45],[51,49,47,47,"zero"],[51,53,47,51],[51,56,47,54],[51,60,47,58],[51,62,47,60,"fill"],[51,66,47,64],[51,69,47,67],[51,72,47,70],[51,74,47,72,"align"],[51,79,47,77],[51,82,47,80],[51,85,47,83],[53,6,49,4],[54,6,50,4],[55,6,51,4],[55,10,51,8,"prefix"],[55,16,51,14],[55,19,51,17,"symbol"],[55,25,51,23],[55,30,51,28],[55,33,51,31],[55,36,51,34,"currencyPrefix"],[55,50,51,48],[55,53,51,51,"symbol"],[55,59,51,57],[55,64,51,62],[55,67,51,65],[55,71,51,69],[55,79,51,77],[55,80,51,78,"test"],[55,84,51,82],[55,85,51,83,"type"],[55,89,51,87],[55,90,51,88],[55,93,51,91],[55,96,51,94],[55,99,51,97,"type"],[55,103,51,101],[55,104,51,102,"toLowerCase"],[55,115,51,113],[55,116,51,114],[55,117,51,115],[55,120,51,118],[55,122,51,120],[56,8,52,6,"suffix"],[56,14,52,12],[56,17,52,15,"symbol"],[56,23,52,21],[56,28,52,26],[56,31,52,29],[56,34,52,32,"currencySuffix"],[56,48,52,46],[56,51,52,49],[56,57,52,55],[56,58,52,56,"test"],[56,62,52,60],[56,63,52,61,"type"],[56,67,52,65],[56,68,52,66],[56,71,52,69,"percent"],[56,78,52,76],[56,81,52,79],[56,83,52,81],[58,6,54,4],[59,6,55,4],[60,6,56,4],[61,6,57,4],[61,10,57,8,"formatType"],[61,20,57,18],[61,23,57,21,"_formatTypes"],[61,35,57,33],[61,36,57,34,"default"],[61,43,57,41],[61,44,57,42,"type"],[61,48,57,46],[61,49,57,47],[62,8,58,6,"maybeSuffix"],[62,19,58,17],[62,22,58,20],[62,34,58,32],[62,35,58,33,"test"],[62,39,58,37],[62,40,58,38,"type"],[62,44,58,42],[62,45,58,43],[64,6,60,4],[65,6,61,4],[66,6,62,4],[67,6,63,4],[68,6,64,4,"precision"],[68,15,64,13],[68,18,64,16,"precision"],[68,27,64,25],[68,32,64,30,"undefined"],[68,41,64,39],[68,44,64,42],[68,45,64,43],[68,48,64,46],[68,56,64,54],[68,57,64,55,"test"],[68,61,64,59],[68,62,64,60,"type"],[68,66,64,64],[68,67,64,65],[68,70,64,68,"Math"],[68,74,64,72],[68,75,64,73,"max"],[68,78,64,76],[68,79,64,77],[68,80,64,78],[68,82,64,80,"Math"],[68,86,64,84],[68,87,64,85,"min"],[68,90,64,88],[68,91,64,89],[68,93,64,91],[68,95,64,93,"precision"],[68,104,64,102],[68,105,64,103],[68,106,64,104],[68,109,64,107,"Math"],[68,113,64,111],[68,114,64,112,"max"],[68,117,64,115],[68,118,64,116],[68,119,64,117],[68,121,64,119,"Math"],[68,125,64,123],[68,126,64,124,"min"],[68,129,64,127],[68,130,64,128],[68,132,64,130],[68,134,64,132,"precision"],[68,143,64,141],[68,144,64,142],[68,145,64,143],[69,6,65,4],[69,15,65,13,"format"],[69,21,65,19,"format"],[69,22,65,20,"value"],[69,27,65,25],[69,29,65,27],[70,8,66,6],[70,12,66,10,"valuePrefix"],[70,23,66,21],[70,26,66,24,"prefix"],[70,32,66,30],[71,10,67,8,"valueSuffix"],[71,21,67,19],[71,24,67,22,"suffix"],[71,30,67,28],[72,10,68,8,"i"],[72,11,68,9],[73,10,69,8,"n"],[73,11,69,9],[74,10,70,8,"c"],[74,11,70,9],[75,8,71,6],[75,12,71,10,"type"],[75,16,71,14],[75,21,71,19],[75,24,71,22],[75,26,71,24],[76,10,72,8,"valueSuffix"],[76,21,72,19],[76,24,72,22,"formatType"],[76,34,72,32],[76,35,72,33,"value"],[76,40,72,38],[76,41,72,39],[76,44,72,42,"valueSuffix"],[76,55,72,53],[77,10,73,8,"value"],[77,15,73,13],[77,18,73,16],[77,20,73,18],[78,8,74,6],[78,9,74,7],[78,15,74,13],[79,10,75,8,"value"],[79,15,75,13],[79,18,75,16],[79,19,75,17,"value"],[79,24,75,22],[81,10,77,8],[82,10,78,8],[82,14,78,12,"valueNegative"],[82,27,78,25],[82,30,78,28,"value"],[82,35,78,33],[82,38,78,36],[82,39,78,37],[82,43,78,41],[82,44,78,42],[82,47,78,45,"value"],[82,52,78,50],[82,55,78,53],[82,56,78,54],[84,10,80,8],[85,10,81,8,"value"],[85,15,81,13],[85,18,81,16,"isNaN"],[85,23,81,21],[85,24,81,22,"value"],[85,29,81,27],[85,30,81,28],[85,33,81,31,"nan"],[85,36,81,34],[85,39,81,37,"formatType"],[85,49,81,47],[85,50,81,48,"Math"],[85,54,81,52],[85,55,81,53,"abs"],[85,58,81,56],[85,59,81,57,"value"],[85,64,81,62],[85,65,81,63],[85,67,81,65,"precision"],[85,76,81,74],[85,77,81,75],[87,10,83,8],[88,10,84,8],[88,14,84,12,"trim"],[88,18,84,16],[88,20,84,18,"value"],[88,25,84,23],[88,28,84,26],[88,29,84,27],[88,30,84,28],[88,32,84,30,"_formatTrim"],[88,43,84,41],[88,44,84,42,"default"],[88,51,84,49],[88,53,84,51,"value"],[88,58,84,56],[88,59,84,57],[90,10,86,8],[91,10,87,8],[91,14,87,12,"valueNegative"],[91,27,87,25],[91,31,87,29],[91,32,87,30,"value"],[91,37,87,35],[91,42,87,40],[91,43,87,41],[91,47,87,45,"sign"],[91,51,87,49],[91,56,87,54],[91,59,87,57],[91,61,87,59,"valueNegative"],[91,74,87,72],[91,77,87,75],[91,82,87,80],[93,10,89,8],[94,10,90,8,"valuePrefix"],[94,21,90,19],[94,24,90,22],[94,25,90,23,"valueNegative"],[94,38,90,36],[94,41,90,39,"sign"],[94,45,90,43],[94,50,90,48],[94,53,90,51],[94,56,90,54,"sign"],[94,60,90,58],[94,63,90,61,"minus"],[94,68,90,66],[94,71,90,69,"sign"],[94,75,90,73],[94,80,90,78],[94,83,90,81],[94,87,90,85,"sign"],[94,91,90,89],[94,96,90,94],[94,99,90,97],[94,102,90,100],[94,104,90,102],[94,107,90,105,"sign"],[94,111,90,109],[94,115,90,113,"valuePrefix"],[94,126,90,124],[95,10,91,8,"valueSuffix"],[95,21,91,19],[95,24,91,22],[95,25,91,23,"type"],[95,29,91,27],[95,34,91,32],[95,37,91,35],[95,40,91,38,"prefixes"],[95,48,91,46],[95,49,91,47],[95,50,91,48],[95,53,91,51,"_$$_REQUIRE"],[95,64,91,51],[95,65,91,51,"_dependencyMap"],[95,79,91,51],[95,109,91,69,"prefixExponent"],[95,123,91,83],[95,126,91,86],[95,127,91,87],[95,128,91,88],[95,131,91,91],[95,133,91,93],[95,137,91,97,"valueSuffix"],[95,148,91,108],[95,152,91,112,"valueNegative"],[95,165,91,125],[95,169,91,129,"sign"],[95,173,91,133],[95,178,91,138],[95,181,91,141],[95,184,91,144],[95,187,91,147],[95,190,91,150],[95,192,91,152],[95,193,91,153],[97,10,93,8],[98,10,94,8],[99,10,95,8],[99,14,95,12,"maybeSuffix"],[99,25,95,23],[99,27,95,25],[100,12,96,10,"i"],[100,13,96,11],[100,16,96,14],[100,17,96,15],[100,18,96,16],[100,20,96,18,"n"],[100,21,96,19],[100,24,96,22,"value"],[100,29,96,27],[100,30,96,28,"length"],[100,36,96,34],[101,12,97,10],[101,19,97,17],[101,21,97,19,"i"],[101,22,97,20],[101,25,97,23,"n"],[101,26,97,24],[101,28,97,26],[102,14,98,12],[102,18,98,16,"c"],[102,19,98,17],[102,22,98,20,"value"],[102,27,98,25],[102,28,98,26,"charCodeAt"],[102,38,98,36],[102,39,98,37,"i"],[102,40,98,38],[102,41,98,39],[102,43,98,41],[102,45,98,43],[102,48,98,46,"c"],[102,49,98,47],[102,53,98,51,"c"],[102,54,98,52],[102,57,98,55],[102,59,98,57],[102,61,98,59],[103,16,99,14,"valueSuffix"],[103,27,99,25],[103,30,99,28],[103,31,99,29,"c"],[103,32,99,30],[103,37,99,35],[103,39,99,37],[103,42,99,40,"decimal"],[103,49,99,47],[103,52,99,50,"value"],[103,57,99,55],[103,58,99,56,"slice"],[103,63,99,61],[103,64,99,62,"i"],[103,65,99,63],[103,68,99,66],[103,69,99,67],[103,70,99,68],[103,73,99,71,"value"],[103,78,99,76],[103,79,99,77,"slice"],[103,84,99,82],[103,85,99,83,"i"],[103,86,99,84],[103,87,99,85],[103,91,99,89,"valueSuffix"],[103,102,99,100],[104,16,100,14,"value"],[104,21,100,19],[104,24,100,22,"value"],[104,29,100,27],[104,30,100,28,"slice"],[104,35,100,33],[104,36,100,34],[104,37,100,35],[104,39,100,37,"i"],[104,40,100,38],[104,41,100,39],[105,16,101,14],[106,14,102,12],[107,12,103,10],[108,10,104,8],[109,8,105,6],[111,8,107,6],[112,8,108,6],[112,12,108,10,"comma"],[112,17,108,15],[112,21,108,19],[112,22,108,20,"zero"],[112,26,108,24],[112,28,108,26,"value"],[112,33,108,31],[112,36,108,34,"group"],[112,41,108,39],[112,42,108,40,"value"],[112,47,108,45],[112,49,108,47,"Infinity"],[112,57,108,55],[112,58,108,56],[114,8,110,6],[115,8,111,6],[115,12,111,10,"length"],[115,18,111,16],[115,21,111,19,"valuePrefix"],[115,32,111,30],[115,33,111,31,"length"],[115,39,111,37],[115,42,111,40,"value"],[115,47,111,45],[115,48,111,46,"length"],[115,54,111,52],[115,57,111,55,"valueSuffix"],[115,68,111,66],[115,69,111,67,"length"],[115,75,111,73],[116,10,112,8,"padding"],[116,17,112,15],[116,20,112,18,"length"],[116,26,112,24],[116,29,112,27,"width"],[116,34,112,32],[116,37,112,35],[116,41,112,39,"Array"],[116,46,112,44],[116,47,112,45,"width"],[116,52,112,50],[116,55,112,53,"length"],[116,61,112,59],[116,64,112,62],[116,65,112,63],[116,66,112,64],[116,67,112,65,"join"],[116,71,112,69],[116,72,112,70,"fill"],[116,76,112,74],[116,77,112,75],[116,80,112,78],[116,82,112,80],[118,8,114,6],[119,8,115,6],[119,12,115,10,"comma"],[119,17,115,15],[119,21,115,19,"zero"],[119,25,115,23],[119,27,115,25,"value"],[119,32,115,30],[119,35,115,33,"group"],[119,40,115,38],[119,41,115,39,"padding"],[119,48,115,46],[119,51,115,49,"value"],[119,56,115,54],[119,58,115,56,"padding"],[119,65,115,63],[119,66,115,64,"length"],[119,72,115,70],[119,75,115,73,"width"],[119,80,115,78],[119,83,115,81,"valueSuffix"],[119,94,115,92],[119,95,115,93,"length"],[119,101,115,99],[119,104,115,102,"Infinity"],[119,112,115,110],[119,113,115,111],[119,115,115,113,"padding"],[119,122,115,120],[119,125,115,123],[119,127,115,125],[121,8,117,6],[122,8,118,6],[122,16,118,14,"align"],[122,21,118,19],[123,10,119,8],[123,15,119,13],[123,18,119,16],[124,12,120,10,"value"],[124,17,120,15],[124,20,120,18,"valuePrefix"],[124,31,120,29],[124,34,120,32,"value"],[124,39,120,37],[124,42,120,40,"valueSuffix"],[124,53,120,51],[124,56,120,54,"padding"],[124,63,120,61],[125,12,121,10],[126,10,122,8],[126,15,122,13],[126,18,122,16],[127,12,123,10,"value"],[127,17,123,15],[127,20,123,18,"valuePrefix"],[127,31,123,29],[127,34,123,32,"padding"],[127,41,123,39],[127,44,123,42,"value"],[127,49,123,47],[127,52,123,50,"valueSuffix"],[127,63,123,61],[128,12,124,10],[129,10,125,8],[129,15,125,13],[129,18,125,16],[130,12,126,10,"value"],[130,17,126,15],[130,20,126,18,"padding"],[130,27,126,25],[130,28,126,26,"slice"],[130,33,126,31],[130,34,126,32],[130,35,126,33],[130,37,126,35,"length"],[130,43,126,41],[130,46,126,44,"padding"],[130,53,126,51],[130,54,126,52,"length"],[130,60,126,58],[130,64,126,62],[130,65,126,63],[130,66,126,64],[130,69,126,67,"valuePrefix"],[130,80,126,78],[130,83,126,81,"value"],[130,88,126,86],[130,91,126,89,"valueSuffix"],[130,102,126,100],[130,105,126,103,"padding"],[130,112,126,110],[130,113,126,111,"slice"],[130,118,126,116],[130,119,126,117,"length"],[130,125,126,123],[130,126,126,124],[131,12,127,10],[132,10,128,8],[133,12,129,10,"value"],[133,17,129,15],[133,20,129,18,"padding"],[133,27,129,25],[133,30,129,28,"valuePrefix"],[133,41,129,39],[133,44,129,42,"value"],[133,49,129,47],[133,52,129,50,"valueSuffix"],[133,63,129,61],[134,12,130,10],[135,8,131,6],[136,8,132,6],[136,15,132,13,"numerals"],[136,23,132,21],[136,24,132,22,"value"],[136,29,132,27],[136,30,132,28],[137,6,133,4],[138,6,134,4,"format"],[138,12,134,10],[138,13,134,11,"toString"],[138,21,134,19],[138,24,134,22],[138,36,134,34],[139,8,135,6],[139,15,135,13,"specifier"],[139,24,135,22],[139,27,135,25],[139,29,135,27],[140,6,136,4],[140,7,136,5],[141,6,137,4],[141,13,137,11,"format"],[141,19,137,17],[142,4,138,2],[143,4,139,2],[143,13,139,11,"formatPrefix"],[143,25,139,23,"formatPrefix"],[143,26,139,24,"specifier"],[143,35,139,33],[143,37,139,35,"value"],[143,42,139,40],[143,44,139,42],[144,6,140,4],[144,10,140,8,"f"],[144,11,140,9],[144,14,140,12,"newFormat"],[144,23,140,21],[144,25,140,23,"specifier"],[144,34,140,32],[144,37,140,35],[144,38,140,36],[144,39,140,37],[144,41,140,39,"_formatSpecifier"],[144,57,140,55],[144,58,140,56,"default"],[144,65,140,63],[144,67,140,65,"specifier"],[144,76,140,74],[144,77,140,75],[144,79,140,77,"specifier"],[144,88,140,86],[144,89,140,87,"type"],[144,93,140,91],[144,96,140,94],[144,99,140,97],[144,101,140,99,"specifier"],[144,110,140,108],[144,111,140,109],[144,112,140,110],[145,8,141,6,"e"],[145,9,141,7],[145,12,141,10,"Math"],[145,16,141,14],[145,17,141,15,"max"],[145,20,141,18],[145,21,141,19],[145,22,141,20],[145,23,141,21],[145,25,141,23,"Math"],[145,29,141,27],[145,30,141,28,"min"],[145,33,141,31],[145,34,141,32],[145,35,141,33],[145,37,141,35,"Math"],[145,41,141,39],[145,42,141,40,"floor"],[145,47,141,45],[145,48,141,46],[145,49,141,47],[145,50,141,48],[145,52,141,50,"_exponent"],[145,61,141,59],[145,62,141,60,"default"],[145,69,141,67],[145,71,141,69,"value"],[145,76,141,74],[145,77,141,75],[145,80,141,78],[145,81,141,79],[145,82,141,80],[145,83,141,81],[145,84,141,82],[145,87,141,85],[145,88,141,86],[146,8,142,6,"k"],[146,9,142,7],[146,12,142,10,"Math"],[146,16,142,14],[146,17,142,15,"pow"],[146,20,142,18],[146,21,142,19],[146,23,142,21],[146,25,142,23],[146,26,142,24,"e"],[146,27,142,25],[146,28,142,26],[147,8,143,6,"prefix"],[147,14,143,12],[147,17,143,15,"prefixes"],[147,25,143,23],[147,26,143,24],[147,27,143,25],[147,30,143,28,"e"],[147,31,143,29],[147,34,143,32],[147,35,143,33],[147,36,143,34],[148,6,144,4],[148,13,144,11],[148,23,144,21,"value"],[148,28,144,26],[148,30,144,28],[149,8,145,6],[149,15,145,13,"f"],[149,16,145,14],[149,17,145,15,"k"],[149,18,145,16],[149,21,145,19,"value"],[149,26,145,24],[149,27,145,25],[149,30,145,28,"prefix"],[149,36,145,34],[150,6,146,4],[150,7,146,5],[151,4,147,2],[152,4,148,2],[152,11,148,9],[153,6,149,4,"format"],[153,12,149,10],[153,14,149,12,"newFormat"],[153,23,149,21],[154,6,150,4,"formatPrefix"],[154,18,150,16],[154,20,150,18,"formatPrefix"],[155,4,151,2],[155,5,151,3],[156,2,152,0],[157,0,152,1],[157,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_default","newFormat","format","format.toString","formatPrefix","<anonymous>"],"mappings":"AAA;ACc,+FD;AEG;ECS;ICsC;KDoE;sBEC;KFE;GDE;EIC;WCK;KDE;GJC"}},"type":"js/module"}]}