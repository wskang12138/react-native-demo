{"dependencies":[{"name":"./_MapCache","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"cu8H1xAdeSOSM+w10kEAVi5QWMc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * provided, it determines the cache key for storing the result based on the\n   * arguments provided to the memoized function. By default, the first argument\n   * provided to the memoized function is used as the map cache key. The `func`\n   * is invoked with the `this` binding of the memoized function.\n   *\n   * **Note:** The cache is exposed as the `cache` property on the memoized\n   * function. Its creation may be customized by replacing the `_.memoize.Cache`\n   * constructor with one whose instances implement the\n   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n   * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] The function to resolve the cache key.\n   * @returns {Function} Returns the new memoized function.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': 2 };\n   * var other = { 'c': 3, 'd': 4 };\n   *\n   * var values = _.memoize(_.values);\n   * values(object);\n   * // => [1, 2]\n   *\n   * values(other);\n   * // => [3, 4]\n   *\n   * object.a = 2;\n   * values(object);\n   * // => [1, 2]\n   *\n   * // Modify the result cache.\n   * values.cache.set(object, ['a', 'b']);\n   * values(object);\n   * // => ['a', 'b']\n   *\n   * // Replace `_.memoize.Cache`.\n   * _.memoize.Cache = WeakMap;\n   */\n  function memoize(func, resolver) {\n    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var _memoized = function memoized() {\n      var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = _memoized.cache;\n      if (cache.has(key)) {\n        return cache.get(key);\n      }\n      var result = func.apply(this, args);\n      _memoized.cache = cache.set(key, result) || cache;\n      return result;\n    };\n    _memoized.cache = new (memoize.Cache || _$$_REQUIRE(_dependencyMap[0], \"./_MapCache\"))();\n    return _memoized;\n  }\n\n  // Expose `MapCache`.\n  memoize.Cache = _$$_REQUIRE(_dependencyMap[0], \"./_MapCache\");\n  module.exports = memoize;\n});","lineCount":71,"map":[[2,2,3,0],[3,2,4,0],[3,6,4,4,"FUNC_ERROR_TEXT"],[3,21,4,19],[3,24,4,22],[3,45,4,43],[5,2,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,0,11,0],[11,0,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,0,25,0],[25,0,26,0],[26,0,27,0],[27,0,28,0],[28,0,29,0],[29,0,30,0],[30,0,31,0],[31,0,32,0],[32,0,33,0],[33,0,34,0],[34,0,35,0],[35,0,36,0],[36,0,37,0],[37,0,38,0],[38,0,39,0],[39,0,40,0],[40,0,41,0],[41,0,42,0],[42,0,43,0],[43,0,44,0],[44,0,45,0],[45,0,46,0],[46,0,47,0],[47,0,48,0],[48,0,49,0],[49,2,50,0],[49,11,50,9,"memoize"],[49,18,50,16,"memoize"],[49,19,50,17,"func"],[49,23,50,21],[49,25,50,23,"resolver"],[49,33,50,31],[49,35,50,33],[50,4,51,2],[50,8,51,6],[50,15,51,13,"func"],[50,19,51,17],[50,23,51,21],[50,33,51,31],[50,37,51,36,"resolver"],[50,45,51,44],[50,49,51,48],[50,53,51,52],[50,57,51,56],[50,64,51,63,"resolver"],[50,72,51,71],[50,76,51,75],[50,86,51,86],[50,88,51,88],[51,6,52,4],[51,12,52,10],[51,16,52,14,"TypeError"],[51,25,52,23],[51,26,52,24,"FUNC_ERROR_TEXT"],[51,41,52,39],[51,42,52,40],[52,4,53,2],[53,4,54,2],[53,8,54,6,"memoized"],[53,17,54,14],[53,20,54,17],[53,29,54,6,"memoized"],[53,37,54,14,"memoized"],[53,38,54,14],[53,40,54,28],[54,6,55,4],[54,10,55,8,"args"],[54,14,55,12],[54,17,55,15,"arguments"],[54,26,55,24],[55,8,56,8,"key"],[55,11,56,11],[55,14,56,14,"resolver"],[55,22,56,22],[55,25,56,25,"resolver"],[55,33,56,33],[55,34,56,34,"apply"],[55,39,56,39],[55,40,56,40],[55,44,56,44],[55,46,56,46,"args"],[55,50,56,50],[55,51,56,51],[55,54,56,54,"args"],[55,58,56,58],[55,59,56,59],[55,60,56,60],[55,61,56,61],[56,8,57,8,"cache"],[56,13,57,13],[56,16,57,16,"memoized"],[56,25,57,24],[56,26,57,25,"cache"],[56,31,57,30],[57,6,59,4],[57,10,59,8,"cache"],[57,15,59,13],[57,16,59,14,"has"],[57,19,59,17],[57,20,59,18,"key"],[57,23,59,21],[57,24,59,22],[57,26,59,24],[58,8,60,6],[58,15,60,13,"cache"],[58,20,60,18],[58,21,60,19,"get"],[58,24,60,22],[58,25,60,23,"key"],[58,28,60,26],[58,29,60,27],[59,6,61,4],[60,6,62,4],[60,10,62,8,"result"],[60,16,62,14],[60,19,62,17,"func"],[60,23,62,21],[60,24,62,22,"apply"],[60,29,62,27],[60,30,62,28],[60,34,62,32],[60,36,62,34,"args"],[60,40,62,38],[60,41,62,39],[61,6,63,4,"memoized"],[61,15,63,12],[61,16,63,13,"cache"],[61,21,63,18],[61,24,63,21,"cache"],[61,29,63,26],[61,30,63,27,"set"],[61,33,63,30],[61,34,63,31,"key"],[61,37,63,34],[61,39,63,36,"result"],[61,45,63,42],[61,46,63,43],[61,50,63,47,"cache"],[61,55,63,52],[62,6,64,4],[62,13,64,11,"result"],[62,19,64,17],[63,4,65,2],[63,5,65,3],[64,4,66,2,"memoized"],[64,13,66,10],[64,14,66,11,"cache"],[64,19,66,16],[64,22,66,19],[64,27,66,24,"memoize"],[64,34,66,31],[64,35,66,32,"Cache"],[64,40,66,37],[64,44,66,37,"_$$_REQUIRE"],[64,55,66,37],[64,56,66,37,"_dependencyMap"],[64,70,66,37],[64,89,66,49],[64,92,66,50],[65,4,67,2],[65,11,67,9,"memoized"],[65,20,67,17],[66,2,68,0],[68,2,70,0],[69,2,71,0,"memoize"],[69,9,71,7],[69,10,71,8,"Cache"],[69,15,71,13],[69,18,71,13,"_$$_REQUIRE"],[69,29,71,13],[69,30,71,13,"_dependencyMap"],[69,44,71,13],[69,63,71,24],[70,2,73,0,"module"],[70,8,73,6],[70,9,73,7,"exports"],[70,16,73,14],[70,19,73,17,"memoize"],[70,26,73,24],[71,0,73,25],[71,3]],"functionMap":{"names":["<global>","memoize","memoized"],"mappings":"AAA;ACiD;iBCI;GDW;CDG"}},"type":"js/module"}]}