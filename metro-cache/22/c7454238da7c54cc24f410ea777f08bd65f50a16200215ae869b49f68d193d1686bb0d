{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":51,"index":66}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableFreeze = enableFreeze;\n  exports.enableScreens = enableScreens;\n  exports.freezeEnabled = freezeEnabled;\n  exports.isNativePlatformSupported = void 0;\n  exports.screensEnabled = screensEnabled;\n  exports.shouldUseActivityState = void 0;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  // const that tells if the library should use new implementation, will be undefined for older versions\n  var shouldUseActivityState = exports.shouldUseActivityState = true;\n  var isNativePlatformSupported = exports.isNativePlatformSupported = _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows';\n  var ENABLE_SCREENS = isNativePlatformSupported;\n  function enableScreens() {\n    var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    ENABLE_SCREENS = shouldEnableScreens;\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    if (ENABLE_SCREENS && !_reactNative.UIManager.getViewManagerConfig('RNSScreen')) {\n      console.error(`Screen native module hasn't been linked. Please check the react-native-screens README for more details`);\n    }\n  }\n  var ENABLE_FREEZE = false;\n  function enableFreeze() {\n    var shouldEnableReactFreeze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    ENABLE_FREEZE = shouldEnableReactFreeze;\n  }\n  function screensEnabled() {\n    return ENABLE_SCREENS;\n  }\n  function freezeEnabled() {\n    return ENABLE_FREEZE;\n  }\n});","lineCount":42,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"enableFreeze"],[7,22,1,13],[7,25,1,13,"enableFreeze"],[7,37,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"enableScreens"],[8,23,1,13],[8,26,1,13,"enableScreens"],[8,39,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"freezeEnabled"],[9,23,1,13],[9,26,1,13,"freezeEnabled"],[9,39,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"isNativePlatformSupported"],[10,35,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"screensEnabled"],[11,24,1,13],[11,27,1,13,"screensEnabled"],[11,41,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"shouldUseActivityState"],[12,32,1,13],[13,2,3,0],[13,6,3,0,"_reactNative"],[13,18,3,0],[13,21,3,0,"_$$_REQUIRE"],[13,32,3,0],[13,33,3,0,"_dependencyMap"],[13,47,3,0],[14,2,5,0],[15,2,6,7],[15,6,6,13,"shouldUseActivityState"],[15,28,6,35],[15,31,6,35,"exports"],[15,38,6,35],[15,39,6,35,"shouldUseActivityState"],[15,61,6,35],[15,64,6,38],[15,68,6,42],[16,2,8,7],[16,6,8,13,"isNativePlatformSupported"],[16,31,8,38],[16,34,8,38,"exports"],[16,41,8,38],[16,42,8,38,"isNativePlatformSupported"],[16,67,8,38],[16,70,9,2,"Platform"],[16,91,9,10],[16,92,9,11,"OS"],[16,94,9,13],[16,99,9,18],[16,104,9,23],[16,108,10,2,"Platform"],[16,129,10,10],[16,130,10,11,"OS"],[16,132,10,13],[16,137,10,18],[16,146,10,27],[16,150,11,2,"Platform"],[16,171,11,10],[16,172,11,11,"OS"],[16,174,11,13],[16,179,11,18],[16,188,11,27],[17,2,13,0],[17,6,13,4,"ENABLE_SCREENS"],[17,20,13,18],[17,23,13,21,"isNativePlatformSupported"],[17,48,13,46],[18,2,15,7],[18,11,15,16,"enableScreens"],[18,24,15,29,"enableScreens"],[18,25,15,29],[18,27,15,58],[19,4,15,58],[19,8,15,30,"shouldEnableScreens"],[19,27,15,49],[19,30,15,49,"arguments"],[19,39,15,49],[19,40,15,49,"length"],[19,46,15,49],[19,54,15,49,"arguments"],[19,63,15,49],[19,71,15,49,"undefined"],[19,80,15,49],[19,83,15,49,"arguments"],[19,92,15,49],[19,98,15,52],[19,102,15,56],[20,4,16,2,"ENABLE_SCREENS"],[20,18,16,16],[20,21,16,19,"shouldEnableScreens"],[20,40,16,38],[21,4,18,2],[21,8,18,6],[21,9,18,7,"isNativePlatformSupported"],[21,34,18,32],[21,36,18,34],[22,6,19,4],[23,4,20,2],[24,4,22,2],[24,8,22,6,"ENABLE_SCREENS"],[24,22,22,20],[24,26,22,24],[24,27,22,25,"UIManager"],[24,49,22,34],[24,50,22,35,"getViewManagerConfig"],[24,70,22,55],[24,71,22,56],[24,82,22,67],[24,83,22,68],[24,85,22,70],[25,6,23,4,"console"],[25,13,23,11],[25,14,23,12,"error"],[25,19,23,17],[25,20,24,6],[25,124,25,4],[25,125,25,5],[26,4,26,2],[27,2,27,0],[28,2,29,0],[28,6,29,4,"ENABLE_FREEZE"],[28,19,29,17],[28,22,29,20],[28,27,29,25],[29,2,31,7],[29,11,31,16,"enableFreeze"],[29,23,31,28,"enableFreeze"],[29,24,31,28],[29,26,31,61],[30,4,31,61],[30,8,31,29,"shouldEnableReactFreeze"],[30,31,31,52],[30,34,31,52,"arguments"],[30,43,31,52],[30,44,31,52,"length"],[30,50,31,52],[30,58,31,52,"arguments"],[30,67,31,52],[30,75,31,52,"undefined"],[30,84,31,52],[30,87,31,52,"arguments"],[30,96,31,52],[30,102,31,55],[30,106,31,59],[31,4,32,2],[31,8,32,6],[31,9,32,7,"isNativePlatformSupported"],[31,34,32,32],[31,36,32,34],[32,6,33,4],[33,4,34,2],[34,4,36,2,"ENABLE_FREEZE"],[34,17,36,15],[34,20,36,18,"shouldEnableReactFreeze"],[34,43,36,41],[35,2,37,0],[36,2,39,7],[36,11,39,16,"screensEnabled"],[36,25,39,30,"screensEnabled"],[36,26,39,30],[36,28,39,33],[37,4,40,2],[37,11,40,9,"ENABLE_SCREENS"],[37,25,40,23],[38,2,41,0],[39,2,43,7],[39,11,43,16,"freezeEnabled"],[39,24,43,29,"freezeEnabled"],[39,25,43,29],[39,27,43,32],[40,4,44,2],[40,11,44,9,"ENABLE_FREEZE"],[40,24,44,22],[41,2,45,0],[42,0,45,1],[42,3]],"functionMap":{"names":["<global>","enableScreens","enableFreeze","screensEnabled","freezeEnabled"],"mappings":"AAA;OCc;CDY;OEI;CFM;OGE;CHE;OIE;CJE"}},"type":"js/module"}]}