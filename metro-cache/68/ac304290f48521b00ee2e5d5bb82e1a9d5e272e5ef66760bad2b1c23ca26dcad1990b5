{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.IMMUTABLE_RECORD = exports.IMMUTABLE_MAP = exports.IMMUTABLE_LIST = exports.IMMUTABLE_ITERABLE = void 0;\n  exports.isImmutable = isImmutable;\n  exports.isIterable = isIterable;\n  exports.isList = isList;\n  exports.isMap = isMap;\n  exports.isRecord = isRecord;\n  exports.shallowToJS = shallowToJS;\n  var IMMUTABLE_ITERABLE = exports.IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\n  var IMMUTABLE_RECORD = exports.IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\n  var IMMUTABLE_LIST = exports.IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\n  var IMMUTABLE_MAP = exports.IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\n  function isIterable(x) {\n    return !!(x && x[IMMUTABLE_ITERABLE]);\n  }\n  function isRecord(x) {\n    return !!(x && x[IMMUTABLE_RECORD]);\n  }\n  function isImmutable(x) {\n    return isIterable(x) || isRecord(x);\n  }\n  function isList(x) {\n    return !!(x && x[IMMUTABLE_LIST]);\n  }\n  function isMap(x) {\n    return !!(x && x[IMMUTABLE_MAP]);\n  }\n  function shallowToJS(x, whitelist) {\n    return isIterable(x) ? x.reduce(function (result, curr, key) {\n      var newCurr = curr;\n      if (whitelist && whitelist[key]) {\n        newCurr = shallowToJS(curr);\n      }\n      result[key] = newCurr;\n      return result;\n    }, isList(x) ? [] : {}) : x;\n  }\n});","lineCount":43,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"IMMUTABLE_RECORD"],[7,26,6,24],[7,29,6,27,"exports"],[7,36,6,34],[7,37,6,35,"IMMUTABLE_MAP"],[7,50,6,48],[7,53,6,51,"exports"],[7,60,6,58],[7,61,6,59,"IMMUTABLE_LIST"],[7,75,6,73],[7,78,6,76,"exports"],[7,85,6,83],[7,86,6,84,"IMMUTABLE_ITERABLE"],[7,104,6,102],[7,107,6,105],[7,112,6,110],[7,113,6,111],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"isImmutable"],[8,21,7,19],[8,24,7,22,"isImmutable"],[8,35,7,33],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"isIterable"],[9,20,8,18],[9,23,8,21,"isIterable"],[9,33,8,31],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"isList"],[10,16,9,14],[10,19,9,17,"isList"],[10,25,9,23],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"isMap"],[11,15,10,13],[11,18,10,16,"isMap"],[11,23,10,21],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"isRecord"],[12,18,11,16],[12,21,11,19,"isRecord"],[12,29,11,27],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"shallowToJS"],[13,21,12,19],[13,24,12,22,"shallowToJS"],[13,35,12,33],[14,2,13,0],[14,6,13,6,"IMMUTABLE_ITERABLE"],[14,24,13,24],[14,27,13,27,"exports"],[14,34,13,34],[14,35,13,35,"IMMUTABLE_ITERABLE"],[14,53,13,53],[14,56,13,56],[14,84,13,84],[15,2,14,0],[15,6,14,6,"IMMUTABLE_RECORD"],[15,22,14,22],[15,25,14,25,"exports"],[15,32,14,32],[15,33,14,33,"IMMUTABLE_RECORD"],[15,49,14,49],[15,52,14,52],[15,78,14,78],[16,2,15,0],[16,6,15,6,"IMMUTABLE_LIST"],[16,20,15,20],[16,23,15,23,"exports"],[16,30,15,30],[16,31,15,31,"IMMUTABLE_LIST"],[16,45,15,45],[16,48,15,48],[16,72,15,72],[17,2,16,0],[17,6,16,6,"IMMUTABLE_MAP"],[17,19,16,19],[17,22,16,22,"exports"],[17,29,16,29],[17,30,16,30,"IMMUTABLE_MAP"],[17,43,16,43],[17,46,16,46],[17,69,16,69],[18,2,17,0],[18,11,17,9,"isIterable"],[18,21,17,19,"isIterable"],[18,22,17,20,"x"],[18,23,17,21],[18,25,17,23],[19,4,18,2],[19,11,18,9],[19,12,18,10],[19,14,18,12,"x"],[19,15,18,13],[19,19,18,17,"x"],[19,20,18,18],[19,21,18,19,"IMMUTABLE_ITERABLE"],[19,39,18,37],[19,40,18,38],[19,41,18,39],[20,2,19,0],[21,2,20,0],[21,11,20,9,"isRecord"],[21,19,20,17,"isRecord"],[21,20,20,18,"x"],[21,21,20,19],[21,23,20,21],[22,4,21,2],[22,11,21,9],[22,12,21,10],[22,14,21,12,"x"],[22,15,21,13],[22,19,21,17,"x"],[22,20,21,18],[22,21,21,19,"IMMUTABLE_RECORD"],[22,37,21,35],[22,38,21,36],[22,39,21,37],[23,2,22,0],[24,2,23,0],[24,11,23,9,"isImmutable"],[24,22,23,20,"isImmutable"],[24,23,23,21,"x"],[24,24,23,22],[24,26,23,24],[25,4,24,2],[25,11,24,9,"isIterable"],[25,21,24,19],[25,22,24,20,"x"],[25,23,24,21],[25,24,24,22],[25,28,24,26,"isRecord"],[25,36,24,34],[25,37,24,35,"x"],[25,38,24,36],[25,39,24,37],[26,2,25,0],[27,2,26,0],[27,11,26,9,"isList"],[27,17,26,15,"isList"],[27,18,26,16,"x"],[27,19,26,17],[27,21,26,19],[28,4,27,2],[28,11,27,9],[28,12,27,10],[28,14,27,12,"x"],[28,15,27,13],[28,19,27,17,"x"],[28,20,27,18],[28,21,27,19,"IMMUTABLE_LIST"],[28,35,27,33],[28,36,27,34],[28,37,27,35],[29,2,28,0],[30,2,29,0],[30,11,29,9,"isMap"],[30,16,29,14,"isMap"],[30,17,29,15,"x"],[30,18,29,16],[30,20,29,18],[31,4,30,2],[31,11,30,9],[31,12,30,10],[31,14,30,12,"x"],[31,15,30,13],[31,19,30,17,"x"],[31,20,30,18],[31,21,30,19,"IMMUTABLE_MAP"],[31,34,30,32],[31,35,30,33],[31,36,30,34],[32,2,31,0],[33,2,32,0],[33,11,32,9,"shallowToJS"],[33,22,32,20,"shallowToJS"],[33,23,32,21,"x"],[33,24,32,22],[33,26,32,24,"whitelist"],[33,35,32,33],[33,37,32,35],[34,4,33,2],[34,11,33,9,"isIterable"],[34,21,33,19],[34,22,33,20,"x"],[34,23,33,21],[34,24,33,22],[34,27,33,25,"x"],[34,28,33,26],[34,29,33,27,"reduce"],[34,35,33,33],[34,36,33,34],[34,46,33,35,"result"],[34,52,33,41],[34,54,33,43,"curr"],[34,58,33,47],[34,60,33,49,"key"],[34,63,33,52],[34,65,33,57],[35,6,34,4],[35,10,34,8,"newCurr"],[35,17,34,15],[35,20,34,18,"curr"],[35,24,34,22],[36,6,35,4],[36,10,35,8,"whitelist"],[36,19,35,17],[36,23,35,21,"whitelist"],[36,32,35,30],[36,33,35,31,"key"],[36,36,35,34],[36,37,35,35],[36,39,35,37],[37,8,36,6,"newCurr"],[37,15,36,13],[37,18,36,16,"shallowToJS"],[37,29,36,27],[37,30,36,28,"curr"],[37,34,36,32],[37,35,36,33],[38,6,37,4],[39,6,38,4,"result"],[39,12,38,10],[39,13,38,11,"key"],[39,16,38,14],[39,17,38,15],[39,20,38,18,"newCurr"],[39,27,38,25],[40,6,39,4],[40,13,39,11,"result"],[40,19,39,17],[41,4,40,2],[41,5,40,3],[41,7,40,5,"isList"],[41,13,40,11],[41,14,40,12,"x"],[41,15,40,13],[41,16,40,14],[41,19,40,17],[41,21,40,19],[41,24,40,22],[41,25,40,23],[41,26,40,24],[41,27,40,25],[41,30,40,28,"x"],[41,31,40,29],[42,2,41,0],[43,0,41,1],[43,3]],"functionMap":{"names":["<global>","isIterable","isRecord","isImmutable","isList","isMap","shallowToJS","x.reduce$argument_0"],"mappings":"AAA;ACgB;CDE;AEC;CFE;AGC;CHE;AIC;CJE;AKC;CLE;AMC;kCCC;GDO"}},"type":"js/module"}]}