{"dependencies":[{"name":"./number.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":37,"index":145},"end":{"line":7,"column":59,"index":167}}],"key":"KwacPfa/f+Ycd0H1r/kB6vjGBDU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n  var _number = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./number.js\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function () {\n      return b;\n    };\n  }\n  function one(b) {\n    return function (t) {\n      return b(t) + \"\";\n    };\n  }\n  function _default(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n      am,\n      // current match in a\n      bm,\n      // current match in b\n      bs,\n      // string preceding current number in b, if any\n      i = -1,\n      // index in s\n      s = [],\n      // string constants and placeholders\n      q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else {\n        // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: (0, _number.default)(am, bm)\n        });\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"_default"],[7,28,6,26],[8,2,7,0],[8,6,7,4,"_number"],[8,13,7,11],[8,16,7,14,"_interopRequireDefault"],[8,38,7,36],[8,39,7,37,"require"],[8,50,7,44],[8,51,7,44,"_dependencyMap"],[8,65,7,44],[8,83,7,58],[8,84,7,59],[8,85,7,60],[9,2,8,0],[9,11,8,9,"_interopRequireDefault"],[9,33,8,31,"_interopRequireDefault"],[9,34,8,32,"obj"],[9,37,8,35],[9,39,8,37],[10,4,8,39],[10,11,8,46,"obj"],[10,14,8,49],[10,18,8,53,"obj"],[10,21,8,56],[10,22,8,57,"__esModule"],[10,32,8,67],[10,35,8,70,"obj"],[10,38,8,73],[10,41,8,76],[11,6,8,78,"default"],[11,13,8,85],[11,15,8,87,"obj"],[12,4,8,91],[12,5,8,92],[13,2,8,94],[14,2,9,0],[14,6,9,4,"reA"],[14,9,9,7],[14,12,9,10],[14,57,9,55],[15,4,10,2,"reB"],[15,7,10,5],[15,10,10,8],[15,14,10,12,"RegExp"],[15,20,10,18],[15,21,10,19,"reA"],[15,24,10,22],[15,25,10,23,"source"],[15,31,10,29],[15,33,10,31],[15,36,10,34],[15,37,10,35],[16,2,11,0],[16,11,11,9,"zero"],[16,15,11,13,"zero"],[16,16,11,14,"b"],[16,17,11,15],[16,19,11,17],[17,4,12,2],[17,11,12,9],[17,23,12,21],[18,6,13,4],[18,13,13,11,"b"],[18,14,13,12],[19,4,14,2],[19,5,14,3],[20,2,15,0],[21,2,16,0],[21,11,16,9,"one"],[21,14,16,12,"one"],[21,15,16,13,"b"],[21,16,16,14],[21,18,16,16],[22,4,17,2],[22,11,17,9],[22,21,17,19,"t"],[22,22,17,20],[22,24,17,22],[23,6,18,4],[23,13,18,11,"b"],[23,14,18,12],[23,15,18,13,"t"],[23,16,18,14],[23,17,18,15],[23,20,18,18],[23,22,18,20],[24,4,19,2],[24,5,19,3],[25,2,20,0],[26,2,21,0],[26,11,21,9,"_default"],[26,19,21,17,"_default"],[26,20,21,18,"a"],[26,21,21,19],[26,23,21,21,"b"],[26,24,21,22],[26,26,21,24],[27,4,22,2],[27,8,22,6,"bi"],[27,10,22,8],[27,13,22,11,"reA"],[27,16,22,14],[27,17,22,15,"lastIndex"],[27,26,22,24],[27,29,22,27,"reB"],[27,32,22,30],[27,33,22,31,"lastIndex"],[27,42,22,40],[27,45,22,43],[27,46,22,44],[28,6,23,4],[29,6,24,4,"am"],[29,8,24,6],[30,6,25,4],[31,6,26,4,"bm"],[31,8,26,6],[32,6,27,4],[33,6,28,4,"bs"],[33,8,28,6],[34,6,29,4],[35,6,30,4,"i"],[35,7,30,5],[35,10,30,8],[35,11,30,9],[35,12,30,10],[36,6,31,4],[37,6,32,4,"s"],[37,7,32,5],[37,10,32,8],[37,12,32,10],[38,6,33,4],[39,6,34,4,"q"],[39,7,34,5],[39,10,34,8],[39,12,34,10],[39,13,34,11],[39,14,34,12],[41,4,36,2],[42,4,37,2,"a"],[42,5,37,3],[42,8,37,6,"a"],[42,9,37,7],[42,12,37,10],[42,14,37,12],[42,16,37,14,"b"],[42,17,37,15],[42,20,37,18,"b"],[42,21,37,19],[42,24,37,22],[42,26,37,24],[44,4,39,2],[45,4,40,2],[45,11,40,9],[45,12,40,10,"am"],[45,14,40,12],[45,17,40,15,"reA"],[45,20,40,18],[45,21,40,19,"exec"],[45,25,40,23],[45,26,40,24,"a"],[45,27,40,25],[45,28,40,26],[45,34,40,32,"bm"],[45,36,40,34],[45,39,40,37,"reB"],[45,42,40,40],[45,43,40,41,"exec"],[45,47,40,45],[45,48,40,46,"b"],[45,49,40,47],[45,50,40,48],[45,51,40,49],[45,53,40,51],[46,6,41,4],[46,10,41,8],[46,11,41,9,"bs"],[46,13,41,11],[46,16,41,14,"bm"],[46,18,41,16],[46,19,41,17,"index"],[46,24,41,22],[46,28,41,26,"bi"],[46,30,41,28],[46,32,41,30],[47,8,42,6],[48,8,43,6,"bs"],[48,10,43,8],[48,13,43,11,"b"],[48,14,43,12],[48,15,43,13,"slice"],[48,20,43,18],[48,21,43,19,"bi"],[48,23,43,21],[48,25,43,23,"bs"],[48,27,43,25],[48,28,43,26],[49,8,44,6],[49,12,44,10,"s"],[49,13,44,11],[49,14,44,12,"i"],[49,15,44,13],[49,16,44,14],[49,18,44,16,"s"],[49,19,44,17],[49,20,44,18,"i"],[49,21,44,19],[49,22,44,20],[49,26,44,24,"bs"],[49,28,44,26],[49,29,44,27],[49,30,44,28],[50,8,44,28],[50,13,45,11,"s"],[50,14,45,12],[50,15,45,13],[50,17,45,15,"i"],[50,18,45,16],[50,19,45,17],[50,22,45,20,"bs"],[50,24,45,22],[51,6,46,4],[52,6,47,4],[52,10,47,8],[52,11,47,9,"am"],[52,13,47,11],[52,16,47,14,"am"],[52,18,47,16],[52,19,47,17],[52,20,47,18],[52,21,47,19],[52,28,47,26,"bm"],[52,30,47,28],[52,33,47,31,"bm"],[52,35,47,33],[52,36,47,34],[52,37,47,35],[52,38,47,36],[52,39,47,37],[52,41,47,39],[53,8,48,6],[54,8,49,6],[54,12,49,10,"s"],[54,13,49,11],[54,14,49,12,"i"],[54,15,49,13],[54,16,49,14],[54,18,49,16,"s"],[54,19,49,17],[54,20,49,18,"i"],[54,21,49,19],[54,22,49,20],[54,26,49,24,"bm"],[54,28,49,26],[54,29,49,27],[54,30,49,28],[55,8,49,28],[55,13,50,11,"s"],[55,14,50,12],[55,15,50,13],[55,17,50,15,"i"],[55,18,50,16],[55,19,50,17],[55,22,50,20,"bm"],[55,24,50,22],[56,6,51,4],[56,7,51,5],[56,13,51,11],[57,8,52,6],[58,8,53,6,"s"],[58,9,53,7],[58,10,53,8],[58,12,53,10,"i"],[58,13,53,11],[58,14,53,12],[58,17,53,15],[58,21,53,19],[59,8,54,6,"q"],[59,9,54,7],[59,10,54,8,"push"],[59,14,54,12],[59,15,54,13],[60,10,55,8,"i"],[60,11,55,9],[60,13,55,11,"i"],[60,14,55,12],[61,10,56,8,"x"],[61,11,56,9],[61,13,56,11],[61,14,56,12],[61,15,56,13],[61,17,56,15,"_number"],[61,24,56,22],[61,25,56,23,"default"],[61,32,56,30],[61,34,56,32,"am"],[61,36,56,34],[61,38,56,36,"bm"],[61,40,56,38],[62,8,57,6],[62,9,57,7],[62,10,57,8],[63,6,58,4],[64,6,59,4,"bi"],[64,8,59,6],[64,11,59,9,"reB"],[64,14,59,12],[64,15,59,13,"lastIndex"],[64,24,59,22],[65,4,60,2],[67,4,62,2],[68,4,63,2],[68,8,63,6,"bi"],[68,10,63,8],[68,13,63,11,"b"],[68,14,63,12],[68,15,63,13,"length"],[68,21,63,19],[68,23,63,21],[69,6,64,4,"bs"],[69,8,64,6],[69,11,64,9,"b"],[69,12,64,10],[69,13,64,11,"slice"],[69,18,64,16],[69,19,64,17,"bi"],[69,21,64,19],[69,22,64,20],[70,6,65,4],[70,10,65,8,"s"],[70,11,65,9],[70,12,65,10,"i"],[70,13,65,11],[70,14,65,12],[70,16,65,14,"s"],[70,17,65,15],[70,18,65,16,"i"],[70,19,65,17],[70,20,65,18],[70,24,65,22,"bs"],[70,26,65,24],[70,27,65,25],[70,28,65,26],[71,6,65,26],[71,11,66,9,"s"],[71,12,66,10],[71,13,66,11],[71,15,66,13,"i"],[71,16,66,14],[71,17,66,15],[71,20,66,18,"bs"],[71,22,66,20],[72,4,67,2],[74,4,69,2],[75,4,70,2],[76,4,71,2],[76,11,71,9,"s"],[76,12,71,10],[76,13,71,11,"length"],[76,19,71,17],[76,22,71,20],[76,23,71,21],[76,26,71,24,"q"],[76,27,71,25],[76,28,71,26],[76,29,71,27],[76,30,71,28],[76,33,71,31,"one"],[76,36,71,34],[76,37,71,35,"q"],[76,38,71,36],[76,39,71,37],[76,40,71,38],[76,41,71,39],[76,42,71,40,"x"],[76,43,71,41],[76,44,71,42],[76,47,71,45,"zero"],[76,51,71,49],[76,52,71,50,"b"],[76,53,71,51],[76,54,71,52],[76,58,71,56,"b"],[76,59,71,57],[76,62,71,60,"q"],[76,63,71,61],[76,64,71,62,"length"],[76,70,71,68],[76,72,71,70],[76,82,71,80,"t"],[76,83,71,81],[76,85,71,83],[77,6,72,4],[77,11,72,9],[77,15,72,13,"i"],[77,16,72,14],[77,19,72,17],[77,20,72,18],[77,22,72,20,"o"],[77,23,72,21],[77,25,72,23,"i"],[77,26,72,24],[77,29,72,27,"b"],[77,30,72,28],[77,32,72,30],[77,34,72,32,"i"],[77,35,72,33],[77,37,72,35,"s"],[77,38,72,36],[77,39,72,37],[77,40,72,38,"o"],[77,41,72,39],[77,44,72,42,"q"],[77,45,72,43],[77,46,72,44,"i"],[77,47,72,45],[77,48,72,46],[77,50,72,48,"i"],[77,51,72,49],[77,52,72,50],[77,55,72,53,"o"],[77,56,72,54],[77,57,72,55,"x"],[77,58,72,56],[77,59,72,57,"t"],[77,60,72,58],[77,61,72,59],[78,6,73,4],[78,13,73,11,"s"],[78,14,73,12],[78,15,73,13,"join"],[78,19,73,17],[78,20,73,18],[78,22,73,20],[78,23,73,21],[79,4,74,2],[79,5,74,3],[79,6,74,4],[80,2,75,0],[81,0,75,1],[81,3]],"functionMap":{"names":["<global>","_interopRequireDefault","zero","<anonymous>","one","_default"],"mappings":"AAA;ACO,+FD;AEG;SCC;GDE;CFC;AIC;SDC;GCE;CJC;AKC;sEFkD;GEG"}},"type":"js/module"}]}