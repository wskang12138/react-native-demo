{"dependencies":[{"name":"./_arrayIncludes","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":20,"index":59},"end":{"line":2,"column":47,"index":86}}],"key":"GyB7XD2RrBt1cStZCmDx7YsKL30="}},{"name":"./_arrayIncludesWith","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":24,"index":112},"end":{"line":3,"column":55,"index":143}}],"key":"GzNDbIH0eRp/KdE47av+SH4fmR8="}},{"name":"./_createSet","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":16,"index":200},"end":{"line":5,"column":39,"index":223}}],"key":"Q1unpoOFZ7RTdssG9v9/sO/u3lc="}},{"name":"./_setToArray","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":17,"index":242},"end":{"line":6,"column":41,"index":266}}],"key":"XnbL88BiAgB7Ys1HJm1VigUCWAs="}},{"name":"./_cacheHas","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":15,"index":160},"end":{"line":4,"column":37,"index":182}}],"key":"XTQyFQQIDhW4QPnLKOzlYiGyU+g="}},{"name":"./_SetCache","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"vP9dx5lNtbRmguLw2nF9+zjhZrw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /**\n   * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The iteratee invoked per element.\n   * @param {Function} [comparator] The comparator invoked per element.\n   * @returns {Array} Returns the new duplicate free array.\n   */\n  function baseUniq(array, iteratee, comparator) {\n    var index = -1,\n      includes = _$$_REQUIRE(_dependencyMap[0], \"./_arrayIncludes\"),\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n    if (comparator) {\n      isCommon = false;\n      includes = _$$_REQUIRE(_dependencyMap[1], \"./_arrayIncludesWith\");\n    } else if (length >= LARGE_ARRAY_SIZE) {\n      var set = iteratee ? null : _$$_REQUIRE(_dependencyMap[2], \"./_createSet\")(array);\n      if (set) {\n        return _$$_REQUIRE(_dependencyMap[3], \"./_setToArray\")(set);\n      }\n      isCommon = false;\n      includes = _$$_REQUIRE(_dependencyMap[4], \"./_cacheHas\");\n      seen = new (_$$_REQUIRE(_dependencyMap[5], \"./_SetCache\"))();\n    } else {\n      seen = iteratee ? [] : result;\n    }\n    outer: while (++index < length) {\n      var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n      value = comparator || value !== 0 ? value : 0;\n      if (isCommon && computed === computed) {\n        var seenIndex = seen.length;\n        while (seenIndex--) {\n          if (seen[seenIndex] === computed) {\n            continue outer;\n          }\n        }\n        if (iteratee) {\n          seen.push(computed);\n        }\n        result.push(value);\n      } else if (!includes(seen, computed, comparator)) {\n        if (seen !== result) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n  module.exports = baseUniq;\n});","lineCount":60,"map":[[2,2,8,0],[3,2,9,0],[3,6,9,4,"LARGE_ARRAY_SIZE"],[3,22,9,20],[3,25,9,23],[3,28,9,26],[5,2,11,0],[6,0,12,0],[7,0,13,0],[8,0,14,0],[9,0,15,0],[10,0,16,0],[11,0,17,0],[12,0,18,0],[13,0,19,0],[14,2,20,0],[14,11,20,9,"baseUniq"],[14,19,20,17,"baseUniq"],[14,20,20,18,"array"],[14,25,20,23],[14,27,20,25,"iteratee"],[14,35,20,33],[14,37,20,35,"comparator"],[14,47,20,45],[14,49,20,47],[15,4,21,2],[15,8,21,6,"index"],[15,13,21,11],[15,16,21,14],[15,17,21,15],[15,18,21,16],[16,6,22,6,"includes"],[16,14,22,14],[16,17,22,14,"_$$_REQUIRE"],[16,28,22,14],[16,29,22,14,"_dependencyMap"],[16,43,22,14],[16,67,22,30],[17,6,23,6,"length"],[17,12,23,12],[17,15,23,15,"array"],[17,20,23,20],[17,21,23,21,"length"],[17,27,23,27],[18,6,24,6,"isCommon"],[18,14,24,14],[18,17,24,17],[18,21,24,21],[19,6,25,6,"result"],[19,12,25,12],[19,15,25,15],[19,17,25,17],[20,6,26,6,"seen"],[20,10,26,10],[20,13,26,13,"result"],[20,19,26,19],[21,4,28,2],[21,8,28,6,"comparator"],[21,18,28,16],[21,20,28,18],[22,6,29,4,"isCommon"],[22,14,29,12],[22,17,29,15],[22,22,29,20],[23,6,30,4,"includes"],[23,14,30,12],[23,17,30,12,"_$$_REQUIRE"],[23,28,30,12],[23,29,30,12,"_dependencyMap"],[23,43,30,12],[23,71,30,32],[24,4,31,2],[24,5,31,3],[24,11,32,7],[24,15,32,11,"length"],[24,21,32,17],[24,25,32,21,"LARGE_ARRAY_SIZE"],[24,41,32,37],[24,43,32,39],[25,6,33,4],[25,10,33,8,"set"],[25,13,33,11],[25,16,33,14,"iteratee"],[25,24,33,22],[25,27,33,25],[25,31,33,29],[25,34,33,32,"_$$_REQUIRE"],[25,45,33,32],[25,46,33,32,"_dependencyMap"],[25,60,33,32],[25,81,33,42,"array"],[25,86,33,47],[25,87,33,48],[26,6,34,4],[26,10,34,8,"set"],[26,13,34,11],[26,15,34,13],[27,8,35,6],[27,15,35,13,"_$$_REQUIRE"],[27,26,35,13],[27,27,35,13,"_dependencyMap"],[27,41,35,13],[27,63,35,24,"set"],[27,66,35,27],[27,67,35,28],[28,6,36,4],[29,6,37,4,"isCommon"],[29,14,37,12],[29,17,37,15],[29,22,37,20],[30,6,38,4,"includes"],[30,14,38,12],[30,17,38,12,"_$$_REQUIRE"],[30,28,38,12],[30,29,38,12,"_dependencyMap"],[30,43,38,12],[30,62,38,23],[31,6,39,4,"seen"],[31,10,39,8],[31,13,39,11],[31,18,39,11,"_$$_REQUIRE"],[31,29,39,11],[31,30,39,11,"_dependencyMap"],[31,44,39,11],[31,65,39,22],[31,66,39,23],[32,4,40,2],[32,5,40,3],[32,11,41,7],[33,6,42,4,"seen"],[33,10,42,8],[33,13,42,11,"iteratee"],[33,21,42,19],[33,24,42,22],[33,26,42,24],[33,29,42,27,"result"],[33,35,42,33],[34,4,43,2],[35,4,44,2,"outer"],[35,9,44,7],[35,11,45,2],[35,18,45,9],[35,20,45,11,"index"],[35,25,45,16],[35,28,45,19,"length"],[35,34,45,25],[35,36,45,27],[36,6,46,4],[36,10,46,8,"value"],[36,15,46,13],[36,18,46,16,"array"],[36,23,46,21],[36,24,46,22,"index"],[36,29,46,27],[36,30,46,28],[37,8,47,8,"computed"],[37,16,47,16],[37,19,47,19,"iteratee"],[37,27,47,27],[37,30,47,30,"iteratee"],[37,38,47,38],[37,39,47,39,"value"],[37,44,47,44],[37,45,47,45],[37,48,47,48,"value"],[37,53,47,53],[38,6,49,4,"value"],[38,11,49,9],[38,14,49,13,"comparator"],[38,24,49,23],[38,28,49,27,"value"],[38,33,49,32],[38,38,49,37],[38,39,49,38],[38,42,49,42,"value"],[38,47,49,47],[38,50,49,50],[38,51,49,51],[39,6,50,4],[39,10,50,8,"isCommon"],[39,18,50,16],[39,22,50,20,"computed"],[39,30,50,28],[39,35,50,33,"computed"],[39,43,50,41],[39,45,50,43],[40,8,51,6],[40,12,51,10,"seenIndex"],[40,21,51,19],[40,24,51,22,"seen"],[40,28,51,26],[40,29,51,27,"length"],[40,35,51,33],[41,8,52,6],[41,15,52,13,"seenIndex"],[41,24,52,22],[41,26,52,24],[41,28,52,26],[42,10,53,8],[42,14,53,12,"seen"],[42,18,53,16],[42,19,53,17,"seenIndex"],[42,28,53,26],[42,29,53,27],[42,34,53,32,"computed"],[42,42,53,40],[42,44,53,42],[43,12,54,10],[43,21,54,19,"outer"],[43,26,54,24],[44,10,55,8],[45,8,56,6],[46,8,57,6],[46,12,57,10,"iteratee"],[46,20,57,18],[46,22,57,20],[47,10,58,8,"seen"],[47,14,58,12],[47,15,58,13,"push"],[47,19,58,17],[47,20,58,18,"computed"],[47,28,58,26],[47,29,58,27],[48,8,59,6],[49,8,60,6,"result"],[49,14,60,12],[49,15,60,13,"push"],[49,19,60,17],[49,20,60,18,"value"],[49,25,60,23],[49,26,60,24],[50,6,61,4],[50,7,61,5],[50,13,62,9],[50,17,62,13],[50,18,62,14,"includes"],[50,26,62,22],[50,27,62,23,"seen"],[50,31,62,27],[50,33,62,29,"computed"],[50,41,62,37],[50,43,62,39,"comparator"],[50,53,62,49],[50,54,62,50],[50,56,62,52],[51,8,63,6],[51,12,63,10,"seen"],[51,16,63,14],[51,21,63,19,"result"],[51,27,63,25],[51,29,63,27],[52,10,64,8,"seen"],[52,14,64,12],[52,15,64,13,"push"],[52,19,64,17],[52,20,64,18,"computed"],[52,28,64,26],[52,29,64,27],[53,8,65,6],[54,8,66,6,"result"],[54,14,66,12],[54,15,66,13,"push"],[54,19,66,17],[54,20,66,18,"value"],[54,25,66,23],[54,26,66,24],[55,6,67,4],[56,4,68,2],[57,4,69,2],[57,11,69,9,"result"],[57,17,69,15],[58,2,70,0],[59,2,72,0,"module"],[59,8,72,6],[59,9,72,7,"exports"],[59,16,72,14],[59,19,72,17,"baseUniq"],[59,27,72,25],[60,0,72,26],[60,3]],"functionMap":{"names":["<global>","baseUniq"],"mappings":"AAA;ACmB;CDkD"}},"type":"js/module"}]}