{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":1,"index":2871}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./ordinal.js","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":38,"index":266},"end":{"line":10,"column":61,"index":289}}],"key":"5GrDmMlevgHKzwe2hHMUIlRNtOo="}},{"name":"../../../lib-vendor/d3-array/src/index.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":13,"index":140},"end":{"line":8,"column":65,"index":192}}],"key":"41CiIbbto419EiV4PGEZiajVVfc="}},{"name":"./init.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":12,"index":206},"end":{"line":9,"column":32,"index":226}}],"key":"As6H85ElGz2SiuN/Gj/+jrhHnI8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = band;\n  exports.point = point;\n  var _ordinal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./ordinal.js\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function band() {\n    var scale = (0, _ordinal.default)().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n    delete scale.unknown;\n    function rescale() {\n      var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = (0, _$$_REQUIRE(_dependencyMap[2], \"../../../lib-vendor/d3-array/src/index.js\").range)(n).map(function (i) {\n        return start + step * i;\n      });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n    scale.domain = function (_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n    scale.range = function (_) {\n      var _ref;\n      return arguments.length ? (_ref = _slicedToArray(_, 2), r0 = _ref[0], r1 = _ref[1], r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n    };\n    scale.rangeRound = function (_) {\n      var _ref2;\n      return _ref2 = _slicedToArray(_, 2), r0 = _ref2[0], r1 = _ref2[1], r0 = +r0, r1 = +r1, round = true, rescale();\n    };\n    scale.bandwidth = function () {\n      return bandwidth;\n    };\n    scale.step = function () {\n      return step;\n    };\n    scale.round = function (_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n    scale.padding = function (_) {\n      return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n    };\n    scale.paddingInner = function (_) {\n      return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n    };\n    scale.paddingOuter = function (_) {\n      return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n    };\n    scale.align = function (_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n    scale.copy = function () {\n      return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n    };\n    return _$$_REQUIRE(_dependencyMap[3], \"./init.js\").initRange.apply(rescale(), arguments);\n  }\n  function pointish(scale) {\n    var copy = scale.copy;\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n    scale.copy = function () {\n      return pointish(copy());\n    };\n    return scale;\n  }\n  function point() {\n    return pointish(band.apply(null, arguments).paddingInner(1));\n  }\n});","lineCount":94,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"default"],[8,17,6,15],[8,20,6,18,"band"],[8,24,6,22],[9,2,7,0,"exports"],[9,9,7,7],[9,10,7,8,"point"],[9,15,7,13],[9,18,7,16,"point"],[9,23,7,21],[10,2,10,0],[10,6,10,4,"_ordinal"],[10,14,10,12],[10,17,10,15,"_interopRequireDefault"],[10,39,10,37],[10,40,10,38,"require"],[10,51,10,45],[10,52,10,45,"_dependencyMap"],[10,66,10,45],[10,85,10,60],[10,86,10,61],[10,87,10,62],[11,2,11,0],[11,11,11,9,"_interopRequireDefault"],[11,33,11,31,"_interopRequireDefault"],[11,34,11,32,"obj"],[11,37,11,35],[11,39,11,37],[12,4,11,39],[12,11,11,46,"obj"],[12,14,11,49],[12,18,11,53,"obj"],[12,21,11,56],[12,22,11,57,"__esModule"],[12,32,11,67],[12,35,11,70,"obj"],[12,38,11,73],[12,41,11,76],[13,6,11,78,"default"],[13,13,11,85],[13,15,11,87,"obj"],[14,4,11,91],[14,5,11,92],[15,2,11,94],[16,2,12,0],[16,11,12,9,"band"],[16,15,12,13,"band"],[16,16,12,13],[16,18,12,16],[17,4,13,2],[17,8,13,6,"scale"],[17,13,13,11],[17,16,13,14],[17,17,13,15],[17,18,13,16],[17,20,13,18,"_ordinal"],[17,28,13,26],[17,29,13,27,"default"],[17,36,13,34],[17,38,13,36],[17,39,13,37],[17,40,13,38,"unknown"],[17,47,13,45],[17,48,13,46,"undefined"],[17,57,13,55],[17,58,13,56],[18,6,14,4,"domain"],[18,12,14,10],[18,15,14,13,"scale"],[18,20,14,18],[18,21,14,19,"domain"],[18,27,14,25],[19,6,15,4,"ordinalRange"],[19,18,15,16],[19,21,15,19,"scale"],[19,26,15,24],[19,27,15,25,"range"],[19,32,15,30],[20,6,16,4,"r0"],[20,8,16,6],[20,11,16,9],[20,12,16,10],[21,6,17,4,"r1"],[21,8,17,6],[21,11,17,9],[21,12,17,10],[22,6,18,4,"step"],[22,10,18,8],[23,6,19,4,"bandwidth"],[23,15,19,13],[24,6,20,4,"round"],[24,11,20,9],[24,14,20,12],[24,19,20,17],[25,6,21,4,"paddingInner"],[25,18,21,16],[25,21,21,19],[25,22,21,20],[26,6,22,4,"paddingOuter"],[26,18,22,16],[26,21,22,19],[26,22,22,20],[27,6,23,4,"align"],[27,11,23,9],[27,14,23,12],[27,17,23,15],[28,4,24,2],[28,11,24,9,"scale"],[28,16,24,14],[28,17,24,15,"unknown"],[28,24,24,22],[29,4,25,2],[29,13,25,11,"rescale"],[29,20,25,18,"rescale"],[29,21,25,18],[29,23,25,21],[30,6,26,4],[30,10,26,8,"n"],[30,11,26,9],[30,14,26,12,"domain"],[30,20,26,18],[30,21,26,19],[30,22,26,20],[30,23,26,21,"length"],[30,29,26,27],[31,8,27,6,"reverse"],[31,15,27,13],[31,18,27,16,"r1"],[31,20,27,18],[31,23,27,21,"r0"],[31,25,27,23],[32,8,28,6,"start"],[32,13,28,11],[32,16,28,14,"reverse"],[32,23,28,21],[32,26,28,24,"r1"],[32,28,28,26],[32,31,28,29,"r0"],[32,33,28,31],[33,8,29,6,"stop"],[33,12,29,10],[33,15,29,13,"reverse"],[33,22,29,20],[33,25,29,23,"r0"],[33,27,29,25],[33,30,29,28,"r1"],[33,32,29,30],[34,6,30,4,"step"],[34,10,30,8],[34,13,30,11],[34,14,30,12,"stop"],[34,18,30,16],[34,21,30,19,"start"],[34,26,30,24],[34,30,30,28,"Math"],[34,34,30,32],[34,35,30,33,"max"],[34,38,30,36],[34,39,30,37],[34,40,30,38],[34,42,30,40,"n"],[34,43,30,41],[34,46,30,44,"paddingInner"],[34,58,30,56],[34,61,30,59,"paddingOuter"],[34,73,30,71],[34,76,30,74],[34,77,30,75],[34,78,30,76],[35,6,31,4],[35,10,31,8,"round"],[35,15,31,13],[35,17,31,15,"step"],[35,21,31,19],[35,24,31,22,"Math"],[35,28,31,26],[35,29,31,27,"floor"],[35,34,31,32],[35,35,31,33,"step"],[35,39,31,37],[35,40,31,38],[36,6,32,4,"start"],[36,11,32,9],[36,15,32,13],[36,16,32,14,"stop"],[36,20,32,18],[36,23,32,21,"start"],[36,28,32,26],[36,31,32,29,"step"],[36,35,32,33],[36,39,32,37,"n"],[36,40,32,38],[36,43,32,41,"paddingInner"],[36,55,32,53],[36,56,32,54],[36,60,32,58,"align"],[36,65,32,63],[37,6,33,4,"bandwidth"],[37,15,33,13],[37,18,33,16,"step"],[37,22,33,20],[37,26,33,24],[37,27,33,25],[37,30,33,28,"paddingInner"],[37,42,33,40],[37,43,33,41],[38,6,34,4],[38,10,34,8,"round"],[38,15,34,13],[38,17,34,15,"start"],[38,22,34,20],[38,25,34,23,"Math"],[38,29,34,27],[38,30,34,28,"round"],[38,35,34,33],[38,36,34,34,"start"],[38,41,34,39],[38,42,34,40],[38,44,34,42,"bandwidth"],[38,53,34,51],[38,56,34,54,"Math"],[38,60,34,58],[38,61,34,59,"round"],[38,66,34,64],[38,67,34,65,"bandwidth"],[38,76,34,74],[38,77,34,75],[39,6,35,4],[39,10,35,8,"values"],[39,16,35,14],[39,19,35,17],[39,20,35,18],[39,21,35,19],[39,23,35,21,"_$$_REQUIRE"],[39,34,35,21],[39,35,35,21,"_dependencyMap"],[39,49,35,21],[39,99,35,28,"range"],[39,104,35,33],[39,106,35,35,"n"],[39,107,35,36],[39,108,35,37],[39,109,35,38,"map"],[39,112,35,41],[39,113,35,42],[39,123,35,52,"i"],[39,124,35,53],[39,126,35,55],[40,8,36,6],[40,15,36,13,"start"],[40,20,36,18],[40,23,36,21,"step"],[40,27,36,25],[40,30,36,28,"i"],[40,31,36,29],[41,6,37,4],[41,7,37,5],[41,8,37,6],[42,6,38,4],[42,13,38,11,"ordinalRange"],[42,25,38,23],[42,26,38,24,"reverse"],[42,33,38,31],[42,36,38,34,"values"],[42,42,38,40],[42,43,38,41,"reverse"],[42,50,38,48],[42,51,38,49],[42,52,38,50],[42,55,38,53,"values"],[42,61,38,59],[42,62,38,60],[43,4,39,2],[44,4,40,2,"scale"],[44,9,40,7],[44,10,40,8,"domain"],[44,16,40,14],[44,19,40,17],[44,29,40,27,"_"],[44,30,40,28],[44,32,40,30],[45,6,41,4],[45,13,41,11,"arguments"],[45,22,41,20],[45,23,41,21,"length"],[45,29,41,27],[45,33,41,31,"domain"],[45,39,41,37],[45,40,41,38,"_"],[45,41,41,39],[45,42,41,40],[45,44,41,42,"rescale"],[45,51,41,49],[45,52,41,50],[45,53,41,51],[45,57,41,55,"domain"],[45,63,41,61],[45,64,41,62],[45,65,41,63],[46,4,42,2],[46,5,42,3],[47,4,43,2,"scale"],[47,9,43,7],[47,10,43,8,"range"],[47,15,43,13],[47,18,43,16],[47,28,43,26,"_"],[47,29,43,27],[47,31,43,29],[48,6,43,29],[48,10,43,29,"_ref"],[48,14,43,29],[49,6,44,4],[49,13,44,11,"arguments"],[49,22,44,20],[49,23,44,21,"length"],[49,29,44,27],[49,33,44,31,"_ref"],[49,37,44,31],[49,40,44,31,"_slicedToArray"],[49,54,44,31],[49,55,44,42,"_"],[49,56,44,43],[49,62,44,32,"r0"],[49,64,44,34],[49,67,44,34,"_ref"],[49,71,44,34],[49,76,44,36,"r1"],[49,78,44,38],[49,81,44,38,"_ref"],[49,85,44,38],[49,90,44,45,"r0"],[49,92,44,47],[49,95,44,50],[49,96,44,51,"r0"],[49,98,44,53],[49,100,44,55,"r1"],[49,102,44,57],[49,105,44,60],[49,106,44,61,"r1"],[49,108,44,63],[49,110,44,65,"rescale"],[49,117,44,72],[49,118,44,73],[49,119,44,74],[49,123,44,78],[49,124,44,79,"r0"],[49,126,44,81],[49,128,44,83,"r1"],[49,130,44,85],[49,131,44,86],[50,4,45,2],[50,5,45,3],[51,4,46,2,"scale"],[51,9,46,7],[51,10,46,8,"rangeRound"],[51,20,46,18],[51,23,46,21],[51,33,46,31,"_"],[51,34,46,32],[51,36,46,34],[52,6,46,34],[52,10,46,34,"_ref2"],[52,15,46,34],[53,6,47,4],[53,13,47,11,"_ref2"],[53,18,47,11],[53,21,47,11,"_slicedToArray"],[53,35,47,11],[53,36,47,22,"_"],[53,37,47,23],[53,43,47,12,"r0"],[53,45,47,14],[53,48,47,14,"_ref2"],[53,53,47,14],[53,58,47,16,"r1"],[53,60,47,18],[53,63,47,18,"_ref2"],[53,68,47,18],[53,73,47,25,"r0"],[53,75,47,27],[53,78,47,30],[53,79,47,31,"r0"],[53,81,47,33],[53,83,47,35,"r1"],[53,85,47,37],[53,88,47,40],[53,89,47,41,"r1"],[53,91,47,43],[53,93,47,45,"round"],[53,98,47,50],[53,101,47,53],[53,105,47,57],[53,107,47,59,"rescale"],[53,114,47,66],[53,115,47,67],[53,116,47,68],[54,4,48,2],[54,5,48,3],[55,4,49,2,"scale"],[55,9,49,7],[55,10,49,8,"bandwidth"],[55,19,49,17],[55,22,49,20],[55,34,49,32],[56,6,50,4],[56,13,50,11,"bandwidth"],[56,22,50,20],[57,4,51,2],[57,5,51,3],[58,4,52,2,"scale"],[58,9,52,7],[58,10,52,8,"step"],[58,14,52,12],[58,17,52,15],[58,29,52,27],[59,6,53,4],[59,13,53,11,"step"],[59,17,53,15],[60,4,54,2],[60,5,54,3],[61,4,55,2,"scale"],[61,9,55,7],[61,10,55,8,"round"],[61,15,55,13],[61,18,55,16],[61,28,55,26,"_"],[61,29,55,27],[61,31,55,29],[62,6,56,4],[62,13,56,11,"arguments"],[62,22,56,20],[62,23,56,21,"length"],[62,29,56,27],[62,33,56,31,"round"],[62,38,56,36],[62,41,56,39],[62,42,56,40],[62,43,56,41,"_"],[62,44,56,42],[62,46,56,44,"rescale"],[62,53,56,51],[62,54,56,52],[62,55,56,53],[62,59,56,57,"round"],[62,64,56,62],[63,4,57,2],[63,5,57,3],[64,4,58,2,"scale"],[64,9,58,7],[64,10,58,8,"padding"],[64,17,58,15],[64,20,58,18],[64,30,58,28,"_"],[64,31,58,29],[64,33,58,31],[65,6,59,4],[65,13,59,11,"arguments"],[65,22,59,20],[65,23,59,21,"length"],[65,29,59,27],[65,33,59,31,"paddingInner"],[65,45,59,43],[65,48,59,46,"Math"],[65,52,59,50],[65,53,59,51,"min"],[65,56,59,54],[65,57,59,55],[65,58,59,56],[65,60,59,58,"paddingOuter"],[65,72,59,70],[65,75,59,73],[65,76,59,74,"_"],[65,77,59,75],[65,78,59,76],[65,80,59,78,"rescale"],[65,87,59,85],[65,88,59,86],[65,89,59,87],[65,93,59,91,"paddingInner"],[65,105,59,103],[66,4,60,2],[66,5,60,3],[67,4,61,2,"scale"],[67,9,61,7],[67,10,61,8,"paddingInner"],[67,22,61,20],[67,25,61,23],[67,35,61,33,"_"],[67,36,61,34],[67,38,61,36],[68,6,62,4],[68,13,62,11,"arguments"],[68,22,62,20],[68,23,62,21,"length"],[68,29,62,27],[68,33,62,31,"paddingInner"],[68,45,62,43],[68,48,62,46,"Math"],[68,52,62,50],[68,53,62,51,"min"],[68,56,62,54],[68,57,62,55],[68,58,62,56],[68,60,62,58,"_"],[68,61,62,59],[68,62,62,60],[68,64,62,62,"rescale"],[68,71,62,69],[68,72,62,70],[68,73,62,71],[68,77,62,75,"paddingInner"],[68,89,62,87],[69,4,63,2],[69,5,63,3],[70,4,64,2,"scale"],[70,9,64,7],[70,10,64,8,"paddingOuter"],[70,22,64,20],[70,25,64,23],[70,35,64,33,"_"],[70,36,64,34],[70,38,64,36],[71,6,65,4],[71,13,65,11,"arguments"],[71,22,65,20],[71,23,65,21,"length"],[71,29,65,27],[71,33,65,31,"paddingOuter"],[71,45,65,43],[71,48,65,46],[71,49,65,47,"_"],[71,50,65,48],[71,52,65,50,"rescale"],[71,59,65,57],[71,60,65,58],[71,61,65,59],[71,65,65,63,"paddingOuter"],[71,77,65,75],[72,4,66,2],[72,5,66,3],[73,4,67,2,"scale"],[73,9,67,7],[73,10,67,8,"align"],[73,15,67,13],[73,18,67,16],[73,28,67,26,"_"],[73,29,67,27],[73,31,67,29],[74,6,68,4],[74,13,68,11,"arguments"],[74,22,68,20],[74,23,68,21,"length"],[74,29,68,27],[74,33,68,31,"align"],[74,38,68,36],[74,41,68,39,"Math"],[74,45,68,43],[74,46,68,44,"max"],[74,49,68,47],[74,50,68,48],[74,51,68,49],[74,53,68,51,"Math"],[74,57,68,55],[74,58,68,56,"min"],[74,61,68,59],[74,62,68,60],[74,63,68,61],[74,65,68,63,"_"],[74,66,68,64],[74,67,68,65],[74,68,68,66],[74,70,68,68,"rescale"],[74,77,68,75],[74,78,68,76],[74,79,68,77],[74,83,68,81,"align"],[74,88,68,86],[75,4,69,2],[75,5,69,3],[76,4,70,2,"scale"],[76,9,70,7],[76,10,70,8,"copy"],[76,14,70,12],[76,17,70,15],[76,29,70,27],[77,6,71,4],[77,13,71,11,"band"],[77,17,71,15],[77,18,71,16,"domain"],[77,24,71,22],[77,25,71,23],[77,26,71,24],[77,28,71,26],[77,29,71,27,"r0"],[77,31,71,29],[77,33,71,31,"r1"],[77,35,71,33],[77,36,71,34],[77,37,71,35],[77,38,71,36,"round"],[77,43,71,41],[77,44,71,42,"round"],[77,49,71,47],[77,50,71,48],[77,51,71,49,"paddingInner"],[77,63,71,61],[77,64,71,62,"paddingInner"],[77,76,71,74],[77,77,71,75],[77,78,71,76,"paddingOuter"],[77,90,71,88],[77,91,71,89,"paddingOuter"],[77,103,71,101],[77,104,71,102],[77,105,71,103,"align"],[77,110,71,108],[77,111,71,109,"align"],[77,116,71,114],[77,117,71,115],[78,4,72,2],[78,5,72,3],[79,4,73,2],[79,11,73,9,"_$$_REQUIRE"],[79,22,73,9],[79,23,73,9,"_dependencyMap"],[79,37,73,9],[79,55,73,15,"initRange"],[79,64,73,24],[79,65,73,25,"apply"],[79,70,73,30],[79,71,73,31,"rescale"],[79,78,73,38],[79,79,73,39],[79,80,73,40],[79,82,73,42,"arguments"],[79,91,73,51],[79,92,73,52],[80,2,74,0],[81,2,75,0],[81,11,75,9,"pointish"],[81,19,75,17,"pointish"],[81,20,75,18,"scale"],[81,25,75,23],[81,27,75,25],[82,4,76,2],[82,8,76,6,"copy"],[82,12,76,10],[82,15,76,13,"scale"],[82,20,76,18],[82,21,76,19,"copy"],[82,25,76,23],[83,4,77,2,"scale"],[83,9,77,7],[83,10,77,8,"padding"],[83,17,77,15],[83,20,77,18,"scale"],[83,25,77,23],[83,26,77,24,"paddingOuter"],[83,38,77,36],[84,4,78,2],[84,11,78,9,"scale"],[84,16,78,14],[84,17,78,15,"paddingInner"],[84,29,78,27],[85,4,79,2],[85,11,79,9,"scale"],[85,16,79,14],[85,17,79,15,"paddingOuter"],[85,29,79,27],[86,4,80,2,"scale"],[86,9,80,7],[86,10,80,8,"copy"],[86,14,80,12],[86,17,80,15],[86,29,80,27],[87,6,81,4],[87,13,81,11,"pointish"],[87,21,81,19],[87,22,81,20,"copy"],[87,26,81,24],[87,27,81,25],[87,28,81,26],[87,29,81,27],[88,4,82,2],[88,5,82,3],[89,4,83,2],[89,11,83,9,"scale"],[89,16,83,14],[90,2,84,0],[91,2,85,0],[91,11,85,9,"point"],[91,16,85,14,"point"],[91,17,85,14],[91,19,85,17],[92,4,86,2],[92,11,86,9,"pointish"],[92,19,86,17],[92,20,86,18,"band"],[92,24,86,22],[92,25,86,23,"apply"],[92,30,86,28],[92,31,86,29],[92,35,86,33],[92,37,86,35,"arguments"],[92,46,86,44],[92,47,86,45],[92,48,86,46,"paddingInner"],[92,60,86,58],[92,61,86,59],[92,62,86,60],[92,63,86,61],[92,64,86,62],[93,2,87,0],[94,0,87,1],[94,3]],"functionMap":{"names":["<global>","_interopRequireDefault","band","rescale","map$argument_0","scale.domain","scale.range","scale.rangeRound","scale.bandwidth","scale.step","scale.round","scale.padding","scale.paddingInner","scale.paddingOuter","scale.align","scale.copy","pointish","point"],"mappings":"AAA;ACU,+FD;AEC;ECa;0CCU;KDE;GDE;iBGC;GHE;gBIC;GJE;qBKC;GLE;oBMC;GNE;eOC;GPE;gBQC;GRE;kBSC;GTE;uBUC;GVE;uBWC;GXE;gBYC;GZE;eaC;GbE;CFE;AgBC;eDK;GCE;ChBE;AiBC"}},"type":"js/module"}]}