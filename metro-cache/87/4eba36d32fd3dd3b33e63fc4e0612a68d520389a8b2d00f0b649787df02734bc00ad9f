{"dependencies":[{"name":"./_Stack","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":31,"index":31}}],"key":"8UBkBdqbbIu1+r211MFIoSTH3a0="}},{"name":"./_baseIsEqual","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":18,"index":51},"end":{"line":2,"column":43,"index":76}}],"key":"x3UOG0uSB7wUnMk9jrfyD+2EsnA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n  /**\n   * The base implementation of `_.isMatch` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Object} source The object of property values to match.\n   * @param {Array} matchData The property names, values, and compare flags to match.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n   */\n  function baseIsMatch(object, source, matchData, customizer) {\n    var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n    if (object == null) {\n      return !length;\n    }\n    object = Object(object);\n    while (index--) {\n      var data = matchData[index];\n      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n        return false;\n      }\n    }\n    while (++index < length) {\n      data = matchData[index];\n      var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n      if (noCustomizer && data[2]) {\n        if (objValue === undefined && !(key in object)) {\n          return false;\n        }\n      } else {\n        var stack = new (_$$_REQUIRE(_dependencyMap[0], \"./_Stack\"))();\n        if (customizer) {\n          var result = customizer(objValue, srcValue, key, object, source, stack);\n        }\n        if (!(result === undefined ? _$$_REQUIRE(_dependencyMap[1], \"./_baseIsEqual\")(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  module.exports = baseIsMatch;\n});","lineCount":52,"map":[[2,2,4,0],[3,2,5,0],[3,6,5,4,"COMPARE_PARTIAL_FLAG"],[3,26,5,24],[3,29,5,27],[3,30,5,28],[4,4,6,4,"COMPARE_UNORDERED_FLAG"],[4,26,6,26],[4,29,6,29],[4,30,6,30],[6,2,8,0],[7,0,9,0],[8,0,10,0],[9,0,11,0],[10,0,12,0],[11,0,13,0],[12,0,14,0],[13,0,15,0],[14,0,16,0],[15,0,17,0],[16,2,18,0],[16,11,18,9,"baseIsMatch"],[16,22,18,20,"baseIsMatch"],[16,23,18,21,"object"],[16,29,18,27],[16,31,18,29,"source"],[16,37,18,35],[16,39,18,37,"matchData"],[16,48,18,46],[16,50,18,48,"customizer"],[16,60,18,58],[16,62,18,60],[17,4,19,2],[17,8,19,6,"index"],[17,13,19,11],[17,16,19,14,"matchData"],[17,25,19,23],[17,26,19,24,"length"],[17,32,19,30],[18,6,20,6,"length"],[18,12,20,12],[18,15,20,15,"index"],[18,20,20,20],[19,6,21,6,"noCustomizer"],[19,18,21,18],[19,21,21,21],[19,22,21,22,"customizer"],[19,32,21,32],[20,4,23,2],[20,8,23,6,"object"],[20,14,23,12],[20,18,23,16],[20,22,23,20],[20,24,23,22],[21,6,24,4],[21,13,24,11],[21,14,24,12,"length"],[21,20,24,18],[22,4,25,2],[23,4,26,2,"object"],[23,10,26,8],[23,13,26,11,"Object"],[23,19,26,17],[23,20,26,18,"object"],[23,26,26,24],[23,27,26,25],[24,4,27,2],[24,11,27,9,"index"],[24,16,27,14],[24,18,27,16],[24,20,27,18],[25,6,28,4],[25,10,28,8,"data"],[25,14,28,12],[25,17,28,15,"matchData"],[25,26,28,24],[25,27,28,25,"index"],[25,32,28,30],[25,33,28,31],[26,6,29,4],[26,10,29,9,"noCustomizer"],[26,22,29,21],[26,26,29,25,"data"],[26,30,29,29],[26,31,29,30],[26,32,29,31],[26,33,29,32],[26,36,30,12,"data"],[26,40,30,16],[26,41,30,17],[26,42,30,18],[26,43,30,19],[26,48,30,24,"object"],[26,54,30,30],[26,55,30,31,"data"],[26,59,30,35],[26,60,30,36],[26,61,30,37],[26,62,30,38],[26,63,30,39],[26,66,31,12],[26,68,31,14,"data"],[26,72,31,18],[26,73,31,19],[26,74,31,20],[26,75,31,21],[26,79,31,25,"object"],[26,85,31,31],[26,86,31,32],[26,88,32,10],[27,8,33,6],[27,15,33,13],[27,20,33,18],[28,6,34,4],[29,4,35,2],[30,4,36,2],[30,11,36,9],[30,13,36,11,"index"],[30,18,36,16],[30,21,36,19,"length"],[30,27,36,25],[30,29,36,27],[31,6,37,4,"data"],[31,10,37,8],[31,13,37,11,"matchData"],[31,22,37,20],[31,23,37,21,"index"],[31,28,37,26],[31,29,37,27],[32,6,38,4],[32,10,38,8,"key"],[32,13,38,11],[32,16,38,14,"data"],[32,20,38,18],[32,21,38,19],[32,22,38,20],[32,23,38,21],[33,8,39,8,"objValue"],[33,16,39,16],[33,19,39,19,"object"],[33,25,39,25],[33,26,39,26,"key"],[33,29,39,29],[33,30,39,30],[34,8,40,8,"srcValue"],[34,16,40,16],[34,19,40,19,"data"],[34,23,40,23],[34,24,40,24],[34,25,40,25],[34,26,40,26],[35,6,42,4],[35,10,42,8,"noCustomizer"],[35,22,42,20],[35,26,42,24,"data"],[35,30,42,28],[35,31,42,29],[35,32,42,30],[35,33,42,31],[35,35,42,33],[36,8,43,6],[36,12,43,10,"objValue"],[36,20,43,18],[36,25,43,23,"undefined"],[36,34,43,32],[36,38,43,36],[36,40,43,38,"key"],[36,43,43,41],[36,47,43,45,"object"],[36,53,43,51],[36,54,43,52],[36,56,43,54],[37,10,44,8],[37,17,44,15],[37,22,44,20],[38,8,45,6],[39,6,46,4],[39,7,46,5],[39,13,46,11],[40,8,47,6],[40,12,47,10,"stack"],[40,17,47,15],[40,20,47,18],[40,25,47,18,"_$$_REQUIRE"],[40,36,47,18],[40,37,47,18,"_dependencyMap"],[40,51,47,18],[40,69,47,26],[40,70,47,27],[41,8,48,6],[41,12,48,10,"customizer"],[41,22,48,20],[41,24,48,22],[42,10,49,8],[42,14,49,12,"result"],[42,20,49,18],[42,23,49,21,"customizer"],[42,33,49,31],[42,34,49,32,"objValue"],[42,42,49,40],[42,44,49,42,"srcValue"],[42,52,49,50],[42,54,49,52,"key"],[42,57,49,55],[42,59,49,57,"object"],[42,65,49,63],[42,67,49,65,"source"],[42,73,49,71],[42,75,49,73,"stack"],[42,80,49,78],[42,81,49,79],[43,8,50,6],[44,8,51,6],[44,12,51,10],[44,14,51,12,"result"],[44,20,51,18],[44,25,51,23,"undefined"],[44,34,51,32],[44,37,52,14,"_$$_REQUIRE"],[44,48,52,14],[44,49,52,14,"_dependencyMap"],[44,63,52,14],[44,86,52,26,"srcValue"],[44,94,52,34],[44,96,52,36,"objValue"],[44,104,52,44],[44,106,52,46,"COMPARE_PARTIAL_FLAG"],[44,126,52,66],[44,129,52,69,"COMPARE_UNORDERED_FLAG"],[44,151,52,91],[44,153,52,93,"customizer"],[44,163,52,103],[44,165,52,105,"stack"],[44,170,52,110],[44,171,52,111],[44,174,53,14,"result"],[44,180,53,20],[44,181,54,11],[44,183,54,13],[45,10,55,8],[45,17,55,15],[45,22,55,20],[46,8,56,6],[47,6,57,4],[48,4,58,2],[49,4,59,2],[49,11,59,9],[49,15,59,13],[50,2,60,0],[51,2,62,0,"module"],[51,8,62,6],[51,9,62,7,"exports"],[51,16,62,14],[51,19,62,17,"baseIsMatch"],[51,30,62,28],[52,0,62,29],[52,3]],"functionMap":{"names":["<global>","baseIsMatch"],"mappings":"AAA;ACiB;CD0C"}},"type":"js/module"}]}