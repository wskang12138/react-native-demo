{"dependencies":[{"name":"../../../lib-vendor/d3-array/src/index.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":13,"index":121},"end":{"line":7,"column":65,"index":173}},{"start":{"line":7,"column":13,"index":121},"end":{"line":7,"column":65,"index":173}},{"start":{"line":7,"column":13,"index":121},"end":{"line":7,"column":65,"index":173}}],"key":"41CiIbbto419EiV4PGEZiajVVfc="}},{"name":"./init.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":12,"index":187},"end":{"line":8,"column":32,"index":207}}],"key":"As6H85ElGz2SiuN/Gj/+jrhHnI8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = quantile;\n  function quantile() {\n    var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n    function rescale() {\n      var i = 0,\n        n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = (0, _$$_REQUIRE(_dependencyMap[0], \"../../../lib-vendor/d3-array/src/index.js\").quantileSorted)(domain, i / n);\n      return scale;\n    }\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : range[(0, _$$_REQUIRE(_dependencyMap[0], \"../../../lib-vendor/d3-array/src/index.js\").bisect)(thresholds, x)];\n    }\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];\n    };\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(_$$_REQUIRE(_dependencyMap[0], \"../../../lib-vendor/d3-array/src/index.js\").ascending);\n      return rescale();\n    };\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n    };\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n    scale.quantiles = function () {\n      return thresholds.slice();\n    };\n    scale.copy = function () {\n      return quantile().domain(domain).range(range).unknown(unknown);\n    };\n    return _$$_REQUIRE(_dependencyMap[1], \"./init.js\").initRange.apply(scale, arguments);\n  }\n});","lineCount":48,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"quantile"],[7,28,6,26],[8,2,9,0],[8,11,9,9,"quantile"],[8,19,9,17,"quantile"],[8,20,9,17],[8,22,9,20],[9,4,10,2],[9,8,10,6,"domain"],[9,14,10,12],[9,17,10,15],[9,19,10,17],[10,6,11,4,"range"],[10,11,11,9],[10,14,11,12],[10,16,11,14],[11,6,12,4,"thresholds"],[11,16,12,14],[11,19,12,17],[11,21,12,19],[12,6,13,4,"unknown"],[12,13,13,11],[13,4,14,2],[13,13,14,11,"rescale"],[13,20,14,18,"rescale"],[13,21,14,18],[13,23,14,21],[14,6,15,4],[14,10,15,8,"i"],[14,11,15,9],[14,14,15,12],[14,15,15,13],[15,8,16,6,"n"],[15,9,16,7],[15,12,16,10,"Math"],[15,16,16,14],[15,17,16,15,"max"],[15,20,16,18],[15,21,16,19],[15,22,16,20],[15,24,16,22,"range"],[15,29,16,27],[15,30,16,28,"length"],[15,36,16,34],[15,37,16,35],[16,6,17,4,"thresholds"],[16,16,17,14],[16,19,17,17],[16,23,17,21,"Array"],[16,28,17,26],[16,29,17,27,"n"],[16,30,17,28],[16,33,17,31],[16,34,17,32],[16,35,17,33],[17,6,18,4],[17,13,18,11],[17,15,18,13,"i"],[17,16,18,14],[17,19,18,17,"n"],[17,20,18,18],[17,22,18,20,"thresholds"],[17,32,18,30],[17,33,18,31,"i"],[17,34,18,32],[17,37,18,35],[17,38,18,36],[17,39,18,37],[17,42,18,40],[17,43,18,41],[17,44,18,42],[17,46,18,44,"_$$_REQUIRE"],[17,57,18,44],[17,58,18,44,"_dependencyMap"],[17,72,18,44],[17,122,18,51,"quantileSorted"],[17,136,18,65],[17,138,18,67,"domain"],[17,144,18,73],[17,146,18,75,"i"],[17,147,18,76],[17,150,18,79,"n"],[17,151,18,80],[17,152,18,81],[18,6,19,4],[18,13,19,11,"scale"],[18,18,19,16],[19,4,20,2],[20,4,21,2],[20,13,21,11,"scale"],[20,18,21,16,"scale"],[20,19,21,17,"x"],[20,20,21,18],[20,22,21,20],[21,6,22,4],[21,13,22,11,"x"],[21,14,22,12],[21,18,22,16],[21,22,22,20],[21,26,22,24,"isNaN"],[21,31,22,29],[21,32,22,30,"x"],[21,33,22,31],[21,36,22,34],[21,37,22,35,"x"],[21,38,22,36],[21,39,22,37],[21,42,22,40,"unknown"],[21,49,22,47],[21,52,22,50,"range"],[21,57,22,55],[21,58,22,56],[21,59,22,57],[21,60,22,58],[21,62,22,60,"_$$_REQUIRE"],[21,73,22,60],[21,74,22,60,"_dependencyMap"],[21,88,22,60],[21,138,22,67,"bisect"],[21,144,22,73],[21,146,22,75,"thresholds"],[21,156,22,85],[21,158,22,87,"x"],[21,159,22,88],[21,160,22,89],[21,161,22,90],[22,4,23,2],[23,4,24,2,"scale"],[23,9,24,7],[23,10,24,8,"invertExtent"],[23,22,24,20],[23,25,24,23],[23,35,24,33,"y"],[23,36,24,34],[23,38,24,36],[24,6,25,4],[24,10,25,8,"i"],[24,11,25,9],[24,14,25,12,"range"],[24,19,25,17],[24,20,25,18,"indexOf"],[24,27,25,25],[24,28,25,26,"y"],[24,29,25,27],[24,30,25,28],[25,6,26,4],[25,13,26,11,"i"],[25,14,26,12],[25,17,26,15],[25,18,26,16],[25,21,26,19],[25,22,26,20,"NaN"],[25,25,26,23],[25,27,26,25,"NaN"],[25,30,26,28],[25,31,26,29],[25,34,26,32],[25,35,26,33,"i"],[25,36,26,34],[25,39,26,37],[25,40,26,38],[25,43,26,41,"thresholds"],[25,53,26,51],[25,54,26,52,"i"],[25,55,26,53],[25,58,26,56],[25,59,26,57],[25,60,26,58],[25,63,26,61,"domain"],[25,69,26,67],[25,70,26,68],[25,71,26,69],[25,72,26,70],[25,74,26,72,"i"],[25,75,26,73],[25,78,26,76,"thresholds"],[25,88,26,86],[25,89,26,87,"length"],[25,95,26,93],[25,98,26,96,"thresholds"],[25,108,26,106],[25,109,26,107,"i"],[25,110,26,108],[25,111,26,109],[25,114,26,112,"domain"],[25,120,26,118],[25,121,26,119,"domain"],[25,127,26,125],[25,128,26,126,"length"],[25,134,26,132],[25,137,26,135],[25,138,26,136],[25,139,26,137],[25,140,26,138],[26,4,27,2],[26,5,27,3],[27,4,28,2,"scale"],[27,9,28,7],[27,10,28,8,"domain"],[27,16,28,14],[27,19,28,17],[27,29,28,27,"_"],[27,30,28,28],[27,32,28,30],[28,6,29,4],[28,10,29,8],[28,11,29,9,"arguments"],[28,20,29,18],[28,21,29,19,"length"],[28,27,29,25],[28,29,29,27],[28,36,29,34,"domain"],[28,42,29,40],[28,43,29,41,"slice"],[28,48,29,46],[28,49,29,47],[28,50,29,48],[29,6,30,4,"domain"],[29,12,30,10],[29,15,30,13],[29,17,30,15],[30,6,31,4],[30,11,31,9],[30,15,31,13,"d"],[30,16,31,14],[30,20,31,18,"_"],[30,21,31,19],[30,23,31,21],[30,27,31,25,"d"],[30,28,31,26],[30,32,31,30],[30,36,31,34],[30,40,31,38],[30,41,31,39,"isNaN"],[30,46,31,44],[30,47,31,45,"d"],[30,48,31,46],[30,51,31,49],[30,52,31,50,"d"],[30,53,31,51],[30,54,31,52],[30,56,31,54,"domain"],[30,62,31,60],[30,63,31,61,"push"],[30,67,31,65],[30,68,31,66,"d"],[30,69,31,67],[30,70,31,68],[31,6,32,4,"domain"],[31,12,32,10],[31,13,32,11,"sort"],[31,17,32,15],[31,18,32,16,"_$$_REQUIRE"],[31,29,32,16],[31,30,32,16,"_dependencyMap"],[31,44,32,16],[31,94,32,23,"ascending"],[31,103,32,32],[31,104,32,33],[32,6,33,4],[32,13,33,11,"rescale"],[32,20,33,18],[32,21,33,19],[32,22,33,20],[33,4,34,2],[33,5,34,3],[34,4,35,2,"scale"],[34,9,35,7],[34,10,35,8,"range"],[34,15,35,13],[34,18,35,16],[34,28,35,26,"_"],[34,29,35,27],[34,31,35,29],[35,6,36,4],[35,13,36,11,"arguments"],[35,22,36,20],[35,23,36,21,"length"],[35,29,36,27],[35,33,36,31,"range"],[35,38,36,36],[35,41,36,39,"Array"],[35,46,36,44],[35,47,36,45,"from"],[35,51,36,49],[35,52,36,50,"_"],[35,53,36,51],[35,54,36,52],[35,56,36,54,"rescale"],[35,63,36,61],[35,64,36,62],[35,65,36,63],[35,69,36,67,"range"],[35,74,36,72],[35,75,36,73,"slice"],[35,80,36,78],[35,81,36,79],[35,82,36,80],[36,4,37,2],[36,5,37,3],[37,4,38,2,"scale"],[37,9,38,7],[37,10,38,8,"unknown"],[37,17,38,15],[37,20,38,18],[37,30,38,28,"_"],[37,31,38,29],[37,33,38,31],[38,6,39,4],[38,13,39,11,"arguments"],[38,22,39,20],[38,23,39,21,"length"],[38,29,39,27],[38,33,39,31,"unknown"],[38,40,39,38],[38,43,39,41,"_"],[38,44,39,42],[38,46,39,44,"scale"],[38,51,39,49],[38,55,39,53,"unknown"],[38,62,39,60],[39,4,40,2],[39,5,40,3],[40,4,41,2,"scale"],[40,9,41,7],[40,10,41,8,"quantiles"],[40,19,41,17],[40,22,41,20],[40,34,41,32],[41,6,42,4],[41,13,42,11,"thresholds"],[41,23,42,21],[41,24,42,22,"slice"],[41,29,42,27],[41,30,42,28],[41,31,42,29],[42,4,43,2],[42,5,43,3],[43,4,44,2,"scale"],[43,9,44,7],[43,10,44,8,"copy"],[43,14,44,12],[43,17,44,15],[43,29,44,27],[44,6,45,4],[44,13,45,11,"quantile"],[44,21,45,19],[44,22,45,20],[44,23,45,21],[44,24,45,22,"domain"],[44,30,45,28],[44,31,45,29,"domain"],[44,37,45,35],[44,38,45,36],[44,39,45,37,"range"],[44,44,45,42],[44,45,45,43,"range"],[44,50,45,48],[44,51,45,49],[44,52,45,50,"unknown"],[44,59,45,57],[44,60,45,58,"unknown"],[44,67,45,65],[44,68,45,66],[45,4,46,2],[45,5,46,3],[46,4,47,2],[46,11,47,9,"_$$_REQUIRE"],[46,22,47,9],[46,23,47,9,"_dependencyMap"],[46,37,47,9],[46,55,47,15,"initRange"],[46,64,47,24],[46,65,47,25,"apply"],[46,70,47,30],[46,71,47,31,"scale"],[46,76,47,36],[46,78,47,38,"arguments"],[46,87,47,47],[46,88,47,48],[47,2,48,0],[48,0,48,1],[48,3]],"functionMap":{"names":["<global>","quantile","rescale","scale","scale.invertExtent","scale.domain","scale.range","scale.unknown","scale.quantiles","scale.copy"],"mappings":"AAA;ACQ;ECK;GDM;EEC;GFE;uBGC;GHG;iBIC;GJM;gBKC;GLE;kBMC;GNE;oBOC;GPE;eQC;GRE"}},"type":"js/module"}]}