{"dependencies":[{"name":"./_trimmedEndIndex","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":22,"index":22},"end":{"line":1,"column":51,"index":51}}],"key":"xf1T8kBNZFQ4AvYNZx23woR9EG0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string ? string.slice(0, _$$_REQUIRE(_dependencyMap[0], \"./_trimmedEndIndex\")(string) + 1).replace(reTrimStart, '') : string;\n  }\n  module.exports = baseTrim;\n});","lineCount":16,"map":[[2,2,3,0],[3,2,4,0],[3,6,4,4,"reTrimStart"],[3,17,4,15],[3,20,4,18],[3,26,4,24],[5,2,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,0,11,0],[11,0,12,0],[12,2,13,0],[12,11,13,9,"baseTrim"],[12,19,13,17,"baseTrim"],[12,20,13,18,"string"],[12,26,13,24],[12,28,13,26],[13,4,14,2],[13,11,14,9,"string"],[13,17,14,15],[13,20,15,6,"string"],[13,26,15,12],[13,27,15,13,"slice"],[13,32,15,18],[13,33,15,19],[13,34,15,20],[13,36,15,22,"_$$_REQUIRE"],[13,47,15,22],[13,48,15,22,"_dependencyMap"],[13,62,15,22],[13,89,15,38,"string"],[13,95,15,44],[13,96,15,45],[13,99,15,48],[13,100,15,49],[13,101,15,50],[13,102,15,51,"replace"],[13,109,15,58],[13,110,15,59,"reTrimStart"],[13,121,15,70],[13,123,15,72],[13,125,15,74],[13,126,15,75],[13,129,16,6,"string"],[13,135,16,12],[14,2,17,0],[15,2,19,0,"module"],[15,8,19,6],[15,9,19,7,"exports"],[15,16,19,14],[15,19,19,17,"baseTrim"],[15,27,19,25],[16,0,19,26],[16,3]],"functionMap":{"names":["<global>","baseTrim"],"mappings":"AAA;ACY;CDI"}},"type":"js/module"}]}