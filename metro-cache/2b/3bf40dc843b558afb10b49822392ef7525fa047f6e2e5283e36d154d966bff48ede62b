{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":45,"column":1,"index":1592}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./ascending.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":40,"index":230},"end":{"line":9,"column":65,"index":255}}],"key":"MCVmuwF6cu1odV/erN//dVPR0Jk="}},{"name":"./permute.js","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":38,"index":296},"end":{"line":10,"column":61,"index":319}}],"key":"4gnW7NcdZJIR+tJ+Z5lHmYeTvDQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ascendingDefined = ascendingDefined;\n  exports.compareDefined = compareDefined;\n  exports.default = sort;\n  var _ascending = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./ascending.js\"));\n  var _permute = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./permute.js\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function sort(values) {\n    for (var _len = arguments.length, F = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      F[_key - 1] = arguments[_key];\n    }\n    if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n    values = Array.from(values);\n    var _F = F,\n      _F2 = _slicedToArray(_F, 1),\n      f = _F2[0];\n    if (f && f.length !== 2 || F.length > 1) {\n      var index = Uint32Array.from(values, function (d, i) {\n        return i;\n      });\n      if (F.length > 1) {\n        F = F.map(function (f) {\n          return values.map(f);\n        });\n        index.sort(function (i, j) {\n          for (var _f of F) {\n            var c = ascendingDefined(_f[i], _f[j]);\n            if (c) return c;\n          }\n        });\n      } else {\n        f = values.map(f);\n        index.sort(function (i, j) {\n          return ascendingDefined(f[i], f[j]);\n        });\n      }\n      return (0, _permute.default)(values, index);\n    }\n    return values.sort(compareDefined(f));\n  }\n  function compareDefined() {\n    var compare = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _ascending.default;\n    if (compare === _ascending.default) return ascendingDefined;\n    if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n    return function (a, b) {\n      var x = compare(a, b);\n      if (x || x === 0) return x;\n      return (compare(b, b) === 0) - (compare(a, a) === 0);\n    };\n  }\n  function ascendingDefined(a, b) {\n    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n  }\n});","lineCount":64,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"ascendingDefined"],[8,26,6,24],[8,29,6,27,"ascendingDefined"],[8,45,6,43],[9,2,7,0,"exports"],[9,9,7,7],[9,10,7,8,"compareDefined"],[9,24,7,22],[9,27,7,25,"compareDefined"],[9,41,7,39],[10,2,8,0,"exports"],[10,9,8,7],[10,10,8,8,"default"],[10,17,8,15],[10,20,8,18,"sort"],[10,24,8,22],[11,2,9,0],[11,6,9,4,"_ascending"],[11,16,9,14],[11,19,9,17,"_interopRequireDefault"],[11,41,9,39],[11,42,9,40,"require"],[11,53,9,47],[11,54,9,47,"_dependencyMap"],[11,68,9,47],[11,89,9,64],[11,90,9,65],[11,91,9,66],[12,2,10,0],[12,6,10,4,"_permute"],[12,14,10,12],[12,17,10,15,"_interopRequireDefault"],[12,39,10,37],[12,40,10,38,"require"],[12,51,10,45],[12,52,10,45,"_dependencyMap"],[12,66,10,45],[12,85,10,60],[12,86,10,61],[12,87,10,62],[13,2,11,0],[13,11,11,9,"_interopRequireDefault"],[13,33,11,31,"_interopRequireDefault"],[13,34,11,32,"obj"],[13,37,11,35],[13,39,11,37],[14,4,11,39],[14,11,11,46,"obj"],[14,14,11,49],[14,18,11,53,"obj"],[14,21,11,56],[14,22,11,57,"__esModule"],[14,32,11,67],[14,35,11,70,"obj"],[14,38,11,73],[14,41,11,76],[15,6,11,78,"default"],[15,13,11,85],[15,15,11,87,"obj"],[16,4,11,91],[16,5,11,92],[17,2,11,94],[18,2,12,0],[18,11,12,9,"sort"],[18,15,12,13,"sort"],[18,16,12,14,"values"],[18,22,12,20],[18,24,12,28],[19,4,12,28],[19,13,12,28,"_len"],[19,17,12,28],[19,20,12,28,"arguments"],[19,29,12,28],[19,30,12,28,"length"],[19,36,12,28],[19,38,12,25,"F"],[19,39,12,26],[19,46,12,26,"Array"],[19,51,12,26],[19,52,12,26,"_len"],[19,56,12,26],[19,63,12,26,"_len"],[19,67,12,26],[19,78,12,26,"_key"],[19,82,12,26],[19,88,12,26,"_key"],[19,92,12,26],[19,95,12,26,"_len"],[19,99,12,26],[19,101,12,26,"_key"],[19,105,12,26],[20,6,12,25,"F"],[20,7,12,26],[20,8,12,26,"_key"],[20,12,12,26],[20,20,12,26,"arguments"],[20,29,12,26],[20,30,12,26,"_key"],[20,34,12,26],[21,4,12,26],[22,4,13,2],[22,8,13,6],[22,15,13,13,"values"],[22,21,13,19],[22,22,13,20,"Symbol"],[22,28,13,26],[22,29,13,27,"iterator"],[22,37,13,35],[22,38,13,36],[22,43,13,41],[22,53,13,51],[22,55,13,53],[22,61,13,59],[22,65,13,63,"TypeError"],[22,74,13,72],[22,75,13,73],[22,99,13,97],[22,100,13,98],[23,4,14,2,"values"],[23,10,14,8],[23,13,14,11,"Array"],[23,18,14,16],[23,19,14,17,"from"],[23,23,14,21],[23,24,14,22,"values"],[23,30,14,28],[23,31,14,29],[24,4,15,2],[24,8,15,2,"_F"],[24,10,15,2],[24,13,15,12,"F"],[24,14,15,13],[25,6,15,13,"_F2"],[25,9,15,13],[25,12,15,13,"_slicedToArray"],[25,26,15,13],[25,27,15,13,"_F"],[25,29,15,13],[26,6,15,7,"f"],[26,7,15,8],[26,10,15,8,"_F2"],[26,13,15,8],[27,4,16,2],[27,8,16,6,"f"],[27,9,16,7],[27,13,16,11,"f"],[27,14,16,12],[27,15,16,13,"length"],[27,21,16,19],[27,26,16,24],[27,27,16,25],[27,31,16,29,"F"],[27,32,16,30],[27,33,16,31,"length"],[27,39,16,37],[27,42,16,40],[27,43,16,41],[27,45,16,43],[28,6,17,4],[28,10,17,10,"index"],[28,15,17,15],[28,18,17,18,"Uint32Array"],[28,29,17,29],[28,30,17,30,"from"],[28,34,17,34],[28,35,17,35,"values"],[28,41,17,41],[28,43,17,43],[28,53,17,44,"d"],[28,54,17,45],[28,56,17,47,"i"],[28,57,17,48],[29,8,17,48],[29,15,17,53,"i"],[29,16,17,54],[30,6,17,54],[30,8,17,55],[31,6,18,4],[31,10,18,8,"F"],[31,11,18,9],[31,12,18,10,"length"],[31,18,18,16],[31,21,18,19],[31,22,18,20],[31,24,18,22],[32,8,19,6,"F"],[32,9,19,7],[32,12,19,10,"F"],[32,13,19,11],[32,14,19,12,"map"],[32,17,19,15],[32,18,19,16],[32,28,19,16,"f"],[32,29,19,17],[33,10,19,17],[33,17,19,21,"values"],[33,23,19,27],[33,24,19,28,"map"],[33,27,19,31],[33,28,19,32,"f"],[33,29,19,33],[33,30,19,34],[34,8,19,34],[34,10,19,35],[35,8,20,6,"index"],[35,13,20,11],[35,14,20,12,"sort"],[35,18,20,16],[35,19,20,17],[35,29,20,18,"i"],[35,30,20,19],[35,32,20,21,"j"],[35,33,20,22],[35,35,20,27],[36,10,21,8],[36,15,21,13],[36,19,21,19,"f"],[36,21,21,20],[36,25,21,24,"F"],[36,26,21,25],[36,28,21,27],[37,12,22,10],[37,16,22,16,"c"],[37,17,22,17],[37,20,22,20,"ascendingDefined"],[37,36,22,36],[37,37,22,37,"f"],[37,39,22,38],[37,40,22,39,"i"],[37,41,22,40],[37,42,22,41],[37,44,22,43,"f"],[37,46,22,44],[37,47,22,45,"j"],[37,48,22,46],[37,49,22,47],[37,50,22,48],[38,12,23,10],[38,16,23,14,"c"],[38,17,23,15],[38,19,23,17],[38,26,23,24,"c"],[38,27,23,25],[39,10,24,8],[40,8,25,6],[40,9,25,7],[40,10,25,8],[41,6,26,4],[41,7,26,5],[41,13,26,11],[42,8,27,6,"f"],[42,9,27,7],[42,12,27,10,"values"],[42,18,27,16],[42,19,27,17,"map"],[42,22,27,20],[42,23,27,21,"f"],[42,24,27,22],[42,25,27,23],[43,8,28,6,"index"],[43,13,28,11],[43,14,28,12,"sort"],[43,18,28,16],[43,19,28,17],[43,29,28,18,"i"],[43,30,28,19],[43,32,28,21,"j"],[43,33,28,22],[44,10,28,22],[44,17,28,27,"ascendingDefined"],[44,33,28,43],[44,34,28,44,"f"],[44,35,28,45],[44,36,28,46,"i"],[44,37,28,47],[44,38,28,48],[44,40,28,50,"f"],[44,41,28,51],[44,42,28,52,"j"],[44,43,28,53],[44,44,28,54],[44,45,28,55],[45,8,28,55],[45,10,28,56],[46,6,29,4],[47,6,30,4],[47,13,30,11],[47,14,30,12],[47,15,30,13],[47,17,30,15,"_permute"],[47,25,30,23],[47,26,30,24,"default"],[47,33,30,31],[47,35,30,33,"values"],[47,41,30,39],[47,43,30,41,"index"],[47,48,30,46],[47,49,30,47],[48,4,31,2],[49,4,32,2],[49,11,32,9,"values"],[49,17,32,15],[49,18,32,16,"sort"],[49,22,32,20],[49,23,32,21,"compareDefined"],[49,37,32,35],[49,38,32,36,"f"],[49,39,32,37],[49,40,32,38],[49,41,32,39],[50,2,33,0],[51,2,34,0],[51,11,34,9,"compareDefined"],[51,25,34,23,"compareDefined"],[51,26,34,23],[51,28,34,54],[52,4,34,54],[52,8,34,24,"compare"],[52,15,34,31],[52,18,34,31,"arguments"],[52,27,34,31],[52,28,34,31,"length"],[52,34,34,31],[52,42,34,31,"arguments"],[52,51,34,31],[52,59,34,31,"undefined"],[52,68,34,31],[52,71,34,31,"arguments"],[52,80,34,31],[52,86,34,34,"_ascending"],[52,96,34,44],[52,97,34,45,"default"],[52,104,34,52],[53,4,35,2],[53,8,35,6,"compare"],[53,15,35,13],[53,20,35,18,"_ascending"],[53,30,35,28],[53,31,35,29,"default"],[53,38,35,36],[53,40,35,38],[53,47,35,45,"ascendingDefined"],[53,63,35,61],[54,4,36,2],[54,8,36,6],[54,15,36,13,"compare"],[54,22,36,20],[54,27,36,25],[54,37,36,35],[54,39,36,37],[54,45,36,43],[54,49,36,47,"TypeError"],[54,58,36,56],[54,59,36,57],[54,86,36,84],[54,87,36,85],[55,4,37,2],[55,11,37,9],[55,21,37,10,"a"],[55,22,37,11],[55,24,37,13,"b"],[55,25,37,14],[55,27,37,19],[56,6,38,4],[56,10,38,10,"x"],[56,11,38,11],[56,14,38,14,"compare"],[56,21,38,21],[56,22,38,22,"a"],[56,23,38,23],[56,25,38,25,"b"],[56,26,38,26],[56,27,38,27],[57,6,39,4],[57,10,39,8,"x"],[57,11,39,9],[57,15,39,13,"x"],[57,16,39,14],[57,21,39,19],[57,22,39,20],[57,24,39,22],[57,31,39,29,"x"],[57,32,39,30],[58,6,40,4],[58,13,40,11],[58,14,40,12,"compare"],[58,21,40,19],[58,22,40,20,"b"],[58,23,40,21],[58,25,40,23,"b"],[58,26,40,24],[58,27,40,25],[58,32,40,30],[58,33,40,31],[58,38,40,36,"compare"],[58,45,40,43],[58,46,40,44,"a"],[58,47,40,45],[58,49,40,47,"a"],[58,50,40,48],[58,51,40,49],[58,56,40,54],[58,57,40,55],[58,58,40,56],[59,4,41,2],[59,5,41,3],[60,2,42,0],[61,2,43,0],[61,11,43,9,"ascendingDefined"],[61,27,43,25,"ascendingDefined"],[61,28,43,26,"a"],[61,29,43,27],[61,31,43,29,"b"],[61,32,43,30],[61,34,43,32],[62,4,44,2],[62,11,44,9],[62,12,44,10,"a"],[62,13,44,11],[62,17,44,15],[62,21,44,19],[62,25,44,23],[62,27,44,25,"a"],[62,28,44,26],[62,32,44,30,"a"],[62,33,44,31],[62,34,44,32],[62,39,44,37,"b"],[62,40,44,38],[62,44,44,42],[62,48,44,46],[62,52,44,50],[62,54,44,52,"b"],[62,55,44,53],[62,59,44,57,"b"],[62,60,44,58],[62,61,44,59],[62,62,44,60],[62,67,44,65,"a"],[62,68,44,66],[62,71,44,69,"b"],[62,72,44,70],[62,75,44,73],[62,76,44,74],[62,77,44,75],[62,80,44,78,"a"],[62,81,44,79],[62,84,44,82,"b"],[62,85,44,83],[62,88,44,86],[62,89,44,87],[62,92,44,90],[62,93,44,91],[62,94,44,92],[63,2,45,0],[64,0,45,1],[64,3]],"functionMap":{"names":["<global>","_interopRequireDefault","sort","Uint32Array.from$argument_1","F.map$argument_0","index.sort$argument_0","compareDefined","<anonymous>","ascendingDefined"],"mappings":"AAA;ACU,+FD;AEC;2CCK,WD;gBEE,kBF;iBGC;OHK;iBGG,sCH;CFK;AMC;SCG;GDI;CNC;AQC"}},"type":"js/module"}]}