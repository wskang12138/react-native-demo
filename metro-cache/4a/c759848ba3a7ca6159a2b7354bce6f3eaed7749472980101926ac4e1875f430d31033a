{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"../../Pressability/usePressability","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":508},"end":{"line":20,"column":65,"index":573}}],"key":"8sknIYuMeQussHe8K4bG4Mrv+fY="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":574},"end":{"line":21,"column":57,"index":631}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":632},"end":{"line":26,"column":37,"index":753}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Text/Text","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":754},"end":{"line":27,"column":35,"index":789}}],"key":"o6+4JG6aRTkaznUOsv3oFDPa4t0="}},{"name":"../../Text/TextAncestor","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":790},"end":{"line":28,"column":51,"index":841}}],"key":"nN+Mxb49FJB9p6SkiBlgCRiq+K0="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0,"index":842},"end":{"line":29,"column":48,"index":890}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../../Utilities/useMergeRefs","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":891},"end":{"line":30,"column":56,"index":947}}],"key":"c/QQVhxNH5PZowSfvwPFRHxK/ak="}},{"name":"./TextInputState","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":948},"end":{"line":31,"column":46,"index":994}}],"key":"GlU9M4KNJcd1nPVrGoJ4X0kybYA="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":995},"end":{"line":32,"column":34,"index":1029}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1030},"end":{"line":33,"column":36,"index":1066}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":1067},"end":{"line":34,"column":31,"index":1098}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./AndroidTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":21,"index":1745},"end":{"line":53,"column":65,"index":1789}},{"start":{"line":55,"column":4,"index":1832},"end":{"line":55,"column":48,"index":1876}}],"key":"mY63ThbZxS7IbBVDsNq0h9Tyt8Q="}},{"name":"./RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":58,"column":4,"index":1958},"end":{"line":58,"column":53,"index":2007}},{"start":{"line":60,"column":4,"index":2062},"end":{"line":60,"column":53,"index":2111}}],"key":"vlFPMyV0tg3xGAJnJ26LH3n7uKU="}},{"name":"./RCTMultilineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":62,"column":4,"index":2156},"end":{"line":62,"column":53,"index":2205}},{"start":{"line":64,"column":4,"index":2259},"end":{"line":64,"column":53,"index":2308}}],"key":"dVy8ay5uPfLolr6wqgDT2nwKJbk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Pressability/usePressability\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../StyleSheet/flattenStyle\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../StyleSheet/StyleSheet\"));\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Text/Text\"));\n  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Text/TextAncestor\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Utilities/Platform\"));\n  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Utilities/useMergeRefs\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./TextInputState\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"nullthrows\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"react\"));\n  var React = _react;\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[14], \"react/jsx-runtime\");\n  var _jsxFileName = \"D:\\\\testdemo\\\\AwesomeProject\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\TextInput\\\\TextInput.js\";\n  var _excluded = [\"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-selected\", \"accessibilityState\", \"id\", \"tabIndex\", \"selection\", \"selectionColor\", \"selectionHandleColor\", \"cursorColor\"],\n    _excluded2 = [\"onBlur\", \"onFocus\"],\n    _excluded3 = [\"allowFontScaling\", \"rejectResponderTermination\", \"underlineColorAndroid\", \"autoComplete\", \"textContentType\", \"readOnly\", \"editable\", \"enterKeyHint\", \"returnKeyType\", \"inputMode\", \"showSoftInputOnFocus\", \"keyboardType\"];\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var AndroidTextInput;\n  var AndroidTextInputCommands;\n  var RCTSinglelineTextInputView;\n  var RCTSinglelineTextInputNativeCommands;\n  var RCTMultilineTextInputView;\n  var RCTMultilineTextInputNativeCommands;\n  if (_Platform.default.OS === 'android') {\n    AndroidTextInput = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").default;\n    AndroidTextInputCommands = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").Commands;\n  } else if (_Platform.default.OS === 'ios') {\n    RCTSinglelineTextInputView = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").default;\n    RCTSinglelineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").Commands;\n    RCTMultilineTextInputView = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").default;\n    RCTMultilineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").Commands;\n  }\n  var emptyFunctionThatReturnsTrue = function emptyFunctionThatReturnsTrue() {\n    return true;\n  };\n\n  /**\n   * A foundational component for inputting text into the app via a\n   * keyboard. Props provide configurability for several features, such as\n   * auto-correction, auto-capitalization, placeholder text, and different keyboard\n   * types, such as a numeric keypad.\n   *\n   * The simplest use case is to plop down a `TextInput` and subscribe to the\n   * `onChangeText` events to read the user input. There are also other events,\n   * such as `onSubmitEditing` and `onFocus` that can be subscribed to. A simple\n   * example:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, TextInput } from 'react-native';\n   *\n   * export default class UselessTextInput extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = { text: 'Useless Placeholder' };\n   *   }\n   *\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         style={{height: 40, borderColor: 'gray', borderWidth: 1}}\n   *         onChangeText={(text) => this.setState({text})}\n   *         value={this.state.text}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * // skip this line if using Create React Native App\n   * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n   * ```\n   *\n   * Two methods exposed via the native element are .focus() and .blur() that\n   * will focus or blur the TextInput programmatically.\n   *\n   * Note that some props are only available with `multiline={true/false}`.\n   * Additionally, border styles that apply to only one side of the element\n   * (e.g., `borderBottomColor`, `borderLeftWidth`, etc.) will not be applied if\n   * `multiline=false`. To achieve the same effect, you can wrap your `TextInput`\n   * in a `View`:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, View, TextInput } from 'react-native';\n   *\n   * class UselessTextInput extends Component {\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n   *         editable={true}\n   *         maxLength={40}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * export default class UselessTextInputMultiline extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = {\n   *       text: 'Useless Multiline Placeholder',\n   *     };\n   *   }\n   *\n   *   // If you type something in the text box that is a color, the background will change to that\n   *   // color.\n   *   render() {\n   *     return (\n   *      <View style={{\n   *        backgroundColor: this.state.text,\n   *        borderBottomColor: '#000000',\n   *        borderBottomWidth: 1 }}\n   *      >\n   *        <UselessTextInput\n   *          multiline={true}\n   *          numberOfLines={4}\n   *          onChangeText={(text) => this.setState({text})}\n   *          value={this.state.text}\n   *        />\n   *      </View>\n   *     );\n   *   }\n   * }\n   *\n   * // skip these lines if using Create React Native App\n   * AppRegistry.registerComponent(\n   *  'AwesomeProject',\n   *  () => UselessTextInputMultiline\n   * );\n   * ```\n   *\n   * `TextInput` has by default a border at the bottom of its view. This border\n   * has its padding set by the background image provided by the system, and it\n   * cannot be changed. Solutions to avoid this is to either not set height\n   * explicitly, case in which the system will take care of displaying the border\n   * in the correct position, or to not display the border by setting\n   * `underlineColorAndroid` to transparent.\n   *\n   * Note that on Android performing text selection in input can change\n   * app's activity `windowSoftInputMode` param to `adjustResize`.\n   * This may cause issues with components that have position: 'absolute'\n   * while keyboard is active. To avoid this behavior either specify `windowSoftInputMode`\n   * in AndroidManifest.xml ( https://developer.android.com/guide/topics/manifest/activity-element.html )\n   * or control this param programmatically with native code.\n   *\n   */\n  function InternalTextInput(props) {\n    var _propsSelection$end, _props$multiline;\n    var ariaBusy = props['aria-busy'],\n      ariaChecked = props['aria-checked'],\n      ariaDisabled = props['aria-disabled'],\n      ariaExpanded = props['aria-expanded'],\n      ariaSelected = props['aria-selected'],\n      accessibilityState = props.accessibilityState,\n      id = props.id,\n      tabIndex = props.tabIndex,\n      propsSelection = props.selection,\n      selectionColor = props.selectionColor,\n      selectionHandleColor = props.selectionHandleColor,\n      cursorColor = props.cursorColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var inputRef = (0, _react.useRef)(null);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var selection = propsSelection == null ? null : {\n      start: propsSelection.start,\n      end: (_propsSelection$end = propsSelection.end) != null ? _propsSelection$end : propsSelection.start\n    };\n    var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      mostRecentEventCount = _useState2[0],\n      setMostRecentEventCount = _useState2[1];\n    var _useState3 = (0, _react.useState)(props.value),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      lastNativeText = _useState4[0],\n      setLastNativeText = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        selection: {\n          start: -1,\n          end: -1\n        },\n        mostRecentEventCount: mostRecentEventCount\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      lastNativeSelectionState = _useState6[0],\n      setLastNativeSelection = _useState6[1];\n    var lastNativeSelection = lastNativeSelectionState.selection;\n    var viewCommands;\n    if (AndroidTextInputCommands) {\n      viewCommands = AndroidTextInputCommands;\n    } else {\n      viewCommands = props.multiline === true ? RCTMultilineTextInputNativeCommands : RCTSinglelineTextInputNativeCommands;\n    }\n    var text = typeof props.value === 'string' ? props.value : typeof props.defaultValue === 'string' ? props.defaultValue : '';\n\n    // This is necessary in case native updates the text and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    (0, _react.useLayoutEffect)(function () {\n      var nativeUpdate = {};\n      if (lastNativeText !== props.value && typeof props.value === 'string') {\n        nativeUpdate.text = props.value;\n        setLastNativeText(props.value);\n      }\n      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {\n        nativeUpdate.selection = selection;\n        setLastNativeSelection({\n          selection: selection,\n          mostRecentEventCount: mostRecentEventCount\n        });\n      }\n      if (Object.keys(nativeUpdate).length === 0) {\n        return;\n      }\n      if (inputRef.current != null) {\n        var _selection$start, _selection$end;\n        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, (_selection$start = selection == null ? void 0 : selection.start) != null ? _selection$start : -1, (_selection$end = selection == null ? void 0 : selection.end) != null ? _selection$end : -1);\n      }\n    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, lastNativeText, selection, lastNativeSelection, text, viewCommands]);\n    (0, _react.useLayoutEffect)(function () {\n      var inputRefValue = inputRef.current;\n      if (inputRefValue != null) {\n        _TextInputState.default.registerInput(inputRefValue);\n        return function () {\n          _TextInputState.default.unregisterInput(inputRefValue);\n          if (_TextInputState.default.currentlyFocusedInput() === inputRefValue) {\n            (0, _nullthrows.default)(inputRefValue).blur();\n          }\n        };\n      }\n    }, [inputRef]);\n    var setLocalRef = (0, _react.useCallback)(function (instance) {\n      inputRef.current = instance;\n\n      /*\n      Hi reader from the future. I'm sorry for this.\n       This is a hack. Ideally we would forwardRef to the underlying\n      host component. However, since TextInput has it's own methods that can be\n      called as well, if we used the standard forwardRef then these\n      methods wouldn't be accessible and thus be a breaking change.\n       We have a couple of options of how to handle this:\n      - Return a new ref with everything we methods from both. This is problematic\n        because we need React to also know it is a host component which requires\n        internals of the class implementation of the ref.\n      - Break the API and have some other way to call one set of the methods or\n        the other. This is our long term approach as we want to eventually\n        get the methods on host components off the ref. So instead of calling\n        ref.measure() you might call ReactNative.measure(ref). This would hopefully\n        let the ref for TextInput then have the methods like `.clear`. Or we do it\n        the other way and make it TextInput.clear(textInputRef) which would be fine\n        too. Either way though is a breaking change that is longer term.\n      - Mutate this ref. :( Gross, but accomplishes what we need in the meantime\n        before we can get to the long term breaking change.\n      */\n      if (instance != null) {\n        // $FlowFixMe[incompatible-use] - See the explanation above.\n        Object.assign(instance, {\n          clear: function clear() {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, '', 0, 0);\n            }\n          },\n          // TODO: Fix this returning true on null === null, when no input is focused\n          isFocused: function isFocused() {\n            return _TextInputState.default.currentlyFocusedInput() === inputRef.current;\n          },\n          getNativeRef: function getNativeRef() {\n            return inputRef.current;\n          },\n          setSelection: function setSelection(start, end) {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, null, start, end);\n            }\n          }\n        });\n      }\n    }, [mostRecentEventCount, viewCommands]);\n    var ref = (0, _useMergeRefs.default)(setLocalRef, props.forwardedRef);\n    var _onChange = function _onChange(event) {\n      var currentText = event.nativeEvent.text;\n      props.onChange && props.onChange(event);\n      props.onChangeText && props.onChangeText(currentText);\n      if (inputRef.current == null) {\n        // calling `props.onChange` or `props.onChangeText`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeText(currentText);\n      // This must happen last, after we call setLastNativeText.\n      // Different ordering can cause bugs when editing AndroidTextInputs\n      // with multiple Fragments.\n      // We must update this so that controlled input updates work.\n      setMostRecentEventCount(event.nativeEvent.eventCount);\n    };\n    var _onSelectionChange = function _onSelectionChange(event) {\n      props.onSelectionChange && props.onSelectionChange(event);\n      if (inputRef.current == null) {\n        // calling `props.onSelectionChange`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeSelection({\n        selection: event.nativeEvent.selection,\n        mostRecentEventCount: mostRecentEventCount\n      });\n    };\n    var _onFocus = function _onFocus(event) {\n      _TextInputState.default.focusInput(inputRef.current);\n      if (props.onFocus) {\n        props.onFocus(event);\n      }\n    };\n    var _onBlur = function _onBlur(event) {\n      _TextInputState.default.blurInput(inputRef.current);\n      if (props.onBlur) {\n        props.onBlur(event);\n      }\n    };\n    var _onScroll = function _onScroll(event) {\n      props.onScroll && props.onScroll(event);\n    };\n    var textInput = null;\n    var multiline = (_props$multiline = props.multiline) != null ? _props$multiline : false;\n    var submitBehavior;\n    if (props.submitBehavior != null) {\n      // `submitBehavior` is set explicitly\n      if (!multiline && props.submitBehavior === 'newline') {\n        // For single line text inputs, `'newline'` is not a valid option\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = props.submitBehavior;\n      }\n    } else if (multiline) {\n      if (props.blurOnSubmit === true) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'newline';\n      }\n    } else {\n      // Single line\n      if (props.blurOnSubmit !== false) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'submit';\n      }\n    }\n    var accessible = props.accessible !== false;\n    var focusable = props.focusable !== false;\n    var editable = props.editable,\n      hitSlop = props.hitSlop,\n      _onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n    var config = React.useMemo(function () {\n      return {\n        hitSlop: hitSlop,\n        onPress: function onPress(event) {\n          _onPress == null || _onPress(event);\n          if (editable !== false) {\n            if (inputRef.current != null) {\n              inputRef.current.focus();\n            }\n          }\n        },\n        onPressIn: onPressIn,\n        onPressOut: onPressOut,\n        cancelable: _Platform.default.OS === 'ios' ? !rejectResponderTermination : null\n      };\n    }, [editable, hitSlop, _onPress, onPressIn, onPressOut, rejectResponderTermination]);\n\n    // Hide caret during test runs due to a flashing caret\n    // makes screenshot tests flakey\n    var caretHidden = props.caretHidden;\n    if (_Platform.default.isTesting) {\n      caretHidden = true;\n    }\n\n    // TextInput handles onBlur and onFocus events\n    // so omitting onBlur and onFocus pressability handlers here.\n    var _ref = (0, _usePressability.default)(config) || {},\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      eventHandlers = (0, _objectWithoutProperties2.default)(_ref, _excluded2);\n    var _accessibilityState;\n    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n      _accessibilityState = {\n        busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n        checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n        disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n        expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n        selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n      };\n    }\n    var style = (0, _flattenStyle.default)(props.style);\n    if (typeof (style == null ? void 0 : style.fontWeight) === 'number') {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.fontWeight = style == null ? void 0 : style.fontWeight.toString();\n    }\n    if (_Platform.default.OS === 'ios') {\n      var RCTTextInputView = props.multiline === true ? RCTMultilineTextInputView : RCTSinglelineTextInputView;\n      var useMultilineDefaultStyle = props.multiline === true && (style == null || style.padding == null && style.paddingVertical == null && style.paddingTop == null);\n      textInput = /*#__PURE__*/(0, _jsxRuntime.jsx)(RCTTextInputView\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessible: accessible,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        dataDetectorTypes: props.dataDetectorTypes,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onContentSizeChange: props.onContentSizeChange,\n        onFocus: _onFocus,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,\n        selection: selection,\n        selectionColor: selectionColor,\n        style: _StyleSheet.default.compose(useMultilineDefaultStyle ? styles.multilineDefault : null, style),\n        text: text\n      }));\n    } else if (_Platform.default.OS === 'android') {\n      var _props$ariaLabelledb, _props$placeholder, _props$rows;\n      var autoCapitalize = props.autoCapitalize || 'sentences';\n      var _accessibilityLabelledBy = (_props$ariaLabelledb = props == null ? void 0 : props['aria-labelledby']) != null ? _props$ariaLabelledb : props == null ? void 0 : props.accessibilityLabelledBy;\n      var placeholder = (_props$placeholder = props.placeholder) != null ? _props$placeholder : '';\n      var children = props.children;\n      var childCount = React.Children.count(children);\n      (0, _invariant.default)(!(props.value != null && childCount), 'Cannot specify both value and children.');\n      if (childCount > 1) {\n        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {\n          children: children\n        });\n      }\n      // For consistency with iOS set cursor/selectionHandle color as selectionColor\n      var colorProps = {\n        selectionColor: selectionColor,\n        selectionHandleColor: selectionHandleColor === undefined ? selectionColor : selectionHandleColor,\n        cursorColor: cursorColor === undefined ? selectionColor : cursorColor\n      };\n      textInput =\n      /*#__PURE__*/\n      /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match up\n       * exactly with the props for TextInput. This will need to get fixed */\n      /* $FlowFixMe[incompatible-type] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      (0, _jsxRuntime.jsx)(AndroidTextInput\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, colorProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessibilityLabelledBy: _accessibilityLabelledBy,\n        accessible: accessible,\n        autoCapitalize: autoCapitalize,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        children: children,\n        disableFullscreenUI: props.disableFullscreenUI,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        numberOfLines: (_props$rows = props.rows) != null ? _props$rows : props.numberOfLines,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onFocus: _onFocus\n        /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match\n         * up exactly with the props for TextInput. This will need to get fixed\n         */\n        /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput\n         * don't match up exactly with the props for TextInput. This will need\n         * to get fixed */,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        placeholder: placeholder,\n        style: style,\n        text: text,\n        textBreakStrategy: props.textBreakStrategy\n      }));\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {\n      value: true,\n      children: textInput\n    });\n  }\n  var enterKeyHintToReturnTypeMap = {\n    enter: 'default',\n    done: 'done',\n    go: 'go',\n    next: 'next',\n    previous: 'previous',\n    search: 'search',\n    send: 'send'\n  };\n  var inputModeToKeyboardTypeMap = {\n    none: 'default',\n    text: 'default',\n    decimal: 'decimal-pad',\n    numeric: 'number-pad',\n    tel: 'phone-pad',\n    search: _Platform.default.OS === 'ios' ? 'web-search' : 'default',\n    email: 'email-address',\n    url: 'url'\n  };\n\n  // Map HTML autocomplete values to Android autoComplete values\n  var autoCompleteWebToAutoCompleteAndroidMap = {\n    'address-line1': 'postal-address-region',\n    'address-line2': 'postal-address-locality',\n    bday: 'birthdate-full',\n    'bday-day': 'birthdate-day',\n    'bday-month': 'birthdate-month',\n    'bday-year': 'birthdate-year',\n    'cc-csc': 'cc-csc',\n    'cc-exp': 'cc-exp',\n    'cc-exp-month': 'cc-exp-month',\n    'cc-exp-year': 'cc-exp-year',\n    'cc-number': 'cc-number',\n    country: 'postal-address-country',\n    'current-password': 'password',\n    email: 'email',\n    'honorific-prefix': 'name-prefix',\n    'honorific-suffix': 'name-suffix',\n    name: 'name',\n    'additional-name': 'name-middle',\n    'family-name': 'name-family',\n    'given-name': 'name-given',\n    'new-password': 'password-new',\n    off: 'off',\n    'one-time-code': 'sms-otp',\n    'postal-code': 'postal-code',\n    sex: 'gender',\n    'street-address': 'street-address',\n    tel: 'tel',\n    'tel-country-code': 'tel-country-code',\n    'tel-national': 'tel-national',\n    username: 'username'\n  };\n\n  // Map HTML autocomplete values to iOS textContentType values\n  var autoCompleteWebToTextContentTypeMap = {\n    'address-line1': 'streetAddressLine1',\n    'address-line2': 'streetAddressLine2',\n    bday: 'birthdate',\n    'bday-day': 'birthdateDay',\n    'bday-month': 'birthdateMonth',\n    'bday-year': 'birthdateYear',\n    'cc-csc': 'creditCardSecurityCode',\n    'cc-exp-month': 'creditCardExpirationMonth',\n    'cc-exp-year': 'creditCardExpirationYear',\n    'cc-exp': 'creditCardExpiration',\n    'cc-given-name': 'creditCardGivenName',\n    'cc-additional-name': 'creditCardMiddleName',\n    'cc-family-name': 'creditCardFamilyName',\n    'cc-name': 'creditCardName',\n    'cc-number': 'creditCardNumber',\n    'cc-type': 'creditCardType',\n    'current-password': 'password',\n    country: 'countryName',\n    email: 'emailAddress',\n    name: 'name',\n    'additional-name': 'middleName',\n    'family-name': 'familyName',\n    'given-name': 'givenName',\n    nickname: 'nickname',\n    'honorific-prefix': 'namePrefix',\n    'honorific-suffix': 'nameSuffix',\n    'new-password': 'newPassword',\n    off: 'none',\n    'one-time-code': 'oneTimeCode',\n    organization: 'organizationName',\n    'organization-title': 'jobTitle',\n    'postal-code': 'postalCode',\n    'street-address': 'fullStreetAddress',\n    tel: 'telephoneNumber',\n    url: 'URL',\n    username: 'username'\n  };\n  var ExportedForwardRef = React.forwardRef(function TextInput(_ref2, forwardedRef) {\n    var _autoCompleteWebToAut;\n    var _ref2$allowFontScalin = _ref2.allowFontScaling,\n      allowFontScaling = _ref2$allowFontScalin === void 0 ? true : _ref2$allowFontScalin,\n      _ref2$rejectResponder = _ref2.rejectResponderTermination,\n      rejectResponderTermination = _ref2$rejectResponder === void 0 ? true : _ref2$rejectResponder,\n      _ref2$underlineColorA = _ref2.underlineColorAndroid,\n      underlineColorAndroid = _ref2$underlineColorA === void 0 ? 'transparent' : _ref2$underlineColorA,\n      autoComplete = _ref2.autoComplete,\n      textContentType = _ref2.textContentType,\n      readOnly = _ref2.readOnly,\n      editable = _ref2.editable,\n      enterKeyHint = _ref2.enterKeyHint,\n      returnKeyType = _ref2.returnKeyType,\n      inputMode = _ref2.inputMode,\n      showSoftInputOnFocus = _ref2.showSoftInputOnFocus,\n      keyboardType = _ref2.keyboardType,\n      restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded3);\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    var style = (0, _flattenStyle.default)(restProps.style);\n    if ((style == null ? void 0 : style.verticalAlign) != null) {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.textAlignVertical =\n      // $FlowFixMe[invalid-computed-prop]\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      delete style.verticalAlign;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(InternalTextInput, Object.assign({\n      allowFontScaling: allowFontScaling,\n      rejectResponderTermination: rejectResponderTermination,\n      underlineColorAndroid: underlineColorAndroid,\n      editable: readOnly !== undefined ? !readOnly : editable,\n      returnKeyType: enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType,\n      keyboardType: inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType,\n      showSoftInputOnFocus: inputMode == null ? showSoftInputOnFocus : inputMode !== 'none',\n      autoComplete: _Platform.default.OS === 'android' ? // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      (_autoCompleteWebToAut = autoCompleteWebToAutoCompleteAndroidMap[autoComplete]) != null ? _autoCompleteWebToAut : autoComplete : undefined,\n      textContentType: textContentType != null ? textContentType : _Platform.default.OS === 'ios' && autoComplete && autoComplete in autoCompleteWebToTextContentTypeMap ?\n      // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      autoCompleteWebToTextContentTypeMap[autoComplete] : textContentType\n    }, restProps, {\n      forwardedRef: forwardedRef,\n      style: style\n    }));\n  });\n  ExportedForwardRef.displayName = 'TextInput';\n\n  // $FlowFixMe[prop-missing]\n  ExportedForwardRef.State = {\n    currentlyFocusedInput: _TextInputState.default.currentlyFocusedInput,\n    currentlyFocusedField: _TextInputState.default.currentlyFocusedField,\n    focusTextInput: _TextInputState.default.focusTextInput,\n    blurTextInput: _TextInputState.default.blurTextInput\n  };\n  var styles = _StyleSheet.default.create({\n    multilineDefault: {\n      // This default top inset makes RCTMultilineTextInputView seem as close as possible\n      // to single-line RCTSinglelineTextInputView defaults, using the system defaults\n      // of font size 17 and a height of 31 points.\n      paddingTop: 5\n    }\n  });\n  var verticalAlignToTextAlignVerticalMap = {\n    auto: 'auto',\n    top: 'top',\n    bottom: 'bottom',\n    middle: 'center'\n  };\n\n  // $FlowFixMe[unclear-type] Unclear type. Using `any` type is not safe.\n  module.exports = ExportedForwardRef;\n});","lineCount":682,"map":[[5,2,20,0],[5,6,20,0,"_usePressability"],[5,22,20,0],[5,25,20,0,"_interopRequireDefault"],[5,47,20,0],[5,48,20,0,"_$$_REQUIRE"],[5,59,20,0],[5,60,20,0,"_dependencyMap"],[5,74,20,0],[6,2,21,0],[6,6,21,0,"_flattenStyle"],[6,19,21,0],[6,22,21,0,"_interopRequireDefault"],[6,44,21,0],[6,45,21,0,"_$$_REQUIRE"],[6,56,21,0],[6,57,21,0,"_dependencyMap"],[6,71,21,0],[7,2,22,0],[7,6,22,0,"_StyleSheet"],[7,17,22,0],[7,20,22,0,"_interopRequireDefault"],[7,42,22,0],[7,43,22,0,"_$$_REQUIRE"],[7,54,22,0],[7,55,22,0,"_dependencyMap"],[7,69,22,0],[8,2,27,0],[8,6,27,0,"_Text"],[8,11,27,0],[8,14,27,0,"_interopRequireDefault"],[8,36,27,0],[8,37,27,0,"_$$_REQUIRE"],[8,48,27,0],[8,49,27,0,"_dependencyMap"],[8,63,27,0],[9,2,28,0],[9,6,28,0,"_TextAncestor"],[9,19,28,0],[9,22,28,0,"_interopRequireDefault"],[9,44,28,0],[9,45,28,0,"_$$_REQUIRE"],[9,56,28,0],[9,57,28,0,"_dependencyMap"],[9,71,28,0],[10,2,29,0],[10,6,29,0,"_Platform"],[10,15,29,0],[10,18,29,0,"_interopRequireDefault"],[10,40,29,0],[10,41,29,0,"_$$_REQUIRE"],[10,52,29,0],[10,53,29,0,"_dependencyMap"],[10,67,29,0],[11,2,30,0],[11,6,30,0,"_useMergeRefs"],[11,19,30,0],[11,22,30,0,"_interopRequireDefault"],[11,44,30,0],[11,45,30,0,"_$$_REQUIRE"],[11,56,30,0],[11,57,30,0,"_dependencyMap"],[11,71,30,0],[12,2,31,0],[12,6,31,0,"_TextInputState"],[12,21,31,0],[12,24,31,0,"_interopRequireDefault"],[12,46,31,0],[12,47,31,0,"_$$_REQUIRE"],[12,58,31,0],[12,59,31,0,"_dependencyMap"],[12,73,31,0],[13,2,32,0],[13,6,32,0,"_invariant"],[13,16,32,0],[13,19,32,0,"_interopRequireDefault"],[13,41,32,0],[13,42,32,0,"_$$_REQUIRE"],[13,53,32,0],[13,54,32,0,"_dependencyMap"],[13,68,32,0],[14,2,33,0],[14,6,33,0,"_nullthrows"],[14,17,33,0],[14,20,33,0,"_interopRequireDefault"],[14,42,33,0],[14,43,33,0,"_$$_REQUIRE"],[14,54,33,0],[14,55,33,0,"_dependencyMap"],[14,69,33,0],[15,2,34,0],[15,6,34,0,"_react"],[15,12,34,0],[15,15,34,0,"_interopRequireWildcard"],[15,38,34,0],[15,39,34,0,"_$$_REQUIRE"],[15,50,34,0],[15,51,34,0,"_dependencyMap"],[15,65,34,0],[16,2,34,31],[16,6,34,31,"React"],[16,11,34,31],[16,14,34,31,"_react"],[16,20,34,31],[17,2,34,31],[17,6,34,31,"_jsxRuntime"],[17,17,34,31],[17,20,34,31,"_$$_REQUIRE"],[17,31,34,31],[17,32,34,31,"_dependencyMap"],[17,46,34,31],[18,2,34,31],[18,6,34,31,"_jsxFileName"],[18,18,34,31],[19,2,34,31],[19,6,34,31,"_excluded"],[19,15,34,31],[20,4,34,31,"_excluded2"],[20,14,34,31],[21,4,34,31,"_excluded3"],[21,14,34,31],[22,2,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[27,0,6,0],[28,0,7,0],[29,0,8,0],[30,0,9,0],[31,2,1,0],[31,11,1,0,"_getRequireWildcardCache"],[31,36,1,0,"e"],[31,37,1,0],[31,66,1,0,"WeakMap"],[31,73,1,0],[31,92,1,0,"r"],[31,93,1,0],[31,100,1,0,"WeakMap"],[31,107,1,0],[31,111,1,0,"t"],[31,112,1,0],[31,119,1,0,"WeakMap"],[31,126,1,0],[31,138,1,0,"_getRequireWildcardCache"],[31,162,1,0],[31,174,1,0,"_getRequireWildcardCache"],[31,199,1,0,"e"],[31,200,1,0],[31,211,1,0,"e"],[31,212,1,0],[31,215,1,0,"t"],[31,216,1,0],[31,219,1,0,"r"],[31,220,1,0],[31,225,1,0,"e"],[31,226,1,0],[32,2,1,0],[32,11,1,0,"_interopRequireWildcard"],[32,35,1,0,"e"],[32,36,1,0],[32,38,1,0,"r"],[32,39,1,0],[32,48,1,0,"r"],[32,49,1,0],[32,53,1,0,"e"],[32,54,1,0],[32,58,1,0,"e"],[32,59,1,0],[32,60,1,0,"__esModule"],[32,70,1,0],[32,79,1,0,"e"],[32,80,1,0],[32,95,1,0,"e"],[32,96,1,0],[32,119,1,0,"e"],[32,120,1,0],[32,145,1,0,"e"],[32,146,1,0],[32,157,1,0,"default"],[32,164,1,0],[32,166,1,0,"e"],[32,167,1,0],[32,175,1,0,"t"],[32,176,1,0],[32,179,1,0,"_getRequireWildcardCache"],[32,203,1,0],[32,204,1,0,"r"],[32,205,1,0],[32,212,1,0,"t"],[32,213,1,0],[32,217,1,0,"t"],[32,218,1,0],[32,219,1,0,"has"],[32,222,1,0],[32,223,1,0,"e"],[32,224,1,0],[32,234,1,0,"t"],[32,235,1,0],[32,236,1,0,"get"],[32,239,1,0],[32,240,1,0,"e"],[32,241,1,0],[32,248,1,0,"n"],[32,249,1,0],[32,254,1,0,"__proto__"],[32,263,1,0],[32,273,1,0,"a"],[32,274,1,0],[32,277,1,0,"Object"],[32,283,1,0],[32,284,1,0,"defineProperty"],[32,298,1,0],[32,302,1,0,"Object"],[32,308,1,0],[32,309,1,0,"getOwnPropertyDescriptor"],[32,333,1,0],[32,344,1,0,"u"],[32,345,1,0],[32,349,1,0,"e"],[32,350,1,0],[32,370,1,0,"u"],[32,371,1,0],[32,378,1,0,"hasOwnProperty"],[32,392,1,0],[32,393,1,0,"call"],[32,397,1,0],[32,398,1,0,"e"],[32,399,1,0],[32,401,1,0,"u"],[32,402,1,0],[32,411,1,0,"i"],[32,412,1,0],[32,415,1,0,"a"],[32,416,1,0],[32,419,1,0,"Object"],[32,425,1,0],[32,426,1,0,"getOwnPropertyDescriptor"],[32,450,1,0],[32,451,1,0,"e"],[32,452,1,0],[32,454,1,0,"u"],[32,455,1,0],[32,465,1,0,"i"],[32,466,1,0],[32,471,1,0,"i"],[32,472,1,0],[32,473,1,0,"get"],[32,476,1,0],[32,480,1,0,"i"],[32,481,1,0],[32,482,1,0,"set"],[32,485,1,0],[32,489,1,0,"Object"],[32,495,1,0],[32,496,1,0,"defineProperty"],[32,510,1,0],[32,511,1,0,"n"],[32,512,1,0],[32,514,1,0,"u"],[32,515,1,0],[32,517,1,0,"i"],[32,518,1,0],[32,522,1,0,"n"],[32,523,1,0],[32,524,1,0,"u"],[32,525,1,0],[32,529,1,0,"e"],[32,530,1,0],[32,531,1,0,"u"],[32,532,1,0],[32,544,1,0,"n"],[32,545,1,0],[32,546,1,0,"default"],[32,553,1,0],[32,556,1,0,"e"],[32,557,1,0],[32,559,1,0,"t"],[32,560,1,0],[32,564,1,0,"t"],[32,565,1,0],[32,566,1,0,"set"],[32,569,1,0],[32,570,1,0,"e"],[32,571,1,0],[32,573,1,0,"n"],[32,574,1,0],[32,577,1,0,"n"],[32,578,1,0],[33,2,45,0],[33,6,45,4,"AndroidTextInput"],[33,22,45,20],[34,2,46,0],[34,6,46,4,"AndroidTextInputCommands"],[34,30,46,28],[35,2,47,0],[35,6,47,4,"RCTSinglelineTextInputView"],[35,32,47,30],[36,2,48,0],[36,6,48,4,"RCTSinglelineTextInputNativeCommands"],[36,42,48,40],[37,2,49,0],[37,6,49,4,"RCTMultilineTextInputView"],[37,31,49,29],[38,2,50,0],[38,6,50,4,"RCTMultilineTextInputNativeCommands"],[38,41,50,39],[39,2,52,0],[39,6,52,4,"Platform"],[39,23,52,12],[39,24,52,13,"OS"],[39,26,52,15],[39,31,52,20],[39,40,52,29],[39,42,52,31],[40,4,53,2,"AndroidTextInput"],[40,20,53,18],[40,23,53,21,"require"],[40,34,53,28],[40,35,53,28,"_dependencyMap"],[40,49,53,28],[40,90,53,64],[40,91,53,65],[40,92,53,66,"default"],[40,99,53,73],[41,4,54,2,"AndroidTextInputCommands"],[41,28,54,26],[41,31,55,4,"require"],[41,42,55,11],[41,43,55,11,"_dependencyMap"],[41,57,55,11],[41,98,55,47],[41,99,55,48],[41,100,55,49,"Commands"],[41,108,55,57],[42,2,56,0],[42,3,56,1],[42,9,56,7],[42,13,56,11,"Platform"],[42,30,56,19],[42,31,56,20,"OS"],[42,33,56,22],[42,38,56,27],[42,43,56,32],[42,45,56,34],[43,4,57,2,"RCTSinglelineTextInputView"],[43,30,57,28],[43,33,58,4,"require"],[43,44,58,11],[43,45,58,11,"_dependencyMap"],[43,59,58,11],[43,105,58,52],[43,106,58,53],[43,107,58,54,"default"],[43,114,58,61],[44,4,59,2,"RCTSinglelineTextInputNativeCommands"],[44,40,59,38],[44,43,60,4,"require"],[44,54,60,11],[44,55,60,11,"_dependencyMap"],[44,69,60,11],[44,115,60,52],[44,116,60,53],[44,117,60,54,"Commands"],[44,125,60,62],[45,4,61,2,"RCTMultilineTextInputView"],[45,29,61,27],[45,32,62,4,"require"],[45,43,62,11],[45,44,62,11,"_dependencyMap"],[45,58,62,11],[45,104,62,52],[45,105,62,53],[45,106,62,54,"default"],[45,113,62,61],[46,4,63,2,"RCTMultilineTextInputNativeCommands"],[46,39,63,37],[46,42,64,4,"require"],[46,53,64,11],[46,54,64,11,"_dependencyMap"],[46,68,64,11],[46,114,64,52],[46,115,64,53],[46,116,64,54,"Commands"],[46,124,64,62],[47,2,65,0],[48,2,960,0],[48,6,960,6,"emptyFunctionThatReturnsTrue"],[48,34,960,34],[48,37,960,37],[48,46,960,6,"emptyFunctionThatReturnsTrue"],[48,74,960,34,"emptyFunctionThatReturnsTrue"],[48,75,960,34],[49,4,960,34],[49,11,960,43],[49,15,960,47],[50,2,960,47],[52,2,962,0],[53,0,963,0],[54,0,964,0],[55,0,965,0],[56,0,966,0],[57,0,967,0],[58,0,968,0],[59,0,969,0],[60,0,970,0],[61,0,971,0],[62,0,972,0],[63,0,973,0],[64,0,974,0],[65,0,975,0],[66,0,976,0],[67,0,977,0],[68,0,978,0],[69,0,979,0],[70,0,980,0],[71,0,981,0],[72,0,982,0],[73,0,983,0],[74,0,984,0],[75,0,985,0],[76,0,986,0],[77,0,987,0],[78,0,988,0],[79,0,989,0],[80,0,990,0],[81,0,991,0],[82,0,992,0],[83,0,993,0],[84,0,994,0],[85,0,995,0],[86,0,996,0],[87,0,997,0],[88,0,998,0],[89,0,999,0],[90,0,1000,0],[91,0,1001,0],[92,0,1002,0],[93,0,1003,0],[94,0,1004,0],[95,0,1005,0],[96,0,1006,0],[97,0,1007,0],[98,0,1008,0],[99,0,1009,0],[100,0,1010,0],[101,0,1011,0],[102,0,1012,0],[103,0,1013,0],[104,0,1014,0],[105,0,1015,0],[106,0,1016,0],[107,0,1017,0],[108,0,1018,0],[109,0,1019,0],[110,0,1020,0],[111,0,1021,0],[112,0,1022,0],[113,0,1023,0],[114,0,1024,0],[115,0,1025,0],[116,0,1026,0],[117,0,1027,0],[118,0,1028,0],[119,0,1029,0],[120,0,1030,0],[121,0,1031,0],[122,0,1032,0],[123,0,1033,0],[124,0,1034,0],[125,0,1035,0],[126,0,1036,0],[127,0,1037,0],[128,0,1038,0],[129,0,1039,0],[130,0,1040,0],[131,0,1041,0],[132,0,1042,0],[133,0,1043,0],[134,0,1044,0],[135,0,1045,0],[136,0,1046,0],[137,0,1047,0],[138,0,1048,0],[139,0,1049,0],[140,0,1050,0],[141,0,1051,0],[142,0,1052,0],[143,0,1053,0],[144,0,1054,0],[145,0,1055,0],[146,0,1056,0],[147,0,1057,0],[148,0,1058,0],[149,0,1059,0],[150,0,1060,0],[151,0,1061,0],[152,0,1062,0],[153,0,1063,0],[154,0,1064,0],[155,0,1065,0],[156,0,1066,0],[157,0,1067,0],[158,0,1068,0],[159,0,1069,0],[160,0,1070,0],[161,0,1071,0],[162,0,1072,0],[163,2,1073,0],[163,11,1073,9,"InternalTextInput"],[163,28,1073,26,"InternalTextInput"],[163,29,1073,27,"props"],[163,34,1073,39],[163,36,1073,53],[164,4,1073,53],[164,8,1073,53,"_propsSelection$end"],[164,27,1073,53],[164,29,1073,53,"_props$multiline"],[164,45,1073,53],[165,4,1074,2],[165,8,1075,17,"ariaBusy"],[165,16,1075,25],[165,19,1088,6,"props"],[165,24,1088,11],[165,25,1075,4],[165,36,1075,15],[166,6,1076,20,"ariaChecked"],[166,17,1076,31],[166,20,1088,6,"props"],[166,25,1088,11],[166,26,1076,4],[166,40,1076,18],[167,6,1077,21,"ariaDisabled"],[167,18,1077,33],[167,21,1088,6,"props"],[167,26,1088,11],[167,27,1077,4],[167,42,1077,19],[168,6,1078,21,"ariaExpanded"],[168,18,1078,33],[168,21,1088,6,"props"],[168,26,1088,11],[168,27,1078,4],[168,42,1078,19],[169,6,1079,21,"ariaSelected"],[169,18,1079,33],[169,21,1088,6,"props"],[169,26,1088,11],[169,27,1079,4],[169,42,1079,19],[170,6,1080,4,"accessibilityState"],[170,24,1080,22],[170,27,1088,6,"props"],[170,32,1088,11],[170,33,1080,4,"accessibilityState"],[170,51,1080,22],[171,6,1081,4,"id"],[171,8,1081,6],[171,11,1088,6,"props"],[171,16,1088,11],[171,17,1081,4,"id"],[171,19,1081,6],[172,6,1082,4,"tabIndex"],[172,14,1082,12],[172,17,1088,6,"props"],[172,22,1088,11],[172,23,1082,4,"tabIndex"],[172,31,1082,12],[173,6,1083,15,"propsSelection"],[173,20,1083,29],[173,23,1088,6,"props"],[173,28,1088,11],[173,29,1083,4,"selection"],[173,38,1083,13],[174,6,1084,4,"selectionColor"],[174,20,1084,18],[174,23,1088,6,"props"],[174,28,1088,11],[174,29,1084,4,"selectionColor"],[174,43,1084,18],[175,6,1085,4,"selectionHandleColor"],[175,26,1085,24],[175,29,1088,6,"props"],[175,34,1088,11],[175,35,1085,4,"selectionHandleColor"],[175,55,1085,24],[176,6,1086,4,"cursorColor"],[176,17,1086,15],[176,20,1088,6,"props"],[176,25,1088,11],[176,26,1086,4,"cursorColor"],[176,37,1086,15],[177,6,1087,7,"otherProps"],[177,16,1087,17],[177,23,1087,17,"_objectWithoutProperties2"],[177,48,1087,17],[177,49,1087,17,"default"],[177,56,1087,17],[177,58,1088,6,"props"],[177,63,1088,11],[177,65,1088,11,"_excluded"],[177,74,1088,11],[178,4,1090,2],[178,8,1090,8,"inputRef"],[178,16,1090,16],[178,19,1090,19],[178,23,1090,19,"useRef"],[178,36,1090,25],[178,38,1090,73],[178,42,1090,77],[178,43,1090,78],[180,4,1092,2],[181,4,1093,2],[181,8,1093,8,"selection"],[181,17,1093,29],[181,20,1094,4,"propsSelection"],[181,34,1094,18],[181,38,1094,22],[181,42,1094,26],[181,45,1095,8],[181,49,1095,12],[181,52,1096,8],[182,6,1097,10,"start"],[182,11,1097,15],[182,13,1097,17,"propsSelection"],[182,27,1097,31],[182,28,1097,32,"start"],[182,33,1097,37],[183,6,1098,10,"end"],[183,9,1098,13],[183,12,1098,13,"_propsSelection$end"],[183,31,1098,13],[183,34,1098,15,"propsSelection"],[183,48,1098,29],[183,49,1098,30,"end"],[183,52,1098,33],[183,64,1098,33,"_propsSelection$end"],[183,83,1098,33],[183,86,1098,37,"propsSelection"],[183,100,1098,51],[183,101,1098,52,"start"],[184,4,1099,8],[184,5,1099,9],[185,4,1101,2],[185,8,1101,2,"_useState"],[185,17,1101,2],[185,20,1101,58],[185,24,1101,58,"useState"],[185,39,1101,66],[185,41,1101,75],[185,42,1101,76],[185,43,1101,77],[186,6,1101,77,"_useState2"],[186,16,1101,77],[186,23,1101,77,"_slicedToArray2"],[186,38,1101,77],[186,39,1101,77,"default"],[186,46,1101,77],[186,48,1101,77,"_useState"],[186,57,1101,77],[187,6,1101,9,"mostRecentEventCount"],[187,26,1101,29],[187,29,1101,29,"_useState2"],[187,39,1101,29],[188,6,1101,31,"setMostRecentEventCount"],[188,29,1101,54],[188,32,1101,54,"_useState2"],[188,42,1101,54],[189,4,1102,2],[189,8,1102,2,"_useState3"],[189,18,1102,2],[189,21,1102,46],[189,25,1102,46,"useState"],[189,40,1102,54],[189,42,1102,67,"props"],[189,47,1102,72],[189,48,1102,73,"value"],[189,53,1102,78],[189,54,1102,79],[190,6,1102,79,"_useState4"],[190,16,1102,79],[190,23,1102,79,"_slicedToArray2"],[190,38,1102,79],[190,39,1102,79,"default"],[190,46,1102,79],[190,48,1102,79,"_useState3"],[190,58,1102,79],[191,6,1102,9,"lastNativeText"],[191,20,1102,23],[191,23,1102,23,"_useState4"],[191,33,1102,23],[192,6,1102,25,"setLastNativeText"],[192,23,1102,42],[192,26,1102,42,"_useState4"],[192,36,1102,42],[193,4,1103,2],[193,8,1103,2,"_useState5"],[193,18,1103,2],[193,21,1103,61],[193,25,1103,61,"useState"],[193,40,1103,69],[193,42,1106,6],[194,8,1107,4,"selection"],[194,17,1107,13],[194,19,1107,15],[195,10,1107,16,"start"],[195,15,1107,21],[195,17,1107,23],[195,18,1107,24],[195,19,1107,25],[196,10,1107,27,"end"],[196,13,1107,30],[196,15,1107,32],[196,16,1107,33],[197,8,1107,34],[197,9,1107,35],[198,8,1108,4,"mostRecentEventCount"],[198,28,1108,24],[198,30,1108,26,"mostRecentEventCount"],[199,6,1109,2],[199,7,1109,3],[199,8,1109,4],[200,6,1109,4,"_useState6"],[200,16,1109,4],[200,23,1109,4,"_slicedToArray2"],[200,38,1109,4],[200,39,1109,4,"default"],[200,46,1109,4],[200,48,1109,4,"_useState5"],[200,58,1109,4],[201,6,1103,9,"lastNativeSelectionState"],[201,30,1103,33],[201,33,1103,33,"_useState6"],[201,43,1103,33],[202,6,1103,35,"setLastNativeSelection"],[202,28,1103,57],[202,31,1103,57,"_useState6"],[202,41,1103,57],[203,4,1111,2],[203,8,1111,8,"lastNativeSelection"],[203,27,1111,27],[203,30,1111,30,"lastNativeSelectionState"],[203,54,1111,54],[203,55,1111,55,"selection"],[203,64,1111,64],[204,4,1113,2],[204,8,1113,6,"viewCommands"],[204,20,1113,18],[205,4,1114,2],[205,8,1114,6,"AndroidTextInputCommands"],[205,32,1114,30],[205,34,1114,32],[206,6,1115,4,"viewCommands"],[206,18,1115,16],[206,21,1115,19,"AndroidTextInputCommands"],[206,45,1115,43],[207,4,1116,2],[207,5,1116,3],[207,11,1116,9],[208,6,1117,4,"viewCommands"],[208,18,1117,16],[208,21,1118,6,"props"],[208,26,1118,11],[208,27,1118,12,"multiline"],[208,36,1118,21],[208,41,1118,26],[208,45,1118,30],[208,48,1119,10,"RCTMultilineTextInputNativeCommands"],[208,83,1119,45],[208,86,1120,10,"RCTSinglelineTextInputNativeCommands"],[208,122,1120,46],[209,4,1121,2],[210,4,1123,2],[210,8,1123,8,"text"],[210,12,1123,12],[210,15,1124,4],[210,22,1124,11,"props"],[210,27,1124,16],[210,28,1124,17,"value"],[210,33,1124,22],[210,38,1124,27],[210,46,1124,35],[210,49,1125,8,"props"],[210,54,1125,13],[210,55,1125,14,"value"],[210,60,1125,19],[210,63,1126,8],[210,70,1126,15,"props"],[210,75,1126,20],[210,76,1126,21,"defaultValue"],[210,88,1126,33],[210,93,1126,38],[210,101,1126,46],[210,104,1127,10,"props"],[210,109,1127,15],[210,110,1127,16,"defaultValue"],[210,122,1127,28],[210,125,1128,10],[210,127,1128,12],[212,4,1130,2],[213,4,1131,2],[214,4,1132,2],[215,4,1133,2],[215,8,1133,2,"useLayoutEffect"],[215,30,1133,17],[215,32,1133,18],[215,44,1133,24],[216,6,1134,4],[216,10,1134,10,"nativeUpdate"],[216,22,1134,62],[216,25,1134,65],[216,26,1134,66],[216,27,1134,67],[217,6,1136,4],[217,10,1136,8,"lastNativeText"],[217,24,1136,22],[217,29,1136,27,"props"],[217,34,1136,32],[217,35,1136,33,"value"],[217,40,1136,38],[217,44,1136,42],[217,51,1136,49,"props"],[217,56,1136,54],[217,57,1136,55,"value"],[217,62,1136,60],[217,67,1136,65],[217,75,1136,73],[217,77,1136,75],[218,8,1137,6,"nativeUpdate"],[218,20,1137,18],[218,21,1137,19,"text"],[218,25,1137,23],[218,28,1137,26,"props"],[218,33,1137,31],[218,34,1137,32,"value"],[218,39,1137,37],[219,8,1138,6,"setLastNativeText"],[219,25,1138,23],[219,26,1138,24,"props"],[219,31,1138,29],[219,32,1138,30,"value"],[219,37,1138,35],[219,38,1138,36],[220,6,1139,4],[221,6,1141,4],[221,10,1142,6,"selection"],[221,19,1142,15],[221,23,1143,6,"lastNativeSelection"],[221,42,1143,25],[221,47,1144,7,"lastNativeSelection"],[221,66,1144,26],[221,67,1144,27,"start"],[221,72,1144,32],[221,77,1144,37,"selection"],[221,86,1144,46],[221,87,1144,47,"start"],[221,92,1144,52],[221,96,1145,8,"lastNativeSelection"],[221,115,1145,27],[221,116,1145,28,"end"],[221,119,1145,31],[221,124,1145,36,"selection"],[221,133,1145,45],[221,134,1145,46,"end"],[221,137,1145,49],[221,138,1145,50],[221,140,1146,6],[222,8,1147,6,"nativeUpdate"],[222,20,1147,18],[222,21,1147,19,"selection"],[222,30,1147,28],[222,33,1147,31,"selection"],[222,42,1147,40],[223,8,1148,6,"setLastNativeSelection"],[223,30,1148,28],[223,31,1148,29],[224,10,1148,30,"selection"],[224,19,1148,39],[224,21,1148,30,"selection"],[224,30,1148,39],[225,10,1148,41,"mostRecentEventCount"],[225,30,1148,61],[225,32,1148,41,"mostRecentEventCount"],[226,8,1148,61],[226,9,1148,62],[226,10,1148,63],[227,6,1149,4],[228,6,1151,4],[228,10,1151,8,"Object"],[228,16,1151,14],[228,17,1151,15,"keys"],[228,21,1151,19],[228,22,1151,20,"nativeUpdate"],[228,34,1151,32],[228,35,1151,33],[228,36,1151,34,"length"],[228,42,1151,40],[228,47,1151,45],[228,48,1151,46],[228,50,1151,48],[229,8,1152,6],[230,6,1153,4],[231,6,1155,4],[231,10,1155,8,"inputRef"],[231,18,1155,16],[231,19,1155,17,"current"],[231,26,1155,24],[231,30,1155,28],[231,34,1155,32],[231,36,1155,34],[232,8,1155,34],[232,12,1155,34,"_selection$start"],[232,28,1155,34],[232,30,1155,34,"_selection$end"],[232,44,1155,34],[233,8,1156,6,"viewCommands"],[233,20,1156,18],[233,21,1156,19,"setTextAndSelection"],[233,40,1156,38],[233,41,1157,8,"inputRef"],[233,49,1157,16],[233,50,1157,17,"current"],[233,57,1157,24],[233,59,1158,8,"mostRecentEventCount"],[233,79,1158,28],[233,81,1159,8,"text"],[233,85,1159,12],[233,88,1159,12,"_selection$start"],[233,104,1159,12],[233,107,1160,8,"selection"],[233,116,1160,17],[233,136,1160,8,"selection"],[233,145,1160,17],[233,146,1160,19,"start"],[233,151,1160,24],[233,163,1160,24,"_selection$start"],[233,179,1160,24],[233,182,1160,28],[233,183,1160,29],[233,184,1160,30],[233,187,1160,30,"_selection$end"],[233,201,1160,30],[233,204,1161,8,"selection"],[233,213,1161,17],[233,233,1161,8,"selection"],[233,242,1161,17],[233,243,1161,19,"end"],[233,246,1161,22],[233,258,1161,22,"_selection$end"],[233,272,1161,22],[233,275,1161,26],[233,276,1161,27],[233,277,1162,6],[233,278,1162,7],[234,6,1163,4],[235,4,1164,2],[235,5,1164,3],[235,7,1164,5],[235,8,1165,4,"mostRecentEventCount"],[235,28,1165,24],[235,30,1166,4,"inputRef"],[235,38,1166,12],[235,40,1167,4,"props"],[235,45,1167,9],[235,46,1167,10,"value"],[235,51,1167,15],[235,53,1168,4,"props"],[235,58,1168,9],[235,59,1168,10,"defaultValue"],[235,71,1168,22],[235,73,1169,4,"lastNativeText"],[235,87,1169,18],[235,89,1170,4,"selection"],[235,98,1170,13],[235,100,1171,4,"lastNativeSelection"],[235,119,1171,23],[235,121,1172,4,"text"],[235,125,1172,8],[235,127,1173,4,"viewCommands"],[235,139,1173,16],[235,140,1174,3],[235,141,1174,4],[236,4,1176,2],[236,8,1176,2,"useLayoutEffect"],[236,30,1176,17],[236,32,1176,18],[236,44,1176,24],[237,6,1177,4],[237,10,1177,10,"inputRefValue"],[237,23,1177,23],[237,26,1177,26,"inputRef"],[237,34,1177,34],[237,35,1177,35,"current"],[237,42,1177,42],[238,6,1179,4],[238,10,1179,8,"inputRefValue"],[238,23,1179,21],[238,27,1179,25],[238,31,1179,29],[238,33,1179,31],[239,8,1180,6,"TextInputState"],[239,31,1180,20],[239,32,1180,21,"registerInput"],[239,45,1180,34],[239,46,1180,35,"inputRefValue"],[239,59,1180,48],[239,60,1180,49],[240,8,1182,6],[240,15,1182,13],[240,27,1182,19],[241,10,1183,8,"TextInputState"],[241,33,1183,22],[241,34,1183,23,"unregisterInput"],[241,49,1183,38],[241,50,1183,39,"inputRefValue"],[241,63,1183,52],[241,64,1183,53],[242,10,1185,8],[242,14,1185,12,"TextInputState"],[242,37,1185,26],[242,38,1185,27,"currentlyFocusedInput"],[242,59,1185,48],[242,60,1185,49],[242,61,1185,50],[242,66,1185,55,"inputRefValue"],[242,79,1185,68],[242,81,1185,70],[243,12,1186,10],[243,16,1186,10,"nullthrows"],[243,35,1186,20],[243,37,1186,21,"inputRefValue"],[243,50,1186,34],[243,51,1186,35],[243,52,1186,36,"blur"],[243,56,1186,40],[243,57,1186,41],[243,58,1186,42],[244,10,1187,8],[245,8,1188,6],[245,9,1188,7],[246,6,1189,4],[247,4,1190,2],[247,5,1190,3],[247,7,1190,5],[247,8,1190,6,"inputRef"],[247,16,1190,14],[247,17,1190,15],[247,18,1190,16],[248,4,1192,2],[248,8,1192,8,"setLocalRef"],[248,19,1192,19],[248,22,1192,22],[248,26,1192,22,"useCallback"],[248,44,1192,33],[248,46,1193,4],[248,56,1193,5,"instance"],[248,64,1193,39],[248,66,1193,44],[249,6,1194,6,"inputRef"],[249,14,1194,14],[249,15,1194,15,"current"],[249,22,1194,22],[249,25,1194,25,"instance"],[249,33,1194,33],[251,6,1196,6],[252,0,1197,0],[253,0,1198,0],[254,0,1199,0],[255,0,1200,0],[256,0,1201,0],[257,0,1202,0],[258,0,1203,0],[259,0,1204,0],[260,0,1205,0],[261,0,1206,0],[262,0,1207,0],[263,0,1208,0],[264,0,1209,0],[265,0,1210,0],[266,0,1211,0],[267,0,1212,0],[268,0,1213,0],[269,0,1214,0],[270,0,1215,0],[271,6,1218,6],[271,10,1218,10,"instance"],[271,18,1218,18],[271,22,1218,22],[271,26,1218,26],[271,28,1218,28],[272,8,1219,8],[273,8,1220,8,"Object"],[273,14,1220,14],[273,15,1220,15,"assign"],[273,21,1220,21],[273,22,1220,22,"instance"],[273,30,1220,30],[273,32,1220,32],[274,10,1221,10,"clear"],[274,15,1221,15],[274,26,1221,10,"clear"],[274,31,1221,15,"clear"],[274,32,1221,15],[274,34,1221,24],[275,12,1222,12],[275,16,1222,16,"inputRef"],[275,24,1222,24],[275,25,1222,25,"current"],[275,32,1222,32],[275,36,1222,36],[275,40,1222,40],[275,42,1222,42],[276,14,1223,14,"viewCommands"],[276,26,1223,26],[276,27,1223,27,"setTextAndSelection"],[276,46,1223,46],[276,47,1224,16,"inputRef"],[276,55,1224,24],[276,56,1224,25,"current"],[276,63,1224,32],[276,65,1225,16,"mostRecentEventCount"],[276,85,1225,36],[276,87,1226,16],[276,89,1226,18],[276,91,1227,16],[276,92,1227,17],[276,94,1228,16],[276,95,1229,14],[276,96,1229,15],[277,12,1230,12],[278,10,1231,10],[278,11,1231,11],[279,10,1232,10],[280,10,1233,10,"isFocused"],[280,19,1233,19],[280,30,1233,10,"isFocused"],[280,39,1233,19,"isFocused"],[280,40,1233,19],[280,42,1233,31],[281,12,1234,12],[281,19,1234,19,"TextInputState"],[281,42,1234,33],[281,43,1234,34,"currentlyFocusedInput"],[281,64,1234,55],[281,65,1234,56],[281,66,1234,57],[281,71,1234,62,"inputRef"],[281,79,1234,70],[281,80,1234,71,"current"],[281,87,1234,78],[282,10,1235,10],[282,11,1235,11],[283,10,1236,10,"getNativeRef"],[283,22,1236,22],[283,33,1236,10,"getNativeRef"],[283,45,1236,22,"getNativeRef"],[283,46,1236,22],[283,48,1236,66],[284,12,1237,12],[284,19,1237,19,"inputRef"],[284,27,1237,27],[284,28,1237,28,"current"],[284,35,1237,35],[285,10,1238,10],[285,11,1238,11],[286,10,1239,10,"setSelection"],[286,22,1239,22],[286,33,1239,10,"setSelection"],[286,45,1239,22,"setSelection"],[286,46,1239,23,"start"],[286,51,1239,36],[286,53,1239,38,"end"],[286,56,1239,49],[286,58,1239,57],[287,12,1240,12],[287,16,1240,16,"inputRef"],[287,24,1240,24],[287,25,1240,25,"current"],[287,32,1240,32],[287,36,1240,36],[287,40,1240,40],[287,42,1240,42],[288,14,1241,14,"viewCommands"],[288,26,1241,26],[288,27,1241,27,"setTextAndSelection"],[288,46,1241,46],[288,47,1242,16,"inputRef"],[288,55,1242,24],[288,56,1242,25,"current"],[288,63,1242,32],[288,65,1243,16,"mostRecentEventCount"],[288,85,1243,36],[288,87,1244,16],[288,91,1244,20],[288,93,1245,16,"start"],[288,98,1245,21],[288,100,1246,16,"end"],[288,103,1247,14],[288,104,1247,15],[289,12,1248,12],[290,10,1249,10],[291,8,1250,8],[291,9,1250,9],[291,10,1250,10],[292,6,1251,6],[293,4,1252,4],[293,5,1252,5],[293,7,1253,4],[293,8,1253,5,"mostRecentEventCount"],[293,28,1253,25],[293,30,1253,27,"viewCommands"],[293,42,1253,39],[293,43,1254,2],[293,44,1254,3],[294,4,1256,2],[294,8,1256,8,"ref"],[294,11,1256,11],[294,14,1256,14],[294,18,1256,14,"useMergeRefs"],[294,39,1256,26],[294,41,1256,46,"setLocalRef"],[294,52,1256,57],[294,54,1256,59,"props"],[294,59,1256,64],[294,60,1256,65,"forwardedRef"],[294,72,1256,77],[294,73,1256,78],[295,4,1258,2],[295,8,1258,8,"_onChange"],[295,17,1258,17],[295,20,1258,20],[295,29,1258,8,"_onChange"],[295,38,1258,17,"_onChange"],[295,39,1258,21,"event"],[295,44,1258,39],[295,46,1258,44],[296,6,1259,4],[296,10,1259,10,"currentText"],[296,21,1259,21],[296,24,1259,24,"event"],[296,29,1259,29],[296,30,1259,30,"nativeEvent"],[296,41,1259,41],[296,42,1259,42,"text"],[296,46,1259,46],[297,6,1260,4,"props"],[297,11,1260,9],[297,12,1260,10,"onChange"],[297,20,1260,18],[297,24,1260,22,"props"],[297,29,1260,27],[297,30,1260,28,"onChange"],[297,38,1260,36],[297,39,1260,37,"event"],[297,44,1260,42],[297,45,1260,43],[298,6,1261,4,"props"],[298,11,1261,9],[298,12,1261,10,"onChangeText"],[298,24,1261,22],[298,28,1261,26,"props"],[298,33,1261,31],[298,34,1261,32,"onChangeText"],[298,46,1261,44],[298,47,1261,45,"currentText"],[298,58,1261,56],[298,59,1261,57],[299,6,1263,4],[299,10,1263,8,"inputRef"],[299,18,1263,16],[299,19,1263,17,"current"],[299,26,1263,24],[299,30,1263,28],[299,34,1263,32],[299,36,1263,34],[300,8,1264,6],[301,8,1265,6],[302,8,1266,6],[303,6,1267,4],[304,6,1269,4,"setLastNativeText"],[304,23,1269,21],[304,24,1269,22,"currentText"],[304,35,1269,33],[304,36,1269,34],[305,6,1270,4],[306,6,1271,4],[307,6,1272,4],[308,6,1273,4],[309,6,1274,4,"setMostRecentEventCount"],[309,29,1274,27],[309,30,1274,28,"event"],[309,35,1274,33],[309,36,1274,34,"nativeEvent"],[309,47,1274,45],[309,48,1274,46,"eventCount"],[309,58,1274,56],[309,59,1274,57],[310,4,1275,2],[310,5,1275,3],[311,4,1277,2],[311,8,1277,8,"_onSelectionChange"],[311,26,1277,26],[311,29,1277,29],[311,38,1277,8,"_onSelectionChange"],[311,56,1277,26,"_onSelectionChange"],[311,57,1277,30,"event"],[311,62,1277,57],[311,64,1277,62],[312,6,1278,4,"props"],[312,11,1278,9],[312,12,1278,10,"onSelectionChange"],[312,29,1278,27],[312,33,1278,31,"props"],[312,38,1278,36],[312,39,1278,37,"onSelectionChange"],[312,56,1278,54],[312,57,1278,55,"event"],[312,62,1278,60],[312,63,1278,61],[313,6,1280,4],[313,10,1280,8,"inputRef"],[313,18,1280,16],[313,19,1280,17,"current"],[313,26,1280,24],[313,30,1280,28],[313,34,1280,32],[313,36,1280,34],[314,8,1281,6],[315,8,1282,6],[316,8,1283,6],[317,6,1284,4],[318,6,1286,4,"setLastNativeSelection"],[318,28,1286,26],[318,29,1286,27],[319,8,1287,6,"selection"],[319,17,1287,15],[319,19,1287,17,"event"],[319,24,1287,22],[319,25,1287,23,"nativeEvent"],[319,36,1287,34],[319,37,1287,35,"selection"],[319,46,1287,44],[320,8,1288,6,"mostRecentEventCount"],[320,28,1288,26],[320,30,1288,6,"mostRecentEventCount"],[321,6,1289,4],[321,7,1289,5],[321,8,1289,6],[322,4,1290,2],[322,5,1290,3],[323,4,1292,2],[323,8,1292,8,"_onFocus"],[323,16,1292,16],[323,19,1292,19],[323,28,1292,8,"_onFocus"],[323,36,1292,16,"_onFocus"],[323,37,1292,20,"event"],[323,42,1292,37],[323,44,1292,42],[324,6,1293,4,"TextInputState"],[324,29,1293,18],[324,30,1293,19,"focusInput"],[324,40,1293,29],[324,41,1293,30,"inputRef"],[324,49,1293,38],[324,50,1293,39,"current"],[324,57,1293,46],[324,58,1293,47],[325,6,1294,4],[325,10,1294,8,"props"],[325,15,1294,13],[325,16,1294,14,"onFocus"],[325,23,1294,21],[325,25,1294,23],[326,8,1295,6,"props"],[326,13,1295,11],[326,14,1295,12,"onFocus"],[326,21,1295,19],[326,22,1295,20,"event"],[326,27,1295,25],[326,28,1295,26],[327,6,1296,4],[328,4,1297,2],[328,5,1297,3],[329,4,1299,2],[329,8,1299,8,"_onBlur"],[329,15,1299,15],[329,18,1299,18],[329,27,1299,8,"_onBlur"],[329,34,1299,15,"_onBlur"],[329,35,1299,19,"event"],[329,40,1299,35],[329,42,1299,40],[330,6,1300,4,"TextInputState"],[330,29,1300,18],[330,30,1300,19,"blurInput"],[330,39,1300,28],[330,40,1300,29,"inputRef"],[330,48,1300,37],[330,49,1300,38,"current"],[330,56,1300,45],[330,57,1300,46],[331,6,1301,4],[331,10,1301,8,"props"],[331,15,1301,13],[331,16,1301,14,"onBlur"],[331,22,1301,20],[331,24,1301,22],[332,8,1302,6,"props"],[332,13,1302,11],[332,14,1302,12,"onBlur"],[332,20,1302,18],[332,21,1302,19,"event"],[332,26,1302,24],[332,27,1302,25],[333,6,1303,4],[334,4,1304,2],[334,5,1304,3],[335,4,1306,2],[335,8,1306,8,"_onScroll"],[335,17,1306,17],[335,20,1306,20],[335,29,1306,8,"_onScroll"],[335,38,1306,17,"_onScroll"],[335,39,1306,21,"event"],[335,44,1306,39],[335,46,1306,44],[336,6,1307,4,"props"],[336,11,1307,9],[336,12,1307,10,"onScroll"],[336,20,1307,18],[336,24,1307,22,"props"],[336,29,1307,27],[336,30,1307,28,"onScroll"],[336,38,1307,36],[336,39,1307,37,"event"],[336,44,1307,42],[336,45,1307,43],[337,4,1308,2],[337,5,1308,3],[338,4,1310,2],[338,8,1310,6,"textInput"],[338,17,1310,15],[338,20,1310,18],[338,24,1310,22],[339,4,1312,2],[339,8,1312,8,"multiline"],[339,17,1312,17],[339,21,1312,17,"_props$multiline"],[339,37,1312,17],[339,40,1312,20,"props"],[339,45,1312,25],[339,46,1312,26,"multiline"],[339,55,1312,35],[339,67,1312,35,"_props$multiline"],[339,83,1312,35],[339,86,1312,39],[339,91,1312,44],[340,4,1314,2],[340,8,1314,6,"submitBehavior"],[340,22,1314,36],[341,4,1315,2],[341,8,1315,6,"props"],[341,13,1315,11],[341,14,1315,12,"submitBehavior"],[341,28,1315,26],[341,32,1315,30],[341,36,1315,34],[341,38,1315,36],[342,6,1316,4],[343,6,1317,4],[343,10,1317,8],[343,11,1317,9,"multiline"],[343,20,1317,18],[343,24,1317,22,"props"],[343,29,1317,27],[343,30,1317,28,"submitBehavior"],[343,44,1317,42],[343,49,1317,47],[343,58,1317,56],[343,60,1317,58],[344,8,1318,6],[345,8,1319,6,"submitBehavior"],[345,22,1319,20],[345,25,1319,23],[345,40,1319,38],[346,6,1320,4],[346,7,1320,5],[346,13,1320,11],[347,8,1321,6,"submitBehavior"],[347,22,1321,20],[347,25,1321,23,"props"],[347,30,1321,28],[347,31,1321,29,"submitBehavior"],[347,45,1321,43],[348,6,1322,4],[349,4,1323,2],[349,5,1323,3],[349,11,1323,9],[349,15,1323,13,"multiline"],[349,24,1323,22],[349,26,1323,24],[350,6,1324,4],[350,10,1324,8,"props"],[350,15,1324,13],[350,16,1324,14,"blurOnSubmit"],[350,28,1324,26],[350,33,1324,31],[350,37,1324,35],[350,39,1324,37],[351,8,1325,6,"submitBehavior"],[351,22,1325,20],[351,25,1325,23],[351,40,1325,38],[352,6,1326,4],[352,7,1326,5],[352,13,1326,11],[353,8,1327,6,"submitBehavior"],[353,22,1327,20],[353,25,1327,23],[353,34,1327,32],[354,6,1328,4],[355,4,1329,2],[355,5,1329,3],[355,11,1329,9],[356,6,1330,4],[357,6,1331,4],[357,10,1331,8,"props"],[357,15,1331,13],[357,16,1331,14,"blurOnSubmit"],[357,28,1331,26],[357,33,1331,31],[357,38,1331,36],[357,40,1331,38],[358,8,1332,6,"submitBehavior"],[358,22,1332,20],[358,25,1332,23],[358,40,1332,38],[359,6,1333,4],[359,7,1333,5],[359,13,1333,11],[360,8,1334,6,"submitBehavior"],[360,22,1334,20],[360,25,1334,23],[360,33,1334,31],[361,6,1335,4],[362,4,1336,2],[363,4,1338,2],[363,8,1338,8,"accessible"],[363,18,1338,18],[363,21,1338,21,"props"],[363,26,1338,26],[363,27,1338,27,"accessible"],[363,37,1338,37],[363,42,1338,42],[363,47,1338,47],[364,4,1339,2],[364,8,1339,8,"focusable"],[364,17,1339,17],[364,20,1339,20,"props"],[364,25,1339,25],[364,26,1339,26,"focusable"],[364,35,1339,35],[364,40,1339,40],[364,45,1339,45],[365,4,1341,2],[365,8,1342,4,"editable"],[365,16,1342,12],[365,19,1348,6,"props"],[365,24,1348,11],[365,25,1342,4,"editable"],[365,33,1342,12],[366,6,1343,4,"hitSlop"],[366,13,1343,11],[366,16,1348,6,"props"],[366,21,1348,11],[366,22,1343,4,"hitSlop"],[366,29,1343,11],[367,6,1344,4,"onPress"],[367,14,1344,11],[367,17,1348,6,"props"],[367,22,1348,11],[367,23,1344,4,"onPress"],[367,30,1344,11],[368,6,1345,4,"onPressIn"],[368,15,1345,13],[368,18,1348,6,"props"],[368,23,1348,11],[368,24,1345,4,"onPressIn"],[368,33,1345,13],[369,6,1346,4,"onPressOut"],[369,16,1346,14],[369,19,1348,6,"props"],[369,24,1348,11],[369,25,1346,4,"onPressOut"],[369,35,1346,14],[370,6,1347,4,"rejectResponderTermination"],[370,32,1347,30],[370,35,1348,6,"props"],[370,40,1348,11],[370,41,1347,4,"rejectResponderTermination"],[370,67,1347,30],[371,4,1350,2],[371,8,1350,8,"config"],[371,14,1350,14],[371,17,1350,17,"React"],[371,22,1350,22],[371,23,1350,23,"useMemo"],[371,30,1350,30],[371,31,1351,4],[372,6,1351,4],[372,13,1351,11],[373,8,1352,6,"hitSlop"],[373,15,1352,13],[373,17,1352,6,"hitSlop"],[373,24,1352,13],[374,8,1353,6,"onPress"],[374,15,1353,13],[374,17,1353,15],[374,26,1353,6,"onPress"],[374,33,1353,13,"onPress"],[374,34,1353,16,"event"],[374,39,1353,33],[374,41,1353,38],[375,10,1354,8,"onPress"],[375,18,1354,15],[375,30,1354,8,"onPress"],[375,38,1354,15],[375,39,1354,18,"event"],[375,44,1354,23],[375,45,1354,24],[376,10,1355,8],[376,14,1355,12,"editable"],[376,22,1355,20],[376,27,1355,25],[376,32,1355,30],[376,34,1355,32],[377,12,1356,10],[377,16,1356,14,"inputRef"],[377,24,1356,22],[377,25,1356,23,"current"],[377,32,1356,30],[377,36,1356,34],[377,40,1356,38],[377,42,1356,40],[378,14,1357,12,"inputRef"],[378,22,1357,20],[378,23,1357,21,"current"],[378,30,1357,28],[378,31,1357,29,"focus"],[378,36,1357,34],[378,37,1357,35],[378,38,1357,36],[379,12,1358,10],[380,10,1359,8],[381,8,1360,6],[381,9,1360,7],[382,8,1361,6,"onPressIn"],[382,17,1361,15],[382,19,1361,17,"onPressIn"],[382,28,1361,26],[383,8,1362,6,"onPressOut"],[383,18,1362,16],[383,20,1362,18,"onPressOut"],[383,30,1362,28],[384,8,1363,6,"cancelable"],[384,18,1363,16],[384,20,1363,18,"Platform"],[384,37,1363,26],[384,38,1363,27,"OS"],[384,40,1363,29],[384,45,1363,34],[384,50,1363,39],[384,53,1363,42],[384,54,1363,43,"rejectResponderTermination"],[384,80,1363,69],[384,83,1363,72],[385,6,1364,4],[385,7,1364,5],[386,4,1364,5],[386,5,1364,6],[386,7,1365,4],[386,8,1366,6,"editable"],[386,16,1366,14],[386,18,1367,6,"hitSlop"],[386,25,1367,13],[386,27,1368,6,"onPress"],[386,35,1368,13],[386,37,1369,6,"onPressIn"],[386,46,1369,15],[386,48,1370,6,"onPressOut"],[386,58,1370,16],[386,60,1371,6,"rejectResponderTermination"],[386,86,1371,32],[386,87,1373,2],[386,88,1373,3],[388,4,1375,2],[389,4,1376,2],[390,4,1377,2],[390,8,1377,6,"caretHidden"],[390,19,1377,17],[390,22,1377,20,"props"],[390,27,1377,25],[390,28,1377,26,"caretHidden"],[390,39,1377,37],[391,4,1378,2],[391,8,1378,6,"Platform"],[391,25,1378,14],[391,26,1378,15,"isTesting"],[391,35,1378,24],[391,37,1378,26],[392,6,1379,4,"caretHidden"],[392,17,1379,15],[392,20,1379,18],[392,24,1379,22],[393,4,1380,2],[395,4,1382,2],[396,4,1383,2],[397,4,1384,2],[397,8,1384,2,"_ref"],[397,12,1384,2],[397,15,1384,46],[397,19,1384,46,"usePressability"],[397,43,1384,61],[397,45,1384,62,"config"],[397,51,1384,68],[397,52,1384,69],[397,56,1384,73],[397,57,1384,74],[397,58,1384,75],[398,6,1384,9,"onBlur"],[398,12,1384,15],[398,15,1384,15,"_ref"],[398,19,1384,15],[398,20,1384,9,"onBlur"],[398,26,1384,15],[399,6,1384,17,"onFocus"],[399,13,1384,24],[399,16,1384,24,"_ref"],[399,20,1384,24],[399,21,1384,17,"onFocus"],[399,28,1384,24],[400,6,1384,29,"eventHandlers"],[400,19,1384,42],[400,26,1384,42,"_objectWithoutProperties2"],[400,51,1384,42],[400,52,1384,42,"default"],[400,59,1384,42],[400,61,1384,42,"_ref"],[400,65,1384,42],[400,67,1384,42,"_excluded2"],[400,77,1384,42],[401,4,1386,2],[401,8,1386,6,"_accessibilityState"],[401,27,1386,25],[402,4,1387,2],[402,8,1388,4,"accessibilityState"],[402,26,1388,22],[402,30,1388,26],[402,34,1388,30],[402,38,1389,4,"ariaBusy"],[402,46,1389,12],[402,50,1389,16],[402,54,1389,20],[402,58,1390,4,"ariaChecked"],[402,69,1390,15],[402,73,1390,19],[402,77,1390,23],[402,81,1391,4,"ariaDisabled"],[402,93,1391,16],[402,97,1391,20],[402,101,1391,24],[402,105,1392,4,"ariaExpanded"],[402,117,1392,16],[402,121,1392,20],[402,125,1392,24],[402,129,1393,4,"ariaSelected"],[402,141,1393,16],[402,145,1393,20],[402,149,1393,24],[402,151,1394,4],[403,6,1395,4,"_accessibilityState"],[403,25,1395,23],[403,28,1395,26],[404,8,1396,6,"busy"],[404,12,1396,10],[404,14,1396,12,"ariaBusy"],[404,22,1396,20],[404,33,1396,12,"ariaBusy"],[404,41,1396,20],[404,44,1396,24,"accessibilityState"],[404,62,1396,42],[404,82,1396,24,"accessibilityState"],[404,100,1396,42],[404,101,1396,44,"busy"],[404,105,1396,48],[405,8,1397,6,"checked"],[405,15,1397,13],[405,17,1397,15,"ariaChecked"],[405,28,1397,26],[405,39,1397,15,"ariaChecked"],[405,50,1397,26],[405,53,1397,30,"accessibilityState"],[405,71,1397,48],[405,91,1397,30,"accessibilityState"],[405,109,1397,48],[405,110,1397,50,"checked"],[405,117,1397,57],[406,8,1398,6,"disabled"],[406,16,1398,14],[406,18,1398,16,"ariaDisabled"],[406,30,1398,28],[406,41,1398,16,"ariaDisabled"],[406,53,1398,28],[406,56,1398,32,"accessibilityState"],[406,74,1398,50],[406,94,1398,32,"accessibilityState"],[406,112,1398,50],[406,113,1398,52,"disabled"],[406,121,1398,60],[407,8,1399,6,"expanded"],[407,16,1399,14],[407,18,1399,16,"ariaExpanded"],[407,30,1399,28],[407,41,1399,16,"ariaExpanded"],[407,53,1399,28],[407,56,1399,32,"accessibilityState"],[407,74,1399,50],[407,94,1399,32,"accessibilityState"],[407,112,1399,50],[407,113,1399,52,"expanded"],[407,121,1399,60],[408,8,1400,6,"selected"],[408,16,1400,14],[408,18,1400,16,"ariaSelected"],[408,30,1400,28],[408,41,1400,16,"ariaSelected"],[408,53,1400,28],[408,56,1400,32,"accessibilityState"],[408,74,1400,50],[408,94,1400,32,"accessibilityState"],[408,112,1400,50],[408,113,1400,52,"selected"],[409,6,1401,4],[409,7,1401,5],[410,4,1402,2],[411,4,1404,2],[411,8,1404,8,"style"],[411,13,1404,13],[411,16,1404,16],[411,20,1404,16,"flattenStyle"],[411,41,1404,28],[411,43,1404,44,"props"],[411,48,1404,49],[411,49,1404,50,"style"],[411,54,1404,55],[411,55,1404,56],[412,4,1406,2],[412,8,1406,6],[412,16,1406,13,"style"],[412,21,1406,18],[412,41,1406,13,"style"],[412,46,1406,18],[412,47,1406,20,"fontWeight"],[412,57,1406,30],[412,63,1406,35],[412,71,1406,43],[412,73,1406,45],[413,6,1407,4],[414,6,1408,4],[415,6,1409,4,"style"],[415,11,1409,9],[415,12,1409,10,"fontWeight"],[415,22,1409,20],[415,25,1409,23,"style"],[415,30,1409,28],[415,50,1409,23,"style"],[415,55,1409,28],[415,56,1409,30,"fontWeight"],[415,66,1409,40],[415,67,1409,41,"toString"],[415,75,1409,49],[415,76,1409,50],[415,77,1409,51],[416,4,1410,2],[417,4,1412,2],[417,8,1412,6,"Platform"],[417,25,1412,14],[417,26,1412,15,"OS"],[417,28,1412,17],[417,33,1412,22],[417,38,1412,27],[417,40,1412,29],[418,6,1413,4],[418,10,1413,10,"RCTTextInputView"],[418,26,1413,26],[418,29,1414,6,"props"],[418,34,1414,11],[418,35,1414,12,"multiline"],[418,44,1414,21],[418,49,1414,26],[418,53,1414,30],[418,56,1415,10,"RCTMultilineTextInputView"],[418,81,1415,35],[418,84,1416,10,"RCTSinglelineTextInputView"],[418,110,1416,36],[419,6,1418,4],[419,10,1418,10,"useMultilineDefaultStyle"],[419,34,1418,34],[419,37,1419,6,"props"],[419,42,1419,11],[419,43,1419,12,"multiline"],[419,52,1419,21],[419,57,1419,26],[419,61,1419,30],[419,66,1420,7,"style"],[419,71,1420,12],[419,75,1420,16],[419,79,1420,20],[419,83,1421,9,"style"],[419,88,1421,14],[419,89,1421,15,"padding"],[419,96,1421,22],[419,100,1421,26],[419,104,1421,30],[419,108,1422,10,"style"],[419,113,1422,15],[419,114,1422,16,"paddingVertical"],[419,129,1422,31],[419,133,1422,35],[419,137,1422,39],[419,141,1423,10,"style"],[419,146,1423,15],[419,147,1423,16,"paddingTop"],[419,157,1423,26],[419,161,1423,30],[419,165,1423,35],[419,166,1423,36],[420,6,1425,4,"textInput"],[420,15,1425,13],[420,31,1426,6],[420,35,1426,6,"_jsxRuntime"],[420,46,1426,6],[420,47,1426,6,"jsx"],[420,50,1426,6],[420,52,1426,7,"RCTTextInputView"],[421,6,1427,8],[422,6,1427,8],[422,8,1427,8,"Object"],[422,14,1427,8],[422,15,1427,8,"assign"],[422,21,1427,8],[423,8,1428,8,"ref"],[423,11,1428,11],[423,13,1428,13,"ref"],[424,6,1428,17],[424,9,1429,12,"otherProps"],[424,19,1429,22],[424,21,1430,12,"eventHandlers"],[424,34,1430,25],[425,8,1431,8,"accessibilityState"],[425,26,1431,26],[425,28,1431,28,"_accessibilityState"],[425,47,1431,48],[426,8,1432,8,"accessible"],[426,18,1432,18],[426,20,1432,20,"accessible"],[426,30,1432,31],[427,8,1433,8,"submitBehavior"],[427,22,1433,22],[427,24,1433,24,"submitBehavior"],[427,38,1433,39],[428,8,1434,8,"caretHidden"],[428,19,1434,19],[428,21,1434,21,"caretHidden"],[428,32,1434,33],[429,8,1435,8,"dataDetectorTypes"],[429,25,1435,25],[429,27,1435,27,"props"],[429,32,1435,32],[429,33,1435,33,"dataDetectorTypes"],[429,50,1435,51],[430,8,1436,8,"focusable"],[430,17,1436,17],[430,19,1436,19,"tabIndex"],[430,27,1436,27],[430,32,1436,32,"undefined"],[430,41,1436,41],[430,44,1436,44],[430,45,1436,45,"tabIndex"],[430,53,1436,53],[430,56,1436,56,"focusable"],[430,65,1436,66],[431,8,1437,8,"mostRecentEventCount"],[431,28,1437,28],[431,30,1437,30,"mostRecentEventCount"],[431,50,1437,51],[432,8,1438,8,"nativeID"],[432,16,1438,16],[432,18,1438,18,"id"],[432,20,1438,20],[432,31,1438,18,"id"],[432,33,1438,20],[432,36,1438,24,"props"],[432,41,1438,29],[432,42,1438,30,"nativeID"],[432,50,1438,39],[433,8,1439,8,"onBlur"],[433,14,1439,14],[433,16,1439,16,"_onBlur"],[433,23,1439,24],[434,8,1440,8,"onChange"],[434,16,1440,16],[434,18,1440,18,"_onChange"],[434,27,1440,28],[435,8,1441,8,"onContentSizeChange"],[435,27,1441,27],[435,29,1441,29,"props"],[435,34,1441,34],[435,35,1441,35,"onContentSizeChange"],[435,54,1441,55],[436,8,1442,8,"onFocus"],[436,15,1442,15],[436,17,1442,17,"_onFocus"],[436,25,1442,26],[437,8,1443,8,"onScroll"],[437,16,1443,16],[437,18,1443,18,"_onScroll"],[437,27,1443,28],[438,8,1444,8,"onSelectionChange"],[438,25,1444,25],[438,27,1444,27,"_onSelectionChange"],[438,45,1444,46],[439,8,1445,8,"onSelectionChangeShouldSetResponder"],[439,43,1445,43],[439,45,1445,45,"emptyFunctionThatReturnsTrue"],[439,73,1445,74],[440,8,1446,8,"selection"],[440,17,1446,17],[440,19,1446,19,"selection"],[440,28,1446,29],[441,8,1447,8,"selectionColor"],[441,22,1447,22],[441,24,1447,24,"selectionColor"],[441,38,1447,39],[442,8,1448,8,"style"],[442,13,1448,13],[442,15,1448,15,"StyleSheet"],[442,34,1448,25],[442,35,1448,26,"compose"],[442,42,1448,33],[442,43,1449,10,"useMultilineDefaultStyle"],[442,67,1449,34],[442,70,1449,37,"styles"],[442,76,1449,43],[442,77,1449,44,"multilineDefault"],[442,93,1449,60],[442,96,1449,63],[442,100,1449,67],[442,102,1450,10,"style"],[442,107,1451,8],[442,108,1451,10],[443,8,1452,8,"text"],[443,12,1452,12],[443,14,1452,14,"text"],[444,6,1452,19],[444,8,1453,7],[444,9,1454,5],[445,4,1455,2],[445,5,1455,3],[445,11,1455,9],[445,15,1455,13,"Platform"],[445,32,1455,21],[445,33,1455,22,"OS"],[445,35,1455,24],[445,40,1455,29],[445,49,1455,38],[445,51,1455,40],[446,6,1455,40],[446,10,1455,40,"_props$ariaLabelledb"],[446,30,1455,40],[446,32,1455,40,"_props$placeholder"],[446,50,1455,40],[446,52,1455,40,"_props$rows"],[446,63,1455,40],[447,6,1456,4],[447,10,1456,10,"autoCapitalize"],[447,24,1456,24],[447,27,1456,27,"props"],[447,32,1456,32],[447,33,1456,33,"autoCapitalize"],[447,47,1456,47],[447,51,1456,51],[447,62,1456,62],[448,6,1457,4],[448,10,1457,10,"_accessibilityLabelledBy"],[448,34,1457,34],[448,38,1457,34,"_props$ariaLabelledb"],[448,58,1457,34],[448,61,1458,6,"props"],[448,66,1458,11],[448,86,1458,6,"props"],[448,91,1458,11],[448,92,1458,14],[448,109,1458,31],[448,110,1458,32],[448,122,1458,32,"_props$ariaLabelledb"],[448,142,1458,32],[448,145,1458,36,"props"],[448,150,1458,41],[448,170,1458,36,"props"],[448,175,1458,41],[448,176,1458,43,"accessibilityLabelledBy"],[448,199,1458,66],[449,6,1459,4],[449,10,1459,10,"placeholder"],[449,21,1459,21],[449,25,1459,21,"_props$placeholder"],[449,43,1459,21],[449,46,1459,24,"props"],[449,51,1459,29],[449,52,1459,30,"placeholder"],[449,63,1459,41],[449,75,1459,41,"_props$placeholder"],[449,93,1459,41],[449,96,1459,45],[449,98,1459,47],[450,6,1460,4],[450,10,1460,8,"children"],[450,18,1460,16],[450,21,1460,19,"props"],[450,26,1460,24],[450,27,1460,25,"children"],[450,35,1460,33],[451,6,1461,4],[451,10,1461,10,"childCount"],[451,20,1461,20],[451,23,1461,23,"React"],[451,28,1461,28],[451,29,1461,29,"Children"],[451,37,1461,37],[451,38,1461,38,"count"],[451,43,1461,43],[451,44,1461,44,"children"],[451,52,1461,52],[451,53,1461,53],[452,6,1462,4],[452,10,1462,4,"invariant"],[452,28,1462,13],[452,30,1463,6],[452,32,1463,8,"props"],[452,37,1463,13],[452,38,1463,14,"value"],[452,43,1463,19],[452,47,1463,23],[452,51,1463,27],[452,55,1463,31,"childCount"],[452,65,1463,41],[452,66,1463,42],[452,68,1464,6],[452,109,1465,4],[452,110,1465,5],[453,6,1466,4],[453,10,1466,8,"childCount"],[453,20,1466,18],[453,23,1466,21],[453,24,1466,22],[453,26,1466,24],[454,8,1467,6,"children"],[454,16,1467,14],[454,32,1467,17],[454,36,1467,17,"_jsxRuntime"],[454,47,1467,17],[454,48,1467,17,"jsx"],[454,51,1467,17],[454,53,1467,18,"_Text"],[454,58,1467,18],[454,59,1467,18,"default"],[454,66,1467,22],[455,10,1467,22,"children"],[455,18,1467,22],[455,20,1467,24,"children"],[456,8,1467,32],[456,9,1467,39],[456,10,1467,40],[457,6,1468,4],[458,6,1469,4],[459,6,1470,4],[459,10,1470,10,"colorProps"],[459,20,1470,20],[459,23,1470,23],[460,8,1471,6,"selectionColor"],[460,22,1471,20],[460,24,1471,6,"selectionColor"],[460,38,1471,20],[461,8,1472,6,"selectionHandleColor"],[461,28,1472,26],[461,30,1473,8,"selectionHandleColor"],[461,50,1473,28],[461,55,1473,33,"undefined"],[461,64,1473,42],[461,67,1474,12,"selectionColor"],[461,81,1474,26],[461,84,1475,12,"selectionHandleColor"],[461,104,1475,32],[462,8,1476,6,"cursorColor"],[462,19,1476,17],[462,21,1476,19,"cursorColor"],[462,32,1476,30],[462,37,1476,35,"undefined"],[462,46,1476,44],[462,49,1476,47,"selectionColor"],[462,63,1476,61],[462,66,1476,64,"cursorColor"],[463,6,1477,4],[463,7,1477,5],[464,6,1478,4,"textInput"],[464,15,1478,13],[465,6,1478,13],[466,6,1479,6],[467,0,1480,0],[468,6,1481,6],[469,0,1482,0],[470,0,1483,0],[471,6,1484,6],[472,0,1485,0],[473,0,1486,0],[474,6,1487,6],[474,10,1487,6,"_jsxRuntime"],[474,21,1487,6],[474,22,1487,6,"jsx"],[474,25,1487,6],[474,27,1487,7,"AndroidTextInput"],[475,6,1488,8],[476,6,1488,8],[476,8,1488,8,"Object"],[476,14,1488,8],[476,15,1488,8,"assign"],[476,21,1488,8],[477,8,1489,8,"ref"],[477,11,1489,11],[477,13,1489,13,"ref"],[478,6,1489,17],[478,9,1490,12,"otherProps"],[478,19,1490,22],[478,21,1491,12,"colorProps"],[478,31,1491,22],[478,33,1492,12,"eventHandlers"],[478,46,1492,25],[479,8,1493,8,"accessibilityState"],[479,26,1493,26],[479,28,1493,28,"_accessibilityState"],[479,47,1493,48],[480,8,1494,8,"accessibilityLabelledBy"],[480,31,1494,31],[480,33,1494,33,"_accessibilityLabelledBy"],[480,57,1494,58],[481,8,1495,8,"accessible"],[481,18,1495,18],[481,20,1495,20,"accessible"],[481,30,1495,31],[482,8,1496,8,"autoCapitalize"],[482,22,1496,22],[482,24,1496,24,"autoCapitalize"],[482,38,1496,39],[483,8,1497,8,"submitBehavior"],[483,22,1497,22],[483,24,1497,24,"submitBehavior"],[483,38,1497,39],[484,8,1498,8,"caretHidden"],[484,19,1498,19],[484,21,1498,21,"caretHidden"],[484,32,1498,33],[485,8,1499,8,"children"],[485,16,1499,16],[485,18,1499,18,"children"],[485,26,1499,27],[486,8,1500,8,"disableFullscreenUI"],[486,27,1500,27],[486,29,1500,29,"props"],[486,34,1500,34],[486,35,1500,35,"disableFullscreenUI"],[486,54,1500,55],[487,8,1501,8,"focusable"],[487,17,1501,17],[487,19,1501,19,"tabIndex"],[487,27,1501,27],[487,32,1501,32,"undefined"],[487,41,1501,41],[487,44,1501,44],[487,45,1501,45,"tabIndex"],[487,53,1501,53],[487,56,1501,56,"focusable"],[487,65,1501,66],[488,8,1502,8,"mostRecentEventCount"],[488,28,1502,28],[488,30,1502,30,"mostRecentEventCount"],[488,50,1502,51],[489,8,1503,8,"nativeID"],[489,16,1503,16],[489,18,1503,18,"id"],[489,20,1503,20],[489,31,1503,18,"id"],[489,33,1503,20],[489,36,1503,24,"props"],[489,41,1503,29],[489,42,1503,30,"nativeID"],[489,50,1503,39],[490,8,1504,8,"numberOfLines"],[490,21,1504,21],[490,24,1504,21,"_props$rows"],[490,35,1504,21],[490,38,1504,23,"props"],[490,43,1504,28],[490,44,1504,29,"rows"],[490,48,1504,33],[490,60,1504,33,"_props$rows"],[490,71,1504,33],[490,74,1504,37,"props"],[490,79,1504,42],[490,80,1504,43,"numberOfLines"],[490,93,1504,57],[491,8,1505,8,"onBlur"],[491,14,1505,14],[491,16,1505,16,"_onBlur"],[491,23,1505,24],[492,8,1506,8,"onChange"],[492,16,1506,16],[492,18,1506,18,"_onChange"],[492,27,1506,28],[493,8,1507,8,"onFocus"],[493,15,1507,15],[493,17,1507,17,"_onFocus"],[494,8,1508,8],[495,0,1509,0],[496,0,1510,0],[497,8,1511,8],[498,0,1512,0],[499,0,1513,0],[499,26,1511,8],[500,8,1514,8,"onScroll"],[500,16,1514,16],[500,18,1514,18,"_onScroll"],[500,27,1514,28],[501,8,1515,8,"onSelectionChange"],[501,25,1515,25],[501,27,1515,27,"_onSelectionChange"],[501,45,1515,46],[502,8,1516,8,"placeholder"],[502,19,1516,19],[502,21,1516,21,"placeholder"],[502,32,1516,33],[503,8,1517,8,"style"],[503,13,1517,13],[503,15,1517,15,"style"],[503,20,1517,21],[504,8,1518,8,"text"],[504,12,1518,12],[504,14,1518,14,"text"],[504,18,1518,19],[505,8,1519,8,"textBreakStrategy"],[505,25,1519,25],[505,27,1519,27,"props"],[505,32,1519,32],[505,33,1519,33,"textBreakStrategy"],[506,6,1519,51],[506,8,1520,7],[506,9,1521,5],[507,4,1522,2],[508,4,1523,2],[508,24,1524,4],[508,28,1524,4,"_jsxRuntime"],[508,39,1524,4],[508,40,1524,4,"jsx"],[508,43,1524,4],[508,45,1524,5,"_TextAncestor"],[508,58,1524,5],[508,59,1524,5,"default"],[508,66,1524,17],[508,67,1524,18,"Provider"],[508,75,1524,26],[509,6,1524,27,"value"],[509,11,1524,32],[509,13,1524,34],[509,17,1524,39],[510,6,1524,39,"children"],[510,14,1524,39],[510,16,1524,41,"textInput"],[511,4,1524,50],[511,5,1524,74],[511,6,1524,75],[512,2,1526,0],[513,2,1528,0],[513,6,1528,6,"enterKeyHintToReturnTypeMap"],[513,33,1528,33],[513,36,1528,36],[514,4,1529,2,"enter"],[514,9,1529,7],[514,11,1529,9],[514,20,1529,18],[515,4,1530,2,"done"],[515,8,1530,6],[515,10,1530,8],[515,16,1530,14],[516,4,1531,2,"go"],[516,6,1531,4],[516,8,1531,6],[516,12,1531,10],[517,4,1532,2,"next"],[517,8,1532,6],[517,10,1532,8],[517,16,1532,14],[518,4,1533,2,"previous"],[518,12,1533,10],[518,14,1533,12],[518,24,1533,22],[519,4,1534,2,"search"],[519,10,1534,8],[519,12,1534,10],[519,20,1534,18],[520,4,1535,2,"send"],[520,8,1535,6],[520,10,1535,8],[521,2,1536,0],[521,3,1536,1],[522,2,1538,0],[522,6,1538,6,"inputModeToKeyboardTypeMap"],[522,32,1538,32],[522,35,1538,35],[523,4,1539,2,"none"],[523,8,1539,6],[523,10,1539,8],[523,19,1539,17],[524,4,1540,2,"text"],[524,8,1540,6],[524,10,1540,8],[524,19,1540,17],[525,4,1541,2,"decimal"],[525,11,1541,9],[525,13,1541,11],[525,26,1541,24],[526,4,1542,2,"numeric"],[526,11,1542,9],[526,13,1542,11],[526,25,1542,23],[527,4,1543,2,"tel"],[527,7,1543,5],[527,9,1543,7],[527,20,1543,18],[528,4,1544,2,"search"],[528,10,1544,8],[528,12,1544,10,"Platform"],[528,29,1544,18],[528,30,1544,19,"OS"],[528,32,1544,21],[528,37,1544,26],[528,42,1544,31],[528,45,1544,34],[528,57,1544,46],[528,60,1544,49],[528,69,1544,58],[529,4,1545,2,"email"],[529,9,1545,7],[529,11,1545,9],[529,26,1545,24],[530,4,1546,2,"url"],[530,7,1546,5],[530,9,1546,7],[531,2,1547,0],[531,3,1547,1],[533,2,1549,0],[534,2,1550,0],[534,6,1550,6,"autoCompleteWebToAutoCompleteAndroidMap"],[534,45,1550,45],[534,48,1550,48],[535,4,1551,2],[535,19,1551,17],[535,21,1551,19],[535,44,1551,42],[536,4,1552,2],[536,19,1552,17],[536,21,1552,19],[536,46,1552,44],[537,4,1553,2,"bday"],[537,8,1553,6],[537,10,1553,8],[537,26,1553,24],[538,4,1554,2],[538,14,1554,12],[538,16,1554,14],[538,31,1554,29],[539,4,1555,2],[539,16,1555,14],[539,18,1555,16],[539,35,1555,33],[540,4,1556,2],[540,15,1556,13],[540,17,1556,15],[540,33,1556,31],[541,4,1557,2],[541,12,1557,10],[541,14,1557,12],[541,22,1557,20],[542,4,1558,2],[542,12,1558,10],[542,14,1558,12],[542,22,1558,20],[543,4,1559,2],[543,18,1559,16],[543,20,1559,18],[543,34,1559,32],[544,4,1560,2],[544,17,1560,15],[544,19,1560,17],[544,32,1560,30],[545,4,1561,2],[545,15,1561,13],[545,17,1561,15],[545,28,1561,26],[546,4,1562,2,"country"],[546,11,1562,9],[546,13,1562,11],[546,37,1562,35],[547,4,1563,2],[547,22,1563,20],[547,24,1563,22],[547,34,1563,32],[548,4,1564,2,"email"],[548,9,1564,7],[548,11,1564,9],[548,18,1564,16],[549,4,1565,2],[549,22,1565,20],[549,24,1565,22],[549,37,1565,35],[550,4,1566,2],[550,22,1566,20],[550,24,1566,22],[550,37,1566,35],[551,4,1567,2,"name"],[551,8,1567,6],[551,10,1567,8],[551,16,1567,14],[552,4,1568,2],[552,21,1568,19],[552,23,1568,21],[552,36,1568,34],[553,4,1569,2],[553,17,1569,15],[553,19,1569,17],[553,32,1569,30],[554,4,1570,2],[554,16,1570,14],[554,18,1570,16],[554,30,1570,28],[555,4,1571,2],[555,18,1571,16],[555,20,1571,18],[555,34,1571,32],[556,4,1572,2,"off"],[556,7,1572,5],[556,9,1572,7],[556,14,1572,12],[557,4,1573,2],[557,19,1573,17],[557,21,1573,19],[557,30,1573,28],[558,4,1574,2],[558,17,1574,15],[558,19,1574,17],[558,32,1574,30],[559,4,1575,2,"sex"],[559,7,1575,5],[559,9,1575,7],[559,17,1575,15],[560,4,1576,2],[560,20,1576,18],[560,22,1576,20],[560,38,1576,36],[561,4,1577,2,"tel"],[561,7,1577,5],[561,9,1577,7],[561,14,1577,12],[562,4,1578,2],[562,22,1578,20],[562,24,1578,22],[562,42,1578,40],[563,4,1579,2],[563,18,1579,16],[563,20,1579,18],[563,34,1579,32],[564,4,1580,2,"username"],[564,12,1580,10],[564,14,1580,12],[565,2,1581,0],[565,3,1581,1],[567,2,1583,0],[568,2,1584,0],[568,6,1584,6,"autoCompleteWebToTextContentTypeMap"],[568,41,1584,41],[568,44,1584,44],[569,4,1585,2],[569,19,1585,17],[569,21,1585,19],[569,41,1585,39],[570,4,1586,2],[570,19,1586,17],[570,21,1586,19],[570,41,1586,39],[571,4,1587,2,"bday"],[571,8,1587,6],[571,10,1587,8],[571,21,1587,19],[572,4,1588,2],[572,14,1588,12],[572,16,1588,14],[572,30,1588,28],[573,4,1589,2],[573,16,1589,14],[573,18,1589,16],[573,34,1589,32],[574,4,1590,2],[574,15,1590,13],[574,17,1590,15],[574,32,1590,30],[575,4,1591,2],[575,12,1591,10],[575,14,1591,12],[575,38,1591,36],[576,4,1592,2],[576,18,1592,16],[576,20,1592,18],[576,47,1592,45],[577,4,1593,2],[577,17,1593,15],[577,19,1593,17],[577,45,1593,43],[578,4,1594,2],[578,12,1594,10],[578,14,1594,12],[578,36,1594,34],[579,4,1595,2],[579,19,1595,17],[579,21,1595,19],[579,42,1595,40],[580,4,1596,2],[580,24,1596,22],[580,26,1596,24],[580,48,1596,46],[581,4,1597,2],[581,20,1597,18],[581,22,1597,20],[581,44,1597,42],[582,4,1598,2],[582,13,1598,11],[582,15,1598,13],[582,31,1598,29],[583,4,1599,2],[583,15,1599,13],[583,17,1599,15],[583,35,1599,33],[584,4,1600,2],[584,13,1600,11],[584,15,1600,13],[584,31,1600,29],[585,4,1601,2],[585,22,1601,20],[585,24,1601,22],[585,34,1601,32],[586,4,1602,2,"country"],[586,11,1602,9],[586,13,1602,11],[586,26,1602,24],[587,4,1603,2,"email"],[587,9,1603,7],[587,11,1603,9],[587,25,1603,23],[588,4,1604,2,"name"],[588,8,1604,6],[588,10,1604,8],[588,16,1604,14],[589,4,1605,2],[589,21,1605,19],[589,23,1605,21],[589,35,1605,33],[590,4,1606,2],[590,17,1606,15],[590,19,1606,17],[590,31,1606,29],[591,4,1607,2],[591,16,1607,14],[591,18,1607,16],[591,29,1607,27],[592,4,1608,2,"nickname"],[592,12,1608,10],[592,14,1608,12],[592,24,1608,22],[593,4,1609,2],[593,22,1609,20],[593,24,1609,22],[593,36,1609,34],[594,4,1610,2],[594,22,1610,20],[594,24,1610,22],[594,36,1610,34],[595,4,1611,2],[595,18,1611,16],[595,20,1611,18],[595,33,1611,31],[596,4,1612,2,"off"],[596,7,1612,5],[596,9,1612,7],[596,15,1612,13],[597,4,1613,2],[597,19,1613,17],[597,21,1613,19],[597,34,1613,32],[598,4,1614,2,"organization"],[598,16,1614,14],[598,18,1614,16],[598,36,1614,34],[599,4,1615,2],[599,24,1615,22],[599,26,1615,24],[599,36,1615,34],[600,4,1616,2],[600,17,1616,15],[600,19,1616,17],[600,31,1616,29],[601,4,1617,2],[601,20,1617,18],[601,22,1617,20],[601,41,1617,39],[602,4,1618,2,"tel"],[602,7,1618,5],[602,9,1618,7],[602,26,1618,24],[603,4,1619,2,"url"],[603,7,1619,5],[603,9,1619,7],[603,14,1619,12],[604,4,1620,2,"username"],[604,12,1620,10],[604,14,1620,12],[605,2,1621,0],[605,3,1621,1],[606,2,1623,0],[606,6,1623,6,"ExportedForwardRef"],[606,24,1627,1],[606,27,1627,4,"React"],[606,32,1627,9],[606,33,1627,10,"forwardRef"],[606,43,1627,20],[606,44,1627,21],[606,53,1627,30,"TextInput"],[606,62,1627,39,"TextInput"],[606,63,1627,39,"_ref2"],[606,68,1627,39],[606,70,1643,2,"forwardedRef"],[606,82,1643,49],[606,84,1644,2],[607,4,1644,2],[607,8,1644,2,"_autoCompleteWebToAut"],[607,29,1644,2],[608,4,1644,2],[608,8,1644,2,"_ref2$allowFontScalin"],[608,29,1644,2],[608,32,1644,2,"_ref2"],[608,37,1644,2],[608,38,1629,4,"allowFontScaling"],[608,54,1629,20],[609,6,1629,4,"allowFontScaling"],[609,22,1629,20],[609,25,1629,20,"_ref2$allowFontScalin"],[609,46,1629,20],[609,60,1629,23],[609,64,1629,27],[609,67,1629,27,"_ref2$allowFontScalin"],[609,88,1629,27],[610,6,1629,27,"_ref2$rejectResponder"],[610,27,1629,27],[610,30,1629,27,"_ref2"],[610,35,1629,27],[610,36,1630,4,"rejectResponderTermination"],[610,62,1630,30],[611,6,1630,4,"rejectResponderTermination"],[611,32,1630,30],[611,35,1630,30,"_ref2$rejectResponder"],[611,56,1630,30],[611,70,1630,33],[611,74,1630,37],[611,77,1630,37,"_ref2$rejectResponder"],[611,98,1630,37],[612,6,1630,37,"_ref2$underlineColorA"],[612,27,1630,37],[612,30,1630,37,"_ref2"],[612,35,1630,37],[612,36,1631,4,"underlineColorAndroid"],[612,57,1631,25],[613,6,1631,4,"underlineColorAndroid"],[613,27,1631,25],[613,30,1631,25,"_ref2$underlineColorA"],[613,51,1631,25],[613,65,1631,28],[613,78,1631,41],[613,81,1631,41,"_ref2$underlineColorA"],[613,102,1631,41],[614,6,1632,4,"autoComplete"],[614,18,1632,16],[614,21,1632,16,"_ref2"],[614,26,1632,16],[614,27,1632,4,"autoComplete"],[614,39,1632,16],[615,6,1633,4,"textContentType"],[615,21,1633,19],[615,24,1633,19,"_ref2"],[615,29,1633,19],[615,30,1633,4,"textContentType"],[615,45,1633,19],[616,6,1634,4,"readOnly"],[616,14,1634,12],[616,17,1634,12,"_ref2"],[616,22,1634,12],[616,23,1634,4,"readOnly"],[616,31,1634,12],[617,6,1635,4,"editable"],[617,14,1635,12],[617,17,1635,12,"_ref2"],[617,22,1635,12],[617,23,1635,4,"editable"],[617,31,1635,12],[618,6,1636,4,"enterKeyHint"],[618,18,1636,16],[618,21,1636,16,"_ref2"],[618,26,1636,16],[618,27,1636,4,"enterKeyHint"],[618,39,1636,16],[619,6,1637,4,"returnKeyType"],[619,19,1637,17],[619,22,1637,17,"_ref2"],[619,27,1637,17],[619,28,1637,4,"returnKeyType"],[619,41,1637,17],[620,6,1638,4,"inputMode"],[620,15,1638,13],[620,18,1638,13,"_ref2"],[620,23,1638,13],[620,24,1638,4,"inputMode"],[620,33,1638,13],[621,6,1639,4,"showSoftInputOnFocus"],[621,26,1639,24],[621,29,1639,24,"_ref2"],[621,34,1639,24],[621,35,1639,4,"showSoftInputOnFocus"],[621,55,1639,24],[622,6,1640,4,"keyboardType"],[622,18,1640,16],[622,21,1640,16,"_ref2"],[622,26,1640,16],[622,27,1640,4,"keyboardType"],[622,39,1640,16],[623,6,1641,7,"restProps"],[623,15,1641,16],[623,22,1641,16,"_objectWithoutProperties2"],[623,47,1641,16],[623,48,1641,16,"default"],[623,55,1641,16],[623,57,1641,16,"_ref2"],[623,62,1641,16],[623,64,1641,16,"_excluded3"],[623,74,1641,16],[624,4,1645,2],[625,4,1646,2],[625,8,1646,6,"style"],[625,13,1646,11],[625,16,1646,14],[625,20,1646,14,"flattenStyle"],[625,41,1646,26],[625,43,1646,27,"restProps"],[625,52,1646,36],[625,53,1646,37,"style"],[625,58,1646,42],[625,59,1646,43],[626,4,1648,2],[626,8,1648,6],[626,9,1648,6,"style"],[626,14,1648,11],[626,34,1648,6,"style"],[626,39,1648,11],[626,40,1648,13,"verticalAlign"],[626,53,1648,26],[626,58,1648,30],[626,62,1648,34],[626,64,1648,36],[627,6,1649,4],[628,6,1650,4],[629,6,1651,4,"style"],[629,11,1651,9],[629,12,1651,10,"textAlignVertical"],[629,29,1651,27],[630,6,1652,6],[631,6,1653,6,"verticalAlignToTextAlignVerticalMap"],[631,41,1653,41],[631,42,1653,42,"style"],[631,47,1653,47],[631,48,1653,48,"verticalAlign"],[631,61,1653,61],[631,62,1653,62],[632,6,1654,4],[633,6,1655,4],[634,6,1656,4],[634,13,1656,11,"style"],[634,18,1656,16],[634,19,1656,17,"verticalAlign"],[634,32,1656,30],[635,4,1657,2],[636,4,1659,2],[636,24,1660,4],[636,28,1660,4,"_jsxRuntime"],[636,39,1660,4],[636,40,1660,4,"jsx"],[636,43,1660,4],[636,45,1660,5,"InternalTextInput"],[636,62,1660,22],[636,64,1660,22,"Object"],[636,70,1660,22],[636,71,1660,22,"assign"],[636,77,1660,22],[637,6,1661,6,"allowFontScaling"],[637,22,1661,22],[637,24,1661,24,"allowFontScaling"],[637,40,1661,41],[638,6,1662,6,"rejectResponderTermination"],[638,32,1662,32],[638,34,1662,34,"rejectResponderTermination"],[638,60,1662,61],[639,6,1663,6,"underlineColorAndroid"],[639,27,1663,27],[639,29,1663,29,"underlineColorAndroid"],[639,50,1663,51],[640,6,1664,6,"editable"],[640,14,1664,14],[640,16,1664,16,"readOnly"],[640,24,1664,24],[640,29,1664,29,"undefined"],[640,38,1664,38],[640,41,1664,41],[640,42,1664,42,"readOnly"],[640,50,1664,50],[640,53,1664,53,"editable"],[640,61,1664,62],[641,6,1665,6,"returnKeyType"],[641,19,1665,19],[641,21,1666,8,"enterKeyHint"],[641,33,1666,20],[641,36,1666,23,"enterKeyHintToReturnTypeMap"],[641,63,1666,50],[641,64,1666,51,"enterKeyHint"],[641,76,1666,63],[641,77,1666,64],[641,80,1666,67,"returnKeyType"],[641,93,1667,7],[642,6,1668,6,"keyboardType"],[642,18,1668,18],[642,20,1669,8,"inputMode"],[642,29,1669,17],[642,32,1669,20,"inputModeToKeyboardTypeMap"],[642,58,1669,46],[642,59,1669,47,"inputMode"],[642,68,1669,56],[642,69,1669,57],[642,72,1669,60,"keyboardType"],[642,84,1670,7],[643,6,1671,6,"showSoftInputOnFocus"],[643,26,1671,26],[643,28,1672,8,"inputMode"],[643,37,1672,17],[643,41,1672,21],[643,45,1672,25],[643,48,1672,28,"showSoftInputOnFocus"],[643,68,1672,48],[643,71,1672,51,"inputMode"],[643,80,1672,60],[643,85,1672,65],[643,91,1673,7],[644,6,1674,6,"autoComplete"],[644,18,1674,18],[644,20,1675,8,"Platform"],[644,37,1675,16],[644,38,1675,17,"OS"],[644,40,1675,19],[644,45,1675,24],[644,54,1675,33],[644,57,1676,12],[645,6,1677,12],[646,6,1677,12],[646,7,1677,12,"_autoCompleteWebToAut"],[646,28,1677,12],[646,31,1678,12,"autoCompleteWebToAutoCompleteAndroidMap"],[646,70,1678,51],[646,71,1678,52,"autoComplete"],[646,83,1678,64],[646,84,1678,65],[646,96,1678,65,"_autoCompleteWebToAut"],[646,117,1678,65],[646,120,1679,12,"autoComplete"],[646,132,1679,24],[646,135,1680,12,"undefined"],[646,144,1681,7],[647,6,1682,6,"textContentType"],[647,21,1682,21],[647,23,1683,8,"textContentType"],[647,38,1683,23],[647,42,1683,27],[647,46,1683,31],[647,49,1684,12,"textContentType"],[647,64,1684,27],[647,67,1685,12,"Platform"],[647,84,1685,20],[647,85,1685,21,"OS"],[647,87,1685,23],[647,92,1685,28],[647,97,1685,33],[647,101,1686,14,"autoComplete"],[647,113,1686,26],[647,117,1687,14,"autoComplete"],[647,129,1687,26],[647,133,1687,30,"autoCompleteWebToTextContentTypeMap"],[647,168,1687,65],[648,6,1688,14],[649,6,1689,14],[650,6,1690,14,"autoCompleteWebToTextContentTypeMap"],[650,41,1690,49],[650,42,1690,50,"autoComplete"],[650,54,1690,62],[650,55,1690,63],[650,58,1691,14,"textContentType"],[651,4,1692,7],[651,7,1693,10,"restProps"],[651,16,1693,19],[652,6,1694,6,"forwardedRef"],[652,18,1694,18],[652,20,1694,20,"forwardedRef"],[652,32,1694,33],[653,6,1695,6,"style"],[653,11,1695,11],[653,13,1695,13,"style"],[654,4,1695,19],[654,6,1696,5],[654,7,1696,6],[655,2,1698,0],[655,3,1698,1],[655,4,1698,2],[656,2,1700,0,"ExportedForwardRef"],[656,20,1700,18],[656,21,1700,19,"displayName"],[656,32,1700,30],[656,35,1700,33],[656,46,1700,44],[658,2,1702,0],[659,2,1703,0,"ExportedForwardRef"],[659,20,1703,18],[659,21,1703,19,"State"],[659,26,1703,24],[659,29,1703,27],[660,4,1704,2,"currentlyFocusedInput"],[660,25,1704,23],[660,27,1704,25,"TextInputState"],[660,50,1704,39],[660,51,1704,40,"currentlyFocusedInput"],[660,72,1704,61],[661,4,1706,2,"currentlyFocusedField"],[661,25,1706,23],[661,27,1706,25,"TextInputState"],[661,50,1706,39],[661,51,1706,40,"currentlyFocusedField"],[661,72,1706,61],[662,4,1707,2,"focusTextInput"],[662,18,1707,16],[662,20,1707,18,"TextInputState"],[662,43,1707,32],[662,44,1707,33,"focusTextInput"],[662,58,1707,47],[663,4,1708,2,"blurTextInput"],[663,17,1708,15],[663,19,1708,17,"TextInputState"],[663,42,1708,31],[663,43,1708,32,"blurTextInput"],[664,2,1709,0],[664,3,1709,1],[665,2,1720,0],[665,6,1720,6,"styles"],[665,12,1720,12],[665,15,1720,15,"StyleSheet"],[665,34,1720,25],[665,35,1720,26,"create"],[665,41,1720,32],[665,42,1720,33],[666,4,1721,2,"multilineDefault"],[666,20,1721,18],[666,22,1721,20],[667,6,1722,4],[668,6,1723,4],[669,6,1724,4],[670,6,1725,4,"paddingTop"],[670,16,1725,14],[670,18,1725,16],[671,4,1726,2],[672,2,1727,0],[672,3,1727,1],[672,4,1727,2],[673,2,1729,0],[673,6,1729,6,"verticalAlignToTextAlignVerticalMap"],[673,41,1729,41],[673,44,1729,44],[674,4,1730,2,"auto"],[674,8,1730,6],[674,10,1730,8],[674,16,1730,14],[675,4,1731,2,"top"],[675,7,1731,5],[675,9,1731,7],[675,14,1731,12],[676,4,1732,2,"bottom"],[676,10,1732,8],[676,12,1732,10],[676,20,1732,18],[677,4,1733,2,"middle"],[677,10,1733,8],[677,12,1733,10],[678,2,1734,0],[678,3,1734,1],[680,2,1736,0],[681,2,1737,0,"module"],[681,8,1737,6],[681,9,1737,7,"exports"],[681,16,1737,14],[681,19,1737,19,"ExportedForwardRef"],[681,37,1737,59],[682,0,1737,60],[682,3]],"functionMap":{"names":["<global>","emptyFunctionThatReturnsTrue","InternalTextInput","useLayoutEffect$argument_0","<anonymous>","setLocalRef","Object.assign$argument_1.clear","Object.assign$argument_1.isFocused","Object.assign$argument_1.getNativeRef","Object.assign$argument_1.setSelection","_onChange","_onSelectionChange","_onFocus","_onBlur","_onScroll","React.useMemo$argument_0","onPress","TextInput"],"mappings":"AAA;qCC+7B,UD;AEiH;kBC4D;GD+B;kBCY;aCM;ODM;GDE;IGG;UC4B;WDU;UEE;WFE;UGC;WHE;UIC;WJU;KHG;oBQM;GRiB;6BSE;GTa;mBUE;GVK;kBWE;GXK;oBYE;GZE;Ia2C;eCE;ODO;MbI;CFkK;qBiBqG;CjBuE"}},"type":"js/module"}]}