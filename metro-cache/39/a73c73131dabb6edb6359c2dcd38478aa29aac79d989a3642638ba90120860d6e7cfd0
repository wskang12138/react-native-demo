{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n      result = Array(set.size);\n    set.forEach(function (value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n  module.exports = setToArray;\n});","lineCount":18,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,2,8,0],[9,11,8,9,"setToArray"],[9,21,8,19,"setToArray"],[9,22,8,20,"set"],[9,25,8,23],[9,27,8,25],[10,4,9,2],[10,8,9,6,"index"],[10,13,9,11],[10,16,9,14],[10,17,9,15],[10,18,9,16],[11,6,10,6,"result"],[11,12,10,12],[11,15,10,15,"Array"],[11,20,10,20],[11,21,10,21,"set"],[11,24,10,24],[11,25,10,25,"size"],[11,29,10,29],[11,30,10,30],[12,4,12,2,"set"],[12,7,12,5],[12,8,12,6,"forEach"],[12,15,12,13],[12,16,12,14],[12,26,12,23,"value"],[12,31,12,28],[12,33,12,30],[13,6,13,4,"result"],[13,12,13,10],[13,13,13,11],[13,15,13,13,"index"],[13,20,13,18],[13,21,13,19],[13,24,13,22,"value"],[13,29,13,27],[14,4,14,2],[14,5,14,3],[14,6,14,4],[15,4,15,2],[15,11,15,9,"result"],[15,17,15,15],[16,2,16,0],[17,2,18,0,"module"],[17,8,18,6],[17,9,18,7,"exports"],[17,16,18,14],[17,19,18,17,"setToArray"],[17,29,18,27],[18,0,18,28],[18,3]],"functionMap":{"names":["<global>","setToArray","set.forEach$argument_0"],"mappings":"AAA;ACO;cCI;GDE;CDE"}},"type":"js/module"}]}