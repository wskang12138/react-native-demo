{"dependencies":[{"name":"./_baseSortedUniq","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":21,"index":21},"end":{"line":1,"column":49,"index":49}}],"key":"U7wPi1Ufygjmy/6fdZkvF7JYRUQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * This method is like `_.uniq` except that it's designed and optimized\n   * for sorted arrays.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @returns {Array} Returns the new duplicate free array.\n   * @example\n   *\n   * _.sortedUniq([1, 1, 2]);\n   * // => [1, 2]\n   */\n  function sortedUniq(array) {\n    return array && array.length ? _$$_REQUIRE(_dependencyMap[0], \"./_baseSortedUniq\")(array) : [];\n  }\n  module.exports = sortedUniq;\n});","lineCount":21,"map":[[2,2,3,0],[3,0,4,0],[4,0,5,0],[5,0,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,0,11,0],[11,0,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,0,17,0],[17,2,18,0],[17,11,18,9,"sortedUniq"],[17,21,18,19,"sortedUniq"],[17,22,18,20,"array"],[17,27,18,25],[17,29,18,27],[18,4,19,2],[18,11,19,10,"array"],[18,16,19,15],[18,20,19,19,"array"],[18,25,19,24],[18,26,19,25,"length"],[18,32,19,31],[18,35,20,6,"_$$_REQUIRE"],[18,46,20,6],[18,47,20,6,"_dependencyMap"],[18,61,20,6],[18,87,20,21,"array"],[18,92,20,26],[18,93,20,27],[18,96,21,6],[18,98,21,8],[19,2,22,0],[20,2,24,0,"module"],[20,8,24,6],[20,9,24,7,"exports"],[20,16,24,14],[20,19,24,17,"sortedUniq"],[20,29,24,27],[21,0,24,28],[21,3]],"functionMap":{"names":["<global>","sortedUniq"],"mappings":"AAA;ACiB;CDI"}},"type":"js/module"}]}