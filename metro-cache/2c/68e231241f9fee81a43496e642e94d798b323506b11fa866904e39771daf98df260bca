{"dependencies":[{"name":"./_compareAscending","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":23,"index":23},"end":{"line":1,"column":53,"index":53}}],"key":"Q69e44V/NhNnv0x57to1nb8X7O4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Used by `_.orderBy` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n   * of corresponding values.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]|string[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n    while (++index < length) {\n      var result = _$$_REQUIRE(_dependencyMap[0], \"./_compareAscending\")(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * (order == 'desc' ? -1 : 1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n  module.exports = compareMultiple;\n});","lineCount":42,"map":[[2,2,3,0],[3,0,4,0],[4,0,5,0],[5,0,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,0,11,0],[11,0,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,2,17,0],[16,11,17,9,"compareMultiple"],[16,26,17,24,"compareMultiple"],[16,27,17,25,"object"],[16,33,17,31],[16,35,17,33,"other"],[16,40,17,38],[16,42,17,40,"orders"],[16,48,17,46],[16,50,17,48],[17,4,18,2],[17,8,18,6,"index"],[17,13,18,11],[17,16,18,14],[17,17,18,15],[17,18,18,16],[18,6,19,6,"objCriteria"],[18,17,19,17],[18,20,19,20,"object"],[18,26,19,26],[18,27,19,27,"criteria"],[18,35,19,35],[19,6,20,6,"othCriteria"],[19,17,20,17],[19,20,20,20,"other"],[19,25,20,25],[19,26,20,26,"criteria"],[19,34,20,34],[20,6,21,6,"length"],[20,12,21,12],[20,15,21,15,"objCriteria"],[20,26,21,26],[20,27,21,27,"length"],[20,33,21,33],[21,6,22,6,"ordersLength"],[21,18,22,18],[21,21,22,21,"orders"],[21,27,22,27],[21,28,22,28,"length"],[21,34,22,34],[22,4,24,2],[22,11,24,9],[22,13,24,11,"index"],[22,18,24,16],[22,21,24,19,"length"],[22,27,24,25],[22,29,24,27],[23,6,25,4],[23,10,25,8,"result"],[23,16,25,14],[23,19,25,17,"_$$_REQUIRE"],[23,30,25,17],[23,31,25,17,"_dependencyMap"],[23,45,25,17],[23,73,25,34,"objCriteria"],[23,84,25,45],[23,85,25,46,"index"],[23,90,25,51],[23,91,25,52],[23,93,25,54,"othCriteria"],[23,104,25,65],[23,105,25,66,"index"],[23,110,25,71],[23,111,25,72],[23,112,25,73],[24,6,26,4],[24,10,26,8,"result"],[24,16,26,14],[24,18,26,16],[25,8,27,6],[25,12,27,10,"index"],[25,17,27,15],[25,21,27,19,"ordersLength"],[25,33,27,31],[25,35,27,33],[26,10,28,8],[26,17,28,15,"result"],[26,23,28,21],[27,8,29,6],[28,8,30,6],[28,12,30,10,"order"],[28,17,30,15],[28,20,30,18,"orders"],[28,26,30,24],[28,27,30,25,"index"],[28,32,30,30],[28,33,30,31],[29,8,31,6],[29,15,31,13,"result"],[29,21,31,19],[29,25,31,23,"order"],[29,30,31,28],[29,34,31,32],[29,40,31,38],[29,43,31,41],[29,44,31,42],[29,45,31,43],[29,48,31,46],[29,49,31,47],[29,50,31,48],[30,6,32,4],[31,4,33,2],[32,4,34,2],[33,4,35,2],[34,4,36,2],[35,4,37,2],[36,4,38,2],[37,4,39,2],[38,4,40,2],[39,4,41,2],[39,11,41,9,"object"],[39,17,41,15],[39,18,41,16,"index"],[39,23,41,21],[39,26,41,24,"other"],[39,31,41,29],[39,32,41,30,"index"],[39,37,41,35],[40,2,42,0],[41,2,44,0,"module"],[41,8,44,6],[41,9,44,7,"exports"],[41,16,44,14],[41,19,44,17,"compareMultiple"],[41,34,44,32],[42,0,44,33],[42,3]],"functionMap":{"names":["<global>","compareMultiple"],"mappings":"AAA;ACgB;CDyB"}},"type":"js/module"}]}