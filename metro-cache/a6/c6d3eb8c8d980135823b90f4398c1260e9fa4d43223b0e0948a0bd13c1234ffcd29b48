{"dependencies":[{"name":"./_arrayMap","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"K7+2F490X26OupYB4z62Dg/n6xs="}},{"name":"./isArray","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":14,"index":349},"end":{"line":9,"column":34,"index":369}}],"key":"suKYU4KHwgjg+/68NmLz6Dx+930="}},{"name":"./_baseGet","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":14,"index":53},"end":{"line":2,"column":35,"index":74}}],"key":"wMLGTBM2ig5sHDQuE8HojNUGCF8="}},{"name":"./identity","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":15,"index":312},"end":{"line":8,"column":36,"index":333}}],"key":"QxCP2Zm6eVUQNxccJL3A0iWxQug="}},{"name":"./_baseUnary","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":16,"index":219},"end":{"line":6,"column":39,"index":242}}],"key":"bDExJlFk3pM4Aaz3pZZnpNoHtPE="}},{"name":"./_baseIteratee","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":19,"index":95},"end":{"line":3,"column":45,"index":121}}],"key":"08ZwospexQv1VDulFM7RgN4hI9Q="}},{"name":"./_baseMap","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":14,"index":137},"end":{"line":4,"column":35,"index":158}}],"key":"OaK3/R4eeozcp1j6B90j8c4woWI="}},{"name":"./_baseSortBy","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":17,"index":177},"end":{"line":5,"column":41,"index":201}}],"key":"HgBN0dRbGO8iKHpDjUPFmExEGPk="}},{"name":"./_compareMultiple","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":22,"index":266},"end":{"line":7,"column":51,"index":295}}],"key":"7ajlk1RwrpoWF+LQ5zNgug7J8hM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * The base implementation of `_.orderBy` without param guards.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n   * @param {string[]} orders The sort orders of `iteratees`.\n   * @returns {Array} Returns the new sorted array.\n   */\n  function baseOrderBy(collection, iteratees, orders) {\n    if (iteratees.length) {\n      iteratees = _$$_REQUIRE(_dependencyMap[0], \"./_arrayMap\")(iteratees, function (iteratee) {\n        if (_$$_REQUIRE(_dependencyMap[1], \"./isArray\")(iteratee)) {\n          return function (value) {\n            return _$$_REQUIRE(_dependencyMap[2], \"./_baseGet\")(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n          };\n        }\n        return iteratee;\n      });\n    } else {\n      iteratees = [_$$_REQUIRE(_dependencyMap[3], \"./identity\")];\n    }\n    var index = -1;\n    iteratees = _$$_REQUIRE(_dependencyMap[0], \"./_arrayMap\")(iteratees, _$$_REQUIRE(_dependencyMap[4], \"./_baseUnary\")(_$$_REQUIRE(_dependencyMap[5], \"./_baseIteratee\")));\n    var result = _$$_REQUIRE(_dependencyMap[6], \"./_baseMap\")(collection, function (value, key, collection) {\n      var criteria = _$$_REQUIRE(_dependencyMap[0], \"./_arrayMap\")(iteratees, function (iteratee) {\n        return iteratee(value);\n      });\n      return {\n        'criteria': criteria,\n        'index': ++index,\n        'value': value\n      };\n    });\n    return _$$_REQUIRE(_dependencyMap[7], \"./_baseSortBy\")(result, function (object, other) {\n      return _$$_REQUIRE(_dependencyMap[8], \"./_compareMultiple\")(object, other, orders);\n    });\n  }\n  module.exports = baseOrderBy;\n});","lineCount":41,"map":[[2,2,11,0],[3,0,12,0],[4,0,13,0],[5,0,14,0],[6,0,15,0],[7,0,16,0],[8,0,17,0],[9,0,18,0],[10,0,19,0],[11,2,20,0],[11,11,20,9,"baseOrderBy"],[11,22,20,20,"baseOrderBy"],[11,23,20,21,"collection"],[11,33,20,31],[11,35,20,33,"iteratees"],[11,44,20,42],[11,46,20,44,"orders"],[11,52,20,50],[11,54,20,52],[12,4,21,2],[12,8,21,6,"iteratees"],[12,17,21,15],[12,18,21,16,"length"],[12,24,21,22],[12,26,21,24],[13,6,22,4,"iteratees"],[13,15,22,13],[13,18,22,16,"_$$_REQUIRE"],[13,29,22,16],[13,30,22,16,"_dependencyMap"],[13,44,22,16],[13,64,22,25,"iteratees"],[13,73,22,34],[13,75,22,36],[13,85,22,45,"iteratee"],[13,93,22,53],[13,95,22,55],[14,8,23,6],[14,12,23,10,"_$$_REQUIRE"],[14,23,23,10],[14,24,23,10,"_dependencyMap"],[14,38,23,10],[14,56,23,18,"iteratee"],[14,64,23,26],[14,65,23,27],[14,67,23,29],[15,10,24,8],[15,17,24,15],[15,27,24,24,"value"],[15,32,24,29],[15,34,24,31],[16,12,25,10],[16,19,25,17,"_$$_REQUIRE"],[16,30,25,17],[16,31,25,17,"_dependencyMap"],[16,45,25,17],[16,64,25,25,"value"],[16,69,25,30],[16,71,25,32,"iteratee"],[16,79,25,40],[16,80,25,41,"length"],[16,86,25,47],[16,91,25,52],[16,92,25,53],[16,95,25,56,"iteratee"],[16,103,25,64],[16,104,25,65],[16,105,25,66],[16,106,25,67],[16,109,25,70,"iteratee"],[16,117,25,78],[16,118,25,79],[17,10,26,8],[17,11,26,9],[18,8,27,6],[19,8,28,6],[19,15,28,13,"iteratee"],[19,23,28,21],[20,6,29,4],[20,7,29,5],[20,8,29,6],[21,4,30,2],[21,5,30,3],[21,11,30,9],[22,6,31,4,"iteratees"],[22,15,31,13],[22,18,31,16],[22,19,31,16,"_$$_REQUIRE"],[22,30,31,16],[22,31,31,16,"_dependencyMap"],[22,45,31,16],[22,64,31,26],[23,4,32,2],[24,4,34,2],[24,8,34,6,"index"],[24,13,34,11],[24,16,34,14],[24,17,34,15],[24,18,34,16],[25,4,35,2,"iteratees"],[25,13,35,11],[25,16,35,14,"_$$_REQUIRE"],[25,27,35,14],[25,28,35,14,"_dependencyMap"],[25,42,35,14],[25,62,35,23,"iteratees"],[25,71,35,32],[25,73,35,34,"_$$_REQUIRE"],[25,84,35,34],[25,85,35,34,"_dependencyMap"],[25,99,35,34],[25,120,35,34,"_$$_REQUIRE"],[25,131,35,34],[25,132,35,34,"_dependencyMap"],[25,146,35,34],[25,169,35,56],[25,170,35,57],[25,171,35,58],[26,4,37,2],[26,8,37,6,"result"],[26,14,37,12],[26,17,37,15,"_$$_REQUIRE"],[26,28,37,15],[26,29,37,15,"_dependencyMap"],[26,43,37,15],[26,62,37,23,"collection"],[26,72,37,33],[26,74,37,35],[26,84,37,44,"value"],[26,89,37,49],[26,91,37,51,"key"],[26,94,37,54],[26,96,37,56,"collection"],[26,106,37,66],[26,108,37,68],[27,6,38,4],[27,10,38,8,"criteria"],[27,18,38,16],[27,21,38,19,"_$$_REQUIRE"],[27,32,38,19],[27,33,38,19,"_dependencyMap"],[27,47,38,19],[27,67,38,28,"iteratees"],[27,76,38,37],[27,78,38,39],[27,88,38,48,"iteratee"],[27,96,38,56],[27,98,38,58],[28,8,39,6],[28,15,39,13,"iteratee"],[28,23,39,21],[28,24,39,22,"value"],[28,29,39,27],[28,30,39,28],[29,6,40,4],[29,7,40,5],[29,8,40,6],[30,6,41,4],[30,13,41,11],[31,8,41,13],[31,18,41,23],[31,20,41,25,"criteria"],[31,28,41,33],[32,8,41,35],[32,15,41,42],[32,17,41,44],[32,19,41,46,"index"],[32,24,41,51],[33,8,41,53],[33,15,41,60],[33,17,41,62,"value"],[34,6,41,68],[34,7,41,69],[35,4,42,2],[35,5,42,3],[35,6,42,4],[36,4,44,2],[36,11,44,9,"_$$_REQUIRE"],[36,22,44,9],[36,23,44,9,"_dependencyMap"],[36,37,44,9],[36,59,44,20,"result"],[36,65,44,26],[36,67,44,28],[36,77,44,37,"object"],[36,83,44,43],[36,85,44,45,"other"],[36,90,44,50],[36,92,44,52],[37,6,45,4],[37,13,45,11,"_$$_REQUIRE"],[37,24,45,11],[37,25,45,11,"_dependencyMap"],[37,39,45,11],[37,66,45,27,"object"],[37,72,45,33],[37,74,45,35,"other"],[37,79,45,40],[37,81,45,42,"orders"],[37,87,45,48],[37,88,45,49],[38,4,46,2],[38,5,46,3],[38,6,46,4],[39,2,47,0],[40,2,49,0,"module"],[40,8,49,6],[40,9,49,7,"exports"],[40,16,49,14],[40,19,49,17,"baseOrderBy"],[40,30,49,28],[41,0,49,29],[41,3]],"functionMap":{"names":["<global>","baseOrderBy","arrayMap$argument_1","<anonymous>","baseMap$argument_1","baseSortBy$argument_1"],"mappings":"AAA;ACmB;oCCE;eCE;SDE;KDG;mCGQ;uCFC;KEE;GHE;4BIE;GJE;CDC"}},"type":"js/module"}]}